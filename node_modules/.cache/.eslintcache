[{"/Users/ict/Documents/GitHub/startforproject/src/index.js":"1","/Users/ict/Documents/GitHub/startforproject/src/reportWebVitals.js":"2","/Users/ict/Documents/GitHub/startforproject/src/app/layout/App.js":"3","/Users/ict/Documents/GitHub/startforproject/src/app/store/configureStore.js":"4","/Users/ict/Documents/GitHub/startforproject/src/app/store/rootReducer.js":"5","/Users/ict/Documents/GitHub/mediasiya/src/index.js":"6","/Users/ict/Documents/GitHub/mediasiya/src/reportWebVitals.js":"7","/Users/ict/Documents/GitHub/mediasiya/src/app/layout/App.js":"8","/Users/ict/Documents/GitHub/mediasiya/src/app/store/configureStore.js":"9","/Users/ict/Documents/GitHub/mediasiya/src/app/store/rootReducer.js":"10","/Users/ict/Documents/GitHub/mediasiya/src/features/auth/Login.jsx":"11","/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/commonPage/Header.jsx":"12","/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/commonPage/Sidebar.jsx":"13","/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/commonPage/Footer.jsx":"14","/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/commonPage/SubHeader.jsx":"15","/Users/ict/Documents/GitHub/mediasiya/src/features/auth/authActions.js":"16","/Users/ict/Documents/GitHub/mediasiya/src/app/common/form/MyTextInput.jsx":"17","/Users/ict/Documents/GitHub/mediasiya/src/features/auth/authConstants.js":"18","/Users/ict/Documents/GitHub/mediasiya/src/app/async/asyncReducer.js":"19","/Users/ict/Documents/GitHub/mediasiya/src/features/auth/authReducer.js":"20","/Users/ict/Documents/GitHub/mediasiya/src/app/common/modal/ModalManager.jsx":"21","/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/applyPage/applyReducer.js":"22","/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/applyPage/applyConstants.js":"23","/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/applyPage/ApplyPage.jsx":"24","/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/applyPage/applyActions.js":"25","/Users/ict/Documents/GitHub/mediasiya/src/app/common/modal/modalReducer.js":"26","/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/applyPage/ApplyPageModal.jsx":"27","/Users/ict/Documents/GitHub/mediasiya/src/app/common/form/MyTextArea.jsx":"28","/Users/ict/Documents/GitHub/mediasiya/src/app/common/form/MySearchableSelect.jsx":"29","/Users/ict/Documents/GitHub/mediasiya/src/app/common/modal/ModalWrapper.jsx":"30","/Users/ict/Documents/GitHub/mediasiya/src/app/common/modal/Button.jsx":"31","/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/applyPage/SelectMediatorModal.jsx":"32","/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/applyPage/Widget.jsx":"33","/Users/ict/Documents/GitHub/mediasiya/src/app/common/form/MyCheckbox.jsx":"34","/Users/ict/Documents/GitHub/mediasiya/src/features/form/FormPage.jsx":"35","/Users/ict/Documents/GitHub/mediasiya/src/features/form/formReducer.js":"36","/Users/ict/Documents/GitHub/mediasiya/src/features/form/formConstants.js":"37","/Users/ict/Documents/GitHub/mediasiya/src/features/form/formActions.js":"38","/Users/ict/Documents/GitHub/mediasiya/src/app/common/form/MyTextInputWithMask.jsx":"39","/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/roles/council/councilPage/councilReducer.js":"40","/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/roles/citizen/citizenPage/citizenReducer.js":"41","/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/roles/mediator/mediatorPage/mediatorReducer.js":"42","/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/roles/council/councilPage/councilConstants.js":"43","/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/roles/mediator/mediatorPage/mediatorConstants.js":"44","/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/roles/citizen/citizenPage/citizenConstants.js":"45","/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/roles/mediator/mediatorPage/ViewModalForMediator.jsx":"46","/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/roles/citizen/citizenPage/ViewModalForCitizen.jsx":"47","/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/roles/council/councilPage/ViewModalForCouncil.jsx":"48","/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/roles/citizen/citizenPage/AddModalForCitizen.jsx":"49","/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/roles/mediator/mediatorPage/mediatorActions.js":"50","/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/roles/council/councilPage/councilActions.js":"51","/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/roles/citizen/citizenPage/citizenActions.js":"52","/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/roles/citizen/citizenPage/ApplyPageForCitizen.jsx":"53","/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/roles/mediator/mediatorPage/ApplyPageForMediator.jsx":"54","/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/roles/council/councilPage/ApplyPageForCouncil.jsx":"55"},{"size":1085,"mtime":1633292972162,"results":"56","hashOfConfig":"57"},{"size":362,"mtime":1633254206354,"results":"58","hashOfConfig":"57"},{"size":539,"mtime":1633292953142,"results":"59","hashOfConfig":"57"},{"size":341,"mtime":1633292322874,"results":"60","hashOfConfig":"57"},{"size":112,"mtime":1633292336534,"results":"61","hashOfConfig":"57"},{"size":1094,"mtime":1635506046990,"results":"62","hashOfConfig":"63"},{"size":362,"mtime":1633254206354,"results":"64","hashOfConfig":"63"},{"size":2872,"mtime":1635882123413,"results":"65","hashOfConfig":"63"},{"size":341,"mtime":1633292322874,"results":"66","hashOfConfig":"63"},{"size":909,"mtime":1635881477255,"results":"67","hashOfConfig":"63"},{"size":24451,"mtime":1635166044422,"results":"68","hashOfConfig":"63"},{"size":20609,"mtime":1635165634475,"results":"69","hashOfConfig":"63"},{"size":9169,"mtime":1635920154462,"results":"70","hashOfConfig":"63"},{"size":1022,"mtime":1633416207141,"results":"71","hashOfConfig":"63"},{"size":4283,"mtime":1635842487331,"results":"72","hashOfConfig":"63"},{"size":968,"mtime":1635314013973,"results":"73","hashOfConfig":"63"},{"size":446,"mtime":1635530134132,"results":"74","hashOfConfig":"63"},{"size":88,"mtime":1633352814946,"results":"75","hashOfConfig":"63"},{"size":1197,"mtime":1633783586267,"results":"76","hashOfConfig":"63"},{"size":1437,"mtime":1633505780134,"results":"77","hashOfConfig":"63"},{"size":1214,"mtime":1635881549284,"results":"78","hashOfConfig":"63"},{"size":2440,"mtime":1634227288387,"results":"79","hashOfConfig":"63"},{"size":635,"mtime":1633866107146,"results":"80","hashOfConfig":"63"},{"size":26875,"mtime":1634295839707,"results":"81","hashOfConfig":"63"},{"size":9610,"mtime":1635530125248,"results":"82","hashOfConfig":"63"},{"size":631,"mtime":1633291740410,"results":"83","hashOfConfig":"63"},{"size":71156,"mtime":1635799408207,"results":"84","hashOfConfig":"63"},{"size":409,"mtime":1633265534013,"results":"85","hashOfConfig":"63"},{"size":1489,"mtime":1633354078255,"results":"86","hashOfConfig":"63"},{"size":2163,"mtime":1633853441215,"results":"87","hashOfConfig":"63"},{"size":125,"mtime":1633853262757,"results":"88","hashOfConfig":"63"},{"size":4745,"mtime":1633953704379,"results":"89","hashOfConfig":"63"},{"size":1580,"mtime":1634131270280,"results":"90","hashOfConfig":"63"},{"size":1215,"mtime":1635851404531,"results":"91","hashOfConfig":"63"},{"size":70344,"mtime":1635595449151,"results":"92","hashOfConfig":"63"},{"size":1384,"mtime":1635518043286,"results":"93","hashOfConfig":"63"},{"size":355,"mtime":1635530137814,"results":"94","hashOfConfig":"63"},{"size":4462,"mtime":1635530140875,"results":"95","hashOfConfig":"63"},{"size":509,"mtime":1635530130650,"results":"96","hashOfConfig":"63"},{"size":873,"mtime":1635860595663,"results":"97","hashOfConfig":"63"},{"size":1514,"mtime":1635917511767,"results":"98","hashOfConfig":"63"},{"size":1155,"mtime":1635850035409,"results":"99","hashOfConfig":"63"},{"size":209,"mtime":1635855888343,"results":"100","hashOfConfig":"63"},{"size":281,"mtime":1635837463738,"results":"101","hashOfConfig":"63"},{"size":413,"mtime":1635917348312,"results":"102","hashOfConfig":"63"},{"size":40713,"mtime":1635881946466,"results":"103","hashOfConfig":"63"},{"size":31657,"mtime":1635882327003,"results":"104","hashOfConfig":"63"},{"size":31684,"mtime":1635881905154,"results":"105","hashOfConfig":"63"},{"size":51870,"mtime":1635918939649,"results":"106","hashOfConfig":"63"},{"size":2803,"mtime":1635881726951,"results":"107","hashOfConfig":"63"},{"size":2021,"mtime":1635881619926,"results":"108","hashOfConfig":"63"},{"size":3868,"mtime":1635917800024,"results":"109","hashOfConfig":"63"},{"size":10316,"mtime":1635882170263,"results":"110","hashOfConfig":"63"},{"size":8306,"mtime":1635882236845,"results":"111","hashOfConfig":"63"},{"size":10354,"mtime":1635882196737,"results":"112","hashOfConfig":"63"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ima7h9",{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},"16twjnk",{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"126"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"126"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"126"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"126"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"126"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"126"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"126"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"126"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"190"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"126"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"126"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"126"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"126"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"126"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"126"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"126"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"126"},"/Users/ict/Documents/GitHub/startforproject/src/index.js",[],"/Users/ict/Documents/GitHub/startforproject/src/reportWebVitals.js",[],["243","244"],"/Users/ict/Documents/GitHub/startforproject/src/app/layout/App.js",[],"/Users/ict/Documents/GitHub/startforproject/src/app/store/configureStore.js",[],"/Users/ict/Documents/GitHub/startforproject/src/app/store/rootReducer.js",[],"/Users/ict/Documents/GitHub/mediasiya/src/index.js",[],["245","246"],"/Users/ict/Documents/GitHub/mediasiya/src/reportWebVitals.js",[],"/Users/ict/Documents/GitHub/mediasiya/src/app/layout/App.js",["247","248"],"// import \"./App.css\";\nimport { Route } from \"react-router\";\nimport Login from \"../../features/auth/Login\";\nimport Header from \"../../features/dashboard/commonPage/Header\";\nimport Sidebar from \"../../features/dashboard/commonPage/Sidebar\";\nimport SubHeader from \"../../features/dashboard/commonPage/SubHeader\";\n// import HomePage from \"../../features/dashboard/homePage/HomePage\";\nimport Footer from \"../../features/dashboard/commonPage/Footer\";\nimport { ToastContainer } from \"react-toastify\";\nimport ModalManager from \"../common/modal/ModalManager\";\nimport React from \"react\";\nimport ApplyPage from \"../../features/dashboard/applyPage/ApplyPage\";\nimport FormPage from \"../../features/form/FormPage\";\nimport { useSelector } from \"react-redux\";\nimport ApplyPageForCitizen from \"../../features/dashboard/roles/citizen/citizenPage/ApplyPageForCitizen\";\nimport ApplyPageForMediator from \"../../features/dashboard/roles/mediator/mediatorPage/ApplyPageForMediator\";\nimport ApplyPageForCouncil from \"../../features/dashboard/roles/council/councilPage/ApplyPageForCouncil\";\nfunction App() {\n  const auth = useSelector((state) => state.auth);\n\n  // const { initialized } = useSelector((state) => state.async);\n  // useScript(\"../../../public/assets/js/app.js\")\n  // useScript(\"../../../public/assets/js/custom.js\")\n  // if(!initialized) return (\n  //   <div id=\"load_screen\"> <div class=\"loader\"> <div class=\"loader-content\">\n  //       <div class=\"spinner-grow align-self-center\"></div>\n  //   </div></div></div>\n  //  )\n\n  let role;\n  switch (auth.currentUser && auth.currentUser.role) {\n    case \"Citizen\":\n      role = ApplyPageForCitizen;\n      break;\n    case \"Mediatr\":\n      role = ApplyPageForMediator;\n\n      break;\n    case \"Council\":\n      role = ApplyPageForCouncil;\n    default:\n      break;\n  }\n  return (\n    <React.Fragment>\n      <ToastContainer position=\"bottom-right\" />\n      <ModalManager />\n\n      <Route exact path=\"/\" component={Login} />\n      <Route exact path=\"/form\" component={FormPage} />\n\n      <Route\n        path={\"/dashboard/(.+)\"}\n        render={() => (\n          <React.Fragment>\n            <Header />\n            <SubHeader />\n            {/* BEGIN MAIN CONTAINER */}\n            <div className=\"main-container\" id=\"container\">\n              <div className=\"overlay\"></div>\n              <div className=\"search-overlay\"></div>\n              {/* BEGIN SIDEBAR */}\n              <Sidebar />\n              {/* END SIDEBAR */}\n\n              {/* BEGIN PAGE CONTENT */}\n              <div id=\"content\" className=\"main-content\">\n                <Route exact path=\"/dashboard/apply\" component={role} />\n                <Footer />\n              </div>\n\n              {/* END PAGE CONTENT */}\n            </div>\n            {/* END MAIN CONTAINER */}\n          </React.Fragment>\n        )}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","/Users/ict/Documents/GitHub/mediasiya/src/app/store/configureStore.js",[],"/Users/ict/Documents/GitHub/mediasiya/src/app/store/rootReducer.js",[],"/Users/ict/Documents/GitHub/mediasiya/src/features/auth/Login.jsx",["249"],"import { Formik, Form } from \"formik\";\nimport React, { useEffect, useState } from \"react\";\nimport * as Yup from \"yup\";\n// #1b55e2\nimport \"./form-1.css\";\nimport \"./switches.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { signInUser } from \"./authActions\";\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport { Redirect, useHistory } from \"react-router\";\nexport default function Login() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [isSignup, setIsSignup] = useState(false);\n  const isSignupStyle = {\n    color: \"#fff\",\n    backgroundColor: \"#1b55e2\",\n  };\n  const { authenticated } = useSelector((state) => state.auth);\n  const { loading } = useSelector((state) => state.async);\n\n  useEffect(() => {\n    var togglePassword = document.getElementById(\"toggle-password\");\n\n    if (togglePassword) {\n      togglePassword.addEventListener(\"click\", function () {\n        var x = document.getElementById(\"password\");\n        if (x.type === \"password\") {\n          x.type = \"text\";\n        } else {\n          x.type = \"password\";\n        }\n      });\n    }\n  }, []);\n\n  if (authenticated) {\n    return <Redirect to=\"/dashboard/apply\" />;\n    // return history.push(\"/dashboard\");\n  }\n  return (\n    <React.Fragment>\n      <div className=\"form-container\">\n        <div className=\"form-form\">\n          <div className=\"form-form-wrap\">\n            <div className=\"form-container\">\n              <div className=\"form-content\">\n                <h1 className=\"mb-4\">\n                  <span className=\"brand-name\">Mediasiya</span> Şurası\n                </h1>\n                <div className=\"row mb-4\">\n                  <div className=\"col-md-6\">\n                    <button\n                      onClick={() => setIsSignup((prevState) => !prevState)}\n                      className={`btn ${\n                        !isSignup ? \"btn-primary\" : \"btn-outline-primary\"\n                      }  mb-2 text-center`}\n                    >\n                      Vətəndaş üçün\n                    </button>\n                  </div>\n                  <div className=\"col-md-6\">\n                    <button\n                      onClick={() => setIsSignup((prevState) => !prevState)}\n                      className={`btn ${\n                        isSignup ? \"btn-primary\" : \"btn-outline-primary\"\n                      }  mb-2 text-center`}\n                    >\n                      Mediator üçün\n                    </button>\n                  </div>\n                </div>\n\n                {isSignup ? (\n                  <Formik\n                    initialValues={{ username: \"\", password: \"\" }}\n                    validationSchema={Yup.object({\n                      login: Yup.string().required(\n                        \"Bu sahə mütləq doldurulmalıdır.\"\n                      ),\n                      password: Yup.string().required(\n                        \"Bu sahə mütləq doldurulmalıdır.\"\n                      ),\n                    })}\n                    onSubmit={(values, { setSubmitting, setErrors }) => {\n                      // console.log('ugurludur')\n                      dispatch(\n                        signInUser(\n                          history,\n                          {\n                            login: values.login,\n                            password: values.password,\n                          },\n                          \"user\"\n                        )\n                      );\n                      setSubmitting(false);\n                    }}\n                  >\n                    {({ isSubmitting, isValid, dirty, errors }) => (\n                      <Form className=\"text-left\">\n                        <div className=\"form\">\n                          <div\n                            id=\"username-field\"\n                            className=\"field-wrapper input\"\n                          >\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width=\"24\"\n                              height=\"24\"\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              strokeWidth=\"2\"\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              className=\"feather feather-user\"\n                            >\n                              <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"></path>\n                              <circle cx=\"12\" cy=\"7\" r=\"4\"></circle>\n                            </svg>\n                            <MyTextInput\n                              id=\"login\"\n                              name=\"login\"\n                              type=\"text\"\n                              className=\"form-control\"\n                              placeholder=\"İstifadəçi adı\"\n                            />\n                          </div>\n\n                          <div\n                            id=\"password-field\"\n                            className=\"field-wrapper input mb-2\"\n                          >\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width=\"24\"\n                              height=\"24\"\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              strokeWidth=\"2\"\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              className=\"feather feather-lock\"\n                            >\n                              <rect\n                                x=\"3\"\n                                y=\"11\"\n                                width=\"18\"\n                                height=\"11\"\n                                rx=\"2\"\n                                ry=\"2\"\n                              ></rect>\n                              <path d=\"M7 11V7a5 5 0 0 1 10 0v4\"></path>\n                            </svg>\n                            <MyTextInput\n                              id=\"password\"\n                              name=\"password\"\n                              type=\"password\"\n                              className=\"form-control\"\n                              placeholder=\"Şifrə\"\n                            />\n                          </div>\n                          <div className=\"d-sm-flex justify-content-between\">\n                            {/* <div className=\"field-wrapper toggle-pass\">\n                              <p className=\"d-inline-block\">Parolu Göstər</p>\n                              <label\n                                style={{\n                                  position: \"relative\",\n                                  display: \"inline-block\",\n                                  width: \"35px\",\n                                  height: \"18px\",\n                                }}\n                                className=\"switchLogin s-primary\"\n                              >\n                                <input\n                                  type=\"checkbox\"\n                                  id=\"toggle-password\"\n                                  className=\"d-none\"\n                                />\n                                <span\n                                  style={{\n                                    position: \"absolute\",\n                                    cursor: \"pointer\",\n                                    top: 0,\n                                    left: 0,\n                                    right: 0,\n                                    bottom: 0,\n                                    backgroundColor: \"#ebedf2\",\n                                    transition: \".4s\",\n                                  }}\n                                  className=\"slider round\"\n                                ></span>\n                              </label>\n                            </div> */}\n\n                            <div className=\"\">\n                              <button\n                                disabled={!isValid || !dirty || isSubmitting}\n                                type=\"submit\"\n                                // name=\"time\"\n                                className=\"btn btn-primary float-right  btn-lg mt-3 \"\n                              >\n                                {loading && (\n                                  <svg\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                    width={24}\n                                    height={24}\n                                    viewBox=\"0 0 24 24\"\n                                    fill=\"none\"\n                                    stroke=\"currentColor\"\n                                    strokeWidth={2}\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    className=\"feather feather-loader spin mr-2\"\n                                  >\n                                    <line x1={12} y1={2} x2={12} y2={6} />\n                                    <line x1={12} y1={18} x2={12} y2={22} />\n                                    <line\n                                      x1=\"4.93\"\n                                      y1=\"4.93\"\n                                      x2=\"7.76\"\n                                      y2=\"7.76\"\n                                    />\n                                    <line\n                                      x1=\"16.24\"\n                                      y1=\"16.24\"\n                                      x2=\"19.07\"\n                                      y2=\"19.07\"\n                                    />\n                                    <line x1={2} y1={12} x2={6} y2={12} />\n                                    <line x1={18} y1={12} x2={22} y2={12} />\n                                    <line\n                                      x1=\"4.93\"\n                                      y1=\"19.07\"\n                                      x2=\"7.76\"\n                                      y2=\"16.24\"\n                                    />\n                                    <line\n                                      x1=\"16.24\"\n                                      y1=\"7.76\"\n                                      x2=\"19.07\"\n                                      y2=\"4.93\"\n                                    />\n                                  </svg>\n                                )}\n                                Daxil Ol\n                              </button>\n                            </div>\n                          </div>\n                        </div>\n                      </Form>\n                    )}\n                  </Formik>\n                ) : (\n                  <Formik\n                    initialValues={{\n                      docSeries: \"\",\n                      docNumber: \"\",\n                      pin: \"\",\n                      dateOfBirth: \"\",\n                    }}\n                    validationSchema={Yup.object({\n                      docSeries: Yup.string().required(\n                        \"Bu sahə mütləq doldurulmalıdır.\"\n                      ),\n                      docNumber: Yup.string().required(\n                        \"Bu sahə mütləq doldurulmalıdır.\"\n                      ),\n                      pin: Yup.string().required(\n                        \"Bu sahə mütləq doldurulmalıdır.\"\n                      ),\n                      dateOfBirth: Yup.string().required(\n                        \"Bu sahə mütləq doldurulmalıdır.\"\n                      ),\n                    })}\n                    onSubmit={(values, { setSubmitting, setErrors }) => {\n                      // console.log('ugurludur')\n                      dispatch(\n                        signInUser(history, {\n                          docSeries: values.docSeries,\n                          docNumber: values.docNumber,\n                          pin: values.pin,\n                          dateOfBirth: values.dateOfBirth,\n                        },\"citizen\")\n                      );\n                      setSubmitting(false);\n                    }}\n                  >\n                    {({ isSubmitting, isValid, dirty, errors }) => (\n                      <Form className=\"text-left\">\n                        <div className=\"form\">\n                         <div className=\"row\">\n                           <div className=\"col-md-6\">\n                           <div\n                            id=\"username-field\"\n                            className=\"field-wrapper input\"\n                          >\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width=\"24\"\n                              height=\"24\"\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              strokeWidth=\"2\"\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              className=\"feather feather-user\"\n                            >\n                              <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"></path>\n                              <circle cx=\"12\" cy=\"7\" r=\"4\"></circle>\n                            </svg>\n                            <MyTextInput\n                              id=\"docSeries\"\n                              name=\"docSeries\"\n                              type=\"text\"\n                              className=\"form-control\"\n                              placeholder=\"Ş/V seriyası\"\n                            />\n                          </div>\n                           </div>\n                           <div className=\"col-md-6\">\n\n                          <div\n                            id=\"username-field\"\n                            className=\"field-wrapper input\"\n                          >\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              strokeWidth={2}\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              className=\"feather feather-user-check\"\n                            >\n                              <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n                              <circle cx=\"8.5\" cy={7} r={4} />\n                              <polyline points=\"17 11 19 13 23 9\" />\n                            </svg>\n                            <MyTextInput\n                              id=\"docNumber\"\n                              name=\"docNumber\"\n                              type=\"text\"\n                              className=\"form-control\"\n                              placeholder=\"Ş/V nömrəsi\"\n                            />\n                          </div>\n                          \n                           </div>\n\n                         </div>\n\n                          <div\n                            id=\"username-field\"\n                            className=\"field-wrapper input\"\n                          >\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              strokeWidth={2}\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              className=\"feather feather-trello\"\n                            >\n                              <rect\n                                x={3}\n                                y={3}\n                                width={18}\n                                height={18}\n                                rx={2}\n                                ry={2}\n                              />\n                              <rect x={7} y={7} width={3} height={9} />\n                              <rect x={14} y={7} width={3} height={5} />\n                            </svg>\n                            <MyTextInput\n                              id=\"pin\"\n                              name=\"pin\"\n                              type=\"text\"\n                              className=\"form-control\"\n                              placeholder=\"FİN\"\n                            />\n                          </div>\n                          <div\n                            id=\"password-field\"\n                            className=\"field-wrapper input mb-2\"\n                          >\n                            <svg\n                              viewBox=\"0 0 24 24\"\n                              width={24}\n                              height={24}\n                              stroke=\"currentColor\"\n                              strokeWidth={2}\n                              fill=\"none\"\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              className=\"css-i6dzq1\"\n                            >\n                              <rect\n                                x={3}\n                                y={4}\n                                width={18}\n                                height={18}\n                                rx={2}\n                                ry={2}\n                              />\n                              <line x1={16} y1={2} x2={16} y2={6} />\n                              <line x1={8} y1={2} x2={8} y2={6} />\n                              <line x1={3} y1={10} x2={21} y2={10} />\n                            </svg>\n                            <MyTextInput\n                              id=\"dateOfBirth\"\n                              name=\"dateOfBirth\"\n                              type=\"date\"\n                              className=\"form-control\"\n                              placeholder=\"Şifrə\"\n                            />\n                          </div>\n                          <div className=\"d-sm-flex justify-content-between\">\n                            {/* <div className=\"field-wrapper toggle-pass\">\n                              <p className=\"d-inline-block\">Parolu Göstər</p>\n                              <label\n                                style={{\n                                  position: \"relative\",\n                                  display: \"inline-block\",\n                                  width: \"35px\",\n                                  height: \"18px\",\n                                }}\n                                className=\"switchLogin s-primary\"\n                              >\n                                <input\n                                  type=\"checkbox\"\n                                  id=\"toggle-password\"\n                                  className=\"d-none\"\n                                />\n                                <span\n                                  style={{\n                                    position: \"absolute\",\n                                    cursor: \"pointer\",\n                                    top: 0,\n                                    left: 0,\n                                    right: 0,\n                                    bottom: 0,\n                                    backgroundColor: \"#ebedf2\",\n                                    transition: \".4s\",\n                                  }}\n                                  className=\"slider round\"\n                                ></span>\n                              </label>\n                            </div> */}\n\n                            <div className=\"\">\n                              <button\n                                disabled={!isValid || !dirty || isSubmitting}\n                                type=\"submit\"\n                                // name=\"time\"\n                                className=\"btn btn-primary float-right  btn-lg mt-3 \"\n                              >\n                                {loading && (\n                                  <svg\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                    width={24}\n                                    height={24}\n                                    viewBox=\"0 0 24 24\"\n                                    fill=\"none\"\n                                    stroke=\"currentColor\"\n                                    strokeWidth={2}\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    className=\"feather feather-loader spin mr-2\"\n                                  >\n                                    <line x1={12} y1={2} x2={12} y2={6} />\n                                    <line x1={12} y1={18} x2={12} y2={22} />\n                                    <line\n                                      x1=\"4.93\"\n                                      y1=\"4.93\"\n                                      x2=\"7.76\"\n                                      y2=\"7.76\"\n                                    />\n                                    <line\n                                      x1=\"16.24\"\n                                      y1=\"16.24\"\n                                      x2=\"19.07\"\n                                      y2=\"19.07\"\n                                    />\n                                    <line x1={2} y1={12} x2={6} y2={12} />\n                                    <line x1={18} y1={12} x2={22} y2={12} />\n                                    <line\n                                      x1=\"4.93\"\n                                      y1=\"19.07\"\n                                      x2=\"7.76\"\n                                      y2=\"16.24\"\n                                    />\n                                    <line\n                                      x1=\"16.24\"\n                                      y1=\"7.76\"\n                                      x2=\"19.07\"\n                                      y2=\"4.93\"\n                                    />\n                                  </svg>\n                                )}\n                                Daxil Ol\n                              </button>\n                            </div>\n                          </div>\n                        </div>\n                      </Form>\n                    )}\n                  </Formik>\n                )}\n\n                {/* <p className=\"terms-conditions\">© 2019 All Rights Reserved. <a href=\"index.html\">CORK</a> is a product of Designreset. <a href=\"javascript:void(0);\">Cookie Preferences</a>, <a href=\"javascript:void(0);\">Privacy</a>, and <a href=\"javascript:void(0);\">Terms</a>.</p> */}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"form-image\">\n          <div className=\"l-image\"></div>\n        </div>\n      </div>\n      <div\n        style={{ display: \"none\" }}\n        className=\"sidebar-wrapper sidebar-theme\"\n      >\n        <nav id=\"sidebar\">\n          <div className=\"shadow-bottom\" />\n          <ul\n            className=\"list-unstyled menu-categories ps ps--active-y\"\n            id=\"accordionExample\"\n          >\n            <div className=\"ps__rail-x\" style={{ left: 0, bottom: 0 }}>\n              <div\n                className=\"ps__thumb-x\"\n                tabIndex={0}\n                style={{ left: 0, width: 0 }}\n              />\n            </div>\n            <div\n              className=\"ps__rail-y\"\n              style={{ top: 0, height: 560, right: \"-4px\" }}\n            >\n              <div\n                className=\"ps__thumb-y\"\n                tabIndex={0}\n                style={{ top: 0, height: 300 }}\n              />\n            </div>\n          </ul>\n        </nav>\n      </div>\n    </React.Fragment>\n  );\n}\n","/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/commonPage/Header.jsx",["250","251"],"import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n// import useScript from \"../../../app/common/loadJs/loadJs\";\nimport { signOutUser } from \"../../auth/authActions\";\n\nexport default function Header() {\n  const dispatch = useDispatch();\n  // useScript(\"../../../../public/assets/js/app.js\");\n  const auth = useSelector((state) => state.auth);\n  // useEffect(() => {\n  //   if (auth.authenticated === false) {\n  //     return <Redirect to=\"/\" />;\n\n  //   }\n  // }, []);\n  // if (auth.authenticated === false) {\n  //   return <Redirect to=\"/\" />;\n  // }\n  if (auth.authenticated === false) {\n    return <Redirect to=\"/\" />;\n  }\n  return (\n    <div className=\"header-container fixed-top\">\n      <header className=\"header navbar navbar-expand-sm\">\n        <ul className=\"navbar-item theme-brand flex-row  text-center\">\n          {/* <li className=\"nav-item theme-logo\">\n            <a href=\"index.html\">\n              <img\n                src=\"https://zairov1905.github.io/certus-deploy/assets/img/apple-touch-icon.png\"\n                className=\"navbar-logo\"\n                alt=\"logo\"\n              />\n            </a>\n          </li> */}\n          <li className=\"nav-item theme-text\">\n            <a href=\"index.html\" className=\"nav-link\">\n              {\" \"}\n              {/* Mediasiya şurası{\" \"} */}\n              Şəxsi kabinet -{\" \"}\n              {auth.currentUser.role === \"Council\" &&\n                `${auth.currentUser && \"Mediasiya Şurası\"}`}\n              {auth.currentUser.role === \"Citizen\" &&\n                `${\n                  auth.currentUser.person && auth.currentUser.person.firstName\n                }  ${\n                  auth.currentUser.person && auth.currentUser.person.lastName\n                }`}\n              {auth.currentUser.role === \"Mediatr\" &&\n                `${\n                  auth.currentUser.mediatr && auth.currentUser.mediatr.firstName\n                }  ${\n                  auth.currentUser.mediatr && auth.currentUser.mediatr.lastName\n                }`}\n              {auth.currentUser.role === \"Office\" &&\n                `${\n                  auth.currentUser.office && auth.currentUser.office.officeName\n                }`}\n            </a>\n          </li>\n        </ul>\n        <ul className=\"navbar-item flex-row ml-md-0 ml-auto\">\n          <li className=\"nav-item align-self-center search-animated\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width={24}\n              height={24}\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth={2}\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              className=\"feather feather-search toggle-search\"\n            >\n              <circle cx={11} cy={11} r={8} />\n              <line x1={21} y1={21} x2=\"16.65\" y2=\"16.65\" />\n            </svg>\n            <form\n              className=\"form-inline search-full form-inline search\"\n              role=\"search\"\n            >\n              <div className=\"search-bar\">\n                <input\n                  type=\"text\"\n                  className=\"form-control search-form-control  ml-lg-auto\"\n                  placeholder=\"Axtar\"\n                />\n              </div>\n            </form>\n          </li>\n        </ul>\n        <ul className=\"navbar-item flex-row ml-md-auto\">\n          {/* <li className=\"nav-item dropdown language-dropdown\">\n            <a\n              href=\"#\"\n              onClick={(e) => e.preventDefault()}\n              className=\"nav-link dropdown-toggle\"\n              id=\"language-dropdown\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              <img src=\"https://zairov1905.github.io/certus-deploy/assets/img/ca.png\" className=\"flag-width\" alt=\"flag\" />\n            </a>\n            <div\n              className=\"dropdown-menu position-absolute\"\n              aria-labelledby=\"language-dropdown\"\n            >\n              <a\n                className=\"dropdown-item d-flex\"\n                href=\"#\"\n                onClick={(e) => e.preventDefault()}\n              >\n                <img\n                  src=\"https://zairov1905.github.io/certus-deploy/assets/img/de.png\"\n                  className=\"flag-width\"\n                  alt=\"flag\"\n                />{\" \"}\n                <span className=\"align-self-center\">&nbsp;German</span>\n              </a>\n              <a className=\"dropdown-item d-flex\" href=\"#\">\n                <img\n                  src=\"https://zairov1905.github.io/certus-deploy/assets/img/jp.png\"\n                  className=\"flag-width\"\n                  alt=\"flag\"\n                />{\" \"}\n                <span className=\"align-self-center\">&nbsp;Japanese</span>\n              </a>\n              <a\n                className=\"dropdown-item d-flex\"\n                href=\"#\"\n                onClick={(e) => e.preventDefault()}\n              >\n                <img\n                  src=\"https://zairov1905.github.io/certus-deploy/assets/img/fr.png\"\n                  className=\"flag-width\"\n                  alt=\"flag\"\n                />{\" \"}\n                <span className=\"align-self-center\">&nbsp;French</span>\n              </a>\n              <a\n                className=\"dropdown-item d-flex\"\n                href=\"#\"\n                onClick={(e) => e.preventDefault()}\n              >\n                <img\n                  src=\"https://zairov1905.github.io/certus-deploy/assets/img/ca.png\"\n                  className=\"flag-width\"\n                  alt=\"flag\"\n                />{\" \"}\n                <span className=\"align-self-center\">&nbsp;English</span>\n              </a>\n            </div>\n          </li>\n          <li className=\"nav-item dropdown message-dropdown\">\n            <a\n              href=\"#\"\n              onClick={(e) => e.preventDefault()}\n              className=\"nav-link dropdown-toggle\"\n              id=\"messageDropdown\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width={24}\n                height={24}\n                viewBox=\"0 0 24 24\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeWidth={2}\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                className=\"feather feather-mail\"\n              >\n                <path d=\"M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z\" />\n                <polyline points=\"22,6 12,13 2,6\" />\n              </svg>\n            </a>\n            <div\n              className=\"dropdown-menu p-0 position-absolute\"\n              aria-labelledby=\"messageDropdown\"\n            >\n              <div>\n                <a className=\"dropdown-item\">\n                  <div>\n                    <div className=\"media\">\n                      <div className=\"user-img\">\n                        <img\n                          className=\"usr-img rounded-circle\"\n                          src=\"https://zairov1905.github.io/certus-deploy/assets/img/90x90.jpg\"\n                          alt=\"profile\"\n                        />\n                      </div>\n                      <div className=\"media-body\">\n                        <div>\n                          <h5 className=\"usr-name\">Kara Young</h5>\n                          <p className=\"msg-title\">ACCOUNT UPDATE</p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </a>\n                <a className=\"dropdown-item\">\n                  <div>\n                    <div className=\"media\">\n                      <div className=\"user-img\">\n                        <img\n                          className=\"usr-img rounded-circle\"\n                          src=\"https://zairov1905.github.io/certus-deploy/assets/img/90x90.jpg\"\n                          alt=\"profile\"\n                        />\n                      </div>\n                      <div className=\"media-body\">\n                        <div>\n                          <h5 className=\"usr-name\">Daisy Anderson</h5>\n                          <p className=\"msg-title\">ACCOUNT UPDATE</p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </a>\n                <a className=\"dropdown-item\">\n                  <div>\n                    <div className=\"media\">\n                      <div className=\"user-img\">\n                        <img\n                          className=\"usr-img rounded-circle\"\n                          src=\"https://zairov1905.github.io/certus-deploy/assets/img/90x90.jpg\"\n                          alt=\"profile\"\n                        />\n                      </div>\n                      <div className=\"media-body\">\n                        <div>\n                          <h5 className=\"usr-name\">Oscar Garner</h5>\n                          <p className=\"msg-title\">ACCOUNT UPDATE</p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </a>\n              </div>\n            </div>\n          </li>\n          <li className=\"nav-item dropdown notification-dropdown\">\n            <a\n              href=\"#\"\n              onClick={(e) => e.preventDefault()}\n              className=\"nav-link dropdown-toggle\"\n              id=\"notificationDropdown\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width={24}\n                height={24}\n                viewBox=\"0 0 24 24\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeWidth={2}\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                className=\"feather feather-bell\"\n              >\n                <path d=\"M18 8A6 6 0 0 0 6 8c0 7-3 9-3 9h18s-3-2-3-9\" />\n                <path d=\"M13.73 21a2 2 0 0 1-3.46 0\" />\n              </svg>\n              <span className=\"badge badge-success\" />\n            </a>\n            <div\n              className=\"dropdown-menu position-absolute\"\n              aria-labelledby=\"notificationDropdown\"\n            >\n              <div className=\"notification-scroll\">\n                <div className=\"dropdown-item\">\n                  <div className=\"media\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width={24}\n                      height={24}\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeWidth={2}\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      className=\"feather feather-heart\"\n                    >\n                      <path d=\"M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z\" />\n                    </svg>\n                    <div className=\"media-body\">\n                      <div className=\"notification-para\">\n                        <span className=\"user-name\">Shaun Park</span> likes your\n                        photo.\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"dropdown-item\">\n                  <div className=\"media\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width={24}\n                      height={24}\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeWidth={2}\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      className=\"feather feather-share-2\"\n                    >\n                      <circle cx={18} cy={5} r={3} />\n                      <circle cx={6} cy={12} r={3} />\n                      <circle cx={18} cy={19} r={3} />\n                      <line x1=\"8.59\" y1=\"13.51\" x2=\"15.42\" y2=\"17.49\" />\n                      <line x1=\"15.41\" y1=\"6.51\" x2=\"8.59\" y2=\"10.49\" />\n                    </svg>\n                    <div className=\"media-body\">\n                      <div className=\"notification-para\">\n                        <span className=\"user-name\">Kelly Young</span> shared\n                        your post\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"dropdown-item\">\n                  <div className=\"media\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width={24}\n                      height={24}\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeWidth={2}\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      className=\"feather feather-tag\"\n                    >\n                      <path d=\"M20.59 13.41l-7.17 7.17a2 2 0 0 1-2.83 0L2 12V2h10l8.59 8.59a2 2 0 0 1 0 2.82z\" />\n                      <line x1={7} y1={7} x2={7} y2={7} />\n                    </svg>\n                    <div className=\"media-body\">\n                      <div className=\"notification-para\">\n                        <span className=\"user-name\">Kelly Young</span> mentioned\n                        you in comment.\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </li>\n          */}\n          <li className=\"nav-item dropdown user-profile-dropdown\">\n            <a\n              href=\"#\"\n              onClick={(e) => e.preventDefault()}\n              className=\"nav-link dropdown-toggle user\"\n              id=\"userProfileDropdown\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              <img src=\"/assets/img/90x90.jpg\" alt=\"avatar\" />\n            </a>\n            <div\n              className=\"dropdown-menu position-absolute\"\n              aria-labelledby=\"userProfileDropdown\"\n            >\n              <div>\n                <div className=\"dropdown-item\">\n                  <a href=\"/apply\" style={{ padding: \"9px 6px\" }}>\n                    {auth.currentUser.role === \"Citizen\" ? (\n                      <div\n                        className=\"rounded-circle\"\n                        style={{\n                          backgroundColor: \"#ebedf2\",\n\n                          float: \"left\",\n                          // padding: \"2px\",\n                          marginRight: \"5px\",\n                          marginTop: \"-7px\",\n                          width: \"35px\",\n                          height: \"35px\",\n                          overflow: \"hidden\",\n                          boxShadow: \"0px 1px 2px #000\",\n                        }}\n                      >\n                        <img\n                          style={{ margin: \"0px 3px\" }}\n                          width=\"30px\"\n                          className=\"img-fluid text-center\"\n                          src={`data:image/png;base64, ${\n                            auth.currentUser.person &&\n                            auth.currentUser.person.image\n                          }`}\n                          alt=\"Red dot\"\n                        />\n                      </div>\n                    ) : (\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width={24}\n                        height={24}\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        strokeWidth={2}\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        className=\"feather feather-user\"\n                      >\n                        <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\" />\n                        <circle cx={12} cy={7} r={4} />\n                      </svg>\n                    )}\n                    {auth.currentUser.role === \"Council\" &&\n                      `${auth.currentUser && \"Admin\"}`}\n                    {auth.currentUser.role === \"Citizen\" &&\n                      `${\n                        auth.currentUser.person &&\n                        auth.currentUser.person.firstName\n                      }  ${\n                        auth.currentUser.person &&\n                        auth.currentUser.person.lastName\n                      }`}\n                    {auth.currentUser.role === \"Mediatr\" &&\n                      `${\n                        auth.currentUser.mediatr &&\n                        auth.currentUser.mediatr.firstName\n                      }  ${\n                        auth.currentUser.mediatr &&\n                        auth.currentUser.mediatr.lastName\n                      }`}\n                    {auth.currentUser.role === \"Office\" &&\n                      `${\n                        auth.currentUser.office &&\n                        auth.currentUser.office.officeName\n                      }`}\n                  </a>\n                </div>\n                {/* <div className=\"dropdown-item\">\n                  <a href=\"apps_mailbox.html\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width={24}\n                      height={24}\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeWidth={2}\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      className=\"feather feather-inbox\"\n                    >\n                      <polyline points=\"22 12 16 12 14 15 10 15 8 12 2 12\" />\n                      <path d=\"M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z\" />\n                    </svg>{\" \"}\n                    Inbox\n                  </a>\n                </div>\n                <div className=\"dropdown-item\">\n                  <a href=\"auth_lockscreen.html\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width={24}\n                      height={24}\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeWidth={2}\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      className=\"feather feather-lock\"\n                    >\n                      <rect x={3} y={11} width={18} height={11} rx={2} ry={2} />\n                      <path d=\"M7 11V7a5 5 0 0 1 10 0v4\" />\n                    </svg>{\" \"}\n                    Lock Screen\n                  </a>\n                </div>\n                */}\n                <div className=\"dropdown-item\">\n                  <Link\n                    to=\"#\"\n                    onClick={() => dispatch(signOutUser())}\n                    style={{ padding: \"9px 6px\" }}\n                  >\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width={24}\n                      height={24}\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeWidth={2}\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      className=\"feather feather-log-out\"\n                    >\n                      <path d=\"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4\" />\n                      <polyline points=\"16 17 21 12 16 7\" />\n                      <line x1={21} y1={12} x2={9} y2={12} />\n                    </svg>{\" \"}\n                    Çıxış\n                  </Link>\n                </div>\n              </div>\n            </div>\n          </li>\n        </ul>\n      </header>\n    </div>\n  );\n}\n","/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/commonPage/Sidebar.jsx",["252"],"/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/commonPage/Footer.jsx",[],"/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/commonPage/SubHeader.jsx",["253","254"],"import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nexport default function SubHeader() {\n  const location = useLocation();\n  console.log(location);\n  let currentLocation;\n  switch (location.pathname) {\n    case \"/dashboard/apply\":\n      currentLocation = \"Müraciət\";\n      break;\n    case \"/employees\":\n\n    default:\n      break;\n  }\n  return (\n    <div className=\"sub-header-container\">\n      <header className=\"header navbar navbar-expand-sm\">\n        <a\n          href=\"#\"\n          onClick={(e) => e.preventDefault()}\n          className=\"sidebarCollapse\"\n          data-placement=\"bottom\"\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-menu\"\n          >\n            <line x1={3} y1={12} x2={21} y2={12} />\n            <line x1={3} y1={6} x2={21} y2={6} />\n            <line x1={3} y1={18} x2={21} y2={18} />\n          </svg>\n        </a>\n        <ul className=\"navbar-nav flex-row\">\n          <li>\n            <div className=\"page-header\">\n              <nav className=\"breadcrumb-one\" aria-label=\"breadcrumb\">\n                <ol className=\"breadcrumb\">\n                  <li className=\"breadcrumb-item\">\n                    <Link to=\"/\">Ana Səhifə</Link>\n                  </li>\n                  <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                    <span>{currentLocation}</span>\n                  </li>\n                </ol>\n              </nav>\n            </div>\n          </li>\n        </ul>\n        {/* <ul className=\"navbar-nav flex-row ml-auto \">\n          <li className=\"nav-item more-dropdown\">\n            <div className=\"dropdown  custom-dropdown-icon\">\n              <a\n                className=\"dropdown-toggle btn\"\n                href=\"#\"\n                role=\"button\"\n                id=\"customDropdown\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              >\n                <span>Settings</span>{\" \"}\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width={24}\n                  height={24}\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-chevron-down\"\n                >\n                  <polyline points=\"6 9 12 15 18 9\" />\n                </svg>\n              </a>\n              <div\n                className=\"dropdown-menu dropdown-menu-right\"\n                aria-labelledby=\"customDropdown\"\n              >\n                <a\n                  className=\"dropdown-item\"\n                  data-value=\"Settings\"\n                  href=\"#\"\n                  onClick={(e) => e.preventDefault()}\n                >\n                  Settings\n                </a>\n                <a\n                  className=\"dropdown-item\"\n                  data-value=\"Mail\"\n                  href=\"#\"\n                  onClick={(e) => e.preventDefault()}\n                >\n                  Mail\n                </a>\n                <a\n                  className=\"dropdown-item\"\n                  data-value=\"Print\"\n                  href=\"#\"\n                  onClick={(e) => e.preventDefault()}\n                >\n                  Print\n                </a>\n                <a\n                  className=\"dropdown-item\"\n                  data-value=\"Download\"\n                  href=\"#\"\n                  onClick={(e) => e.preventDefault()}\n                >\n                  Download\n                </a>\n                <a\n                  className=\"dropdown-item\"\n                  data-value=\"Share\"\n                  href=\"#\"\n                  onClick={(e) => e.preventDefault()}\n                >\n                  Share\n                </a>\n              </div>\n            </div>\n          </li>\n        </ul>\n       */}\n      </header>\n    </div>\n  );\n}\n","/Users/ict/Documents/GitHub/mediasiya/src/features/auth/authActions.js",[],"/Users/ict/Documents/GitHub/mediasiya/src/app/common/form/MyTextInput.jsx",[],"/Users/ict/Documents/GitHub/mediasiya/src/features/auth/authConstants.js",[],"/Users/ict/Documents/GitHub/mediasiya/src/app/async/asyncReducer.js",[],"/Users/ict/Documents/GitHub/mediasiya/src/features/auth/authReducer.js",[],"/Users/ict/Documents/GitHub/mediasiya/src/app/common/modal/ModalManager.jsx",[],"/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/applyPage/applyReducer.js",[],"/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/applyPage/applyConstants.js",[],"/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/applyPage/ApplyPage.jsx",["255","256","257","258","259","260","261","262","263","264"],"import moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport DataTable, { defaultThemes } from \"react-data-table-component\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { openModal } from \"../../../app/common/modal/modalReducer\";\n\nimport {\n  assignMediator,\n  deleteApply,\n  loadApply,\n  loadPrint,\n} from \"./applyActions\";\nexport default function ApplyPage() {\n  const auth = useSelector((state) => state.auth);\n  const async = useSelector((state) => state.async);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadApply({ pageSize: 100 }));\n  }, dispatch);\n  const [perPage, setPerPage] = useState(10);\n  const [PageNumber, setPageNumber] = useState(1);\n  const { applys, totalCount } = useSelector((state) => state.applys);\n  const print = useSelector((state) => state.applys.prints);\n  const [hover, sethover] = useState(false);\n  const [target, setTarget] = useState({ id: null, name: null });\n\n  const data = applys;\n  const buttonStyleAdd = {\n    padding: \"9px\",\n    background: \"#ffffff\",\n    // fontSize: \"0.8em\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    // marginRight: \"35px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 64%)\",\n    // width: \"400px\",\n    // height: \"41px\",\n    color: \"#1b55e2\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonStyle = {\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    marginRight: \"35px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"43px\",\n    height: \"41px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonStyle1 = {\n    //   '&:hover':{\n    //     background:'#sdsdss'\n    //   },\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    marginRight: \"2px\",\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"36px\",\n    height: \"34px\",\n    // color: \"#1b55e2\",\n    // fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonHover = {\n    color: \"#1b55e2\",\n    fill: \"rgba(27, 85, 226, 0.23921568627450981)\",\n  };\n  const handlePageChange = (page) => {\n    dispatch(loadApply({ s: page, take: perPage }));\n    setPageNumber(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    dispatch(loadApply({ s: page, take: newPerPage }));\n    setPerPage(newPerPage);\n  };\n\n  const actions = (\n    <span\n      type=\"button\"\n      data-toggle=\"modal\"\n      data-target=\"#exampleModal\"\n      data-name=\"add\"\n      onClick={() => {\n        dispatch(\n          openModal({\n            modalType: \"ApplyPageModal\",\n            modalProps: null,\n          })\n        );\n      }}\n      onMouseEnter={(e) => {\n        sethover(true);\n        setTarget({\n          ...target,\n          name: e.target.getAttribute(\"data-name\"),\n        });\n      }}\n      onMouseLeave={() => {\n        sethover(false);\n        setTarget(null);\n      }}\n      style={{\n        ...buttonStyleAdd,\n        ...(hover && target.name === \"add\" && buttonHover),\n      }}\n    >\n      Mediatora müraciət\n      <svg\n        // type=\"button\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width={24}\n        height={24}\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeWidth={2}\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        className=\"feather feather-plus icon-container\"\n      >\n        <line x1={12} y1={5} x2={12} y2={19} />\n        <line x1={5} y1={12} x2={19} y2={12} />\n      </svg>\n    </span>\n  );\n\n  const columns =\n    auth.currentUser && auth.currentUser.role === \"Council\"\n      ? [\n          {\n            name: \"Müraciət tarixi\",\n            cell: (apply) => (\n              <p>{moment(apply.createdDate).format(\"DD-MM-YYYY\")}</p>\n            ),\n            maxWidth: \"150px\",\n            // sortable: true,\n          },\n          {\n            name: \"Müraciət edən şəxs\",\n            cell: (apply) => (\n              <p>{`${apply.person.firstName} ${apply.person.lastName} ${apply.person.middleName}`}</p>\n            ),\n            // sortable:true,\n          },\n          {\n            name: \"Mediator\",\n            cell: (apply) => {\n              // for user\n              if (apply.selectedMediatr) {\n                return `${apply.selectedMediatr.firstName} ${apply.selectedMediatr.lastName}`;\n              } else {\n                return <p>Mediator təyin edilməyib</p>;\n              }\n            },\n          },\n          {\n            name: \"Məhkəmə\",\n            selector: \"courtName\",\n          },\n          {\n            name: \"Status\",\n            // selector: \"status\",\n            cell: (apply) => <p>{apply.status.statusName}</p>,\n            maxWidth: \"164px\",\n          },\n          {\n            name: \"Action\",\n            cell: (apply) => (\n              <div className=\"action-btn\">\n                <svg\n                  type=\"button\"\n                  data-toggle=\"modal\"\n                  data-target=\"#exampleModal\"\n                  data-name=\"edit\"\n                  onClick={() => {\n                    dispatch(\n                      openModal({\n                        modalType: \"ApplyPageModal\",\n                        modalProps: { apply },\n                      })\n                    );\n                  }}\n                  id={apply.id}\n                  onMouseEnter={(e) => {\n                    sethover(true);\n                    setTarget({\n                      ...target,\n                      id: e.target.id,\n                      name: e.target.getAttribute(\"data-name\"),\n                    });\n                    // console.log(e.target.getAttribute('data-name'))\n                  }}\n                  onMouseLeave={() => {\n                    sethover(false);\n                    setTarget();\n                  }}\n                  style={{\n                    ...buttonStyle1,\n                    ...(hover &&\n                      target.id === `${apply.id}` &&\n                      target.name === \"edit\" &&\n                      buttonHover),\n                  }}\n                  className=\"icon-hover btn btn-rounded btn-primary mb-2 mr-4\"\n                  viewBox=\"0 0 24 24\"\n                  width={24}\n                  height={24}\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                  fill=\"none\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"css-i6dzq1\"\n                >\n                  <path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\" />\n                  <circle cx={12} cy={12} r={3} />\n                </svg>\n\n                {auth.currentUser && auth.currentUser.role === \"Council\" && (\n                  <svg\n                    type=\"button\"\n                    id={apply.id}\n                    data-name=\"assignMediatr\"\n                    onClick={() => {\n                      if (apply.status.id === 1 || apply.status.id === 3) {\n                        toast.error(\n                          <p>\n                            Seçdiyiniz müraciətə mediator təyin olunmadığı üçün\n                            bu funksionallıq aktiv deyil.\n                          </p>\n                        );\n                      } else {\n                        dispatch(assignMediator(apply.id));\n                      }\n                    }}\n                    onMouseEnter={(e) => {\n                      sethover(true);\n                      setTarget({\n                        ...target,\n                        id: e.target.id,\n                        name: e.target.getAttribute(\"data-name\"),\n                      });\n                      // console.log(e.target.getAttribute('data-name'))\n                    }}\n                    onMouseLeave={() => {\n                      sethover(false);\n                      setTarget();\n                    }}\n                    style={{\n                      ...buttonStyle1,\n                      ...(hover &&\n                        target.id === `${apply.id}` &&\n                        target.name === \"assignMediatr\" &&\n                        buttonHover),\n                    }}\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width={24}\n                    height={24}\n                    viewBox=\"0 0 24 24\"\n                    title=\"Mediator təyin et\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeWidth={2}\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    className=\"feather feather-user-plus bs-tooltip\"\n                  >\n                    <rect style={{\n                        width: \"100%\",\n                        height: \"100%\",\n                        // fill: \"#69c\",\n                        stroke: \"rgb(255 255 255 / 0%)\",\n                        strokeWidth: \"5px\",\n                        opacity: 0.5,\n                        outline:\"none\",background:'none'\n                    }}>\n                      <title>Mediator təyin et</title>\n                    </rect>\n                    <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n                    <circle cx=\"8.5\" cy={7} r={4} />\n                    <line x1={20} y1={8} x2={20} y2={14} />\n                    <line x1={23} y1={11} x2={17} y2={11} />\n                  </svg>\n                )}\n\n                {async.kind === \"print\" && target.id === `${apply.id}` ? (\n                  <svg\n                    style={buttonStyle1}\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width={24}\n                    height={24}\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeWidth={2}\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    className=\"feather feather-loader spin mr-2\"\n                  >\n                    <line x1={12} y1={2} x2={12} y2={6} />\n                    <line x1={12} y1={18} x2={12} y2={22} />\n                    <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\" />\n                    <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\" />\n                    <line x1={2} y1={12} x2={6} y2={12} />\n                    <line x1={18} y1={12} x2={22} y2={12} />\n                    <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\" />\n                    <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\" />\n                  </svg>\n                ) : (\n                  <svg\n                    type=\"button\"\n                    data-name=\"print\"\n                    id={apply.id}\n                    onClick={(e) => {\n                      if (apply.selectedMediatr) {\n                        dispatch(loadPrint(apply.id));\n                      } else {\n                        toast.error(\n                          \"Seçdiyiniz müraciətə mediator təyin olunmadığı üçün çap versiyası mövcud deyildir.\"\n                        );\n                      }\n                    }}\n                    onMouseEnter={(e) => {\n                      sethover(true);\n                      setTarget({\n                        ...target,\n                        id: e.target.id,\n                        name: e.target.getAttribute(\"data-name\"),\n                      });\n                      // console.log(e.target.getAttribute('data-name'))\n                    }}\n                    onMouseLeave={() => {\n                      sethover(false);\n                      setTarget();\n                    }}\n                    style={{\n                      ...buttonStyle1,\n                      ...(hover &&\n                        target.id === `${apply.id}` &&\n                        target.name === \"print\" &&\n                        buttonHover),\n                    }}\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width={24}\n                    height={24}\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeWidth={2}\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    className=\"feather feather-printer\"\n                  >\n                    <polyline points=\"6 9 6 2 18 2 18 9\" />\n                    <path d=\"M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2\" />\n                    <rect x={6} y={14} width={12} height={8} />\n                  </svg>\n                )}\n              </div>\n            ),\n          },\n        ]\n      : [\n          {\n            name: \"Müraciət tarixi\",\n            cell: (apply) => (\n              <p>{moment(apply.createdDate).format(\"DD-MM-YYYY\")}</p>\n            ),\n            maxWidth: \"150px\",\n            sortable: true,\n          },\n\n          {\n            name:\n              auth.currentUser && auth.currentUser.mediatr\n                ? \"Müraciət edən şəxs\"\n                : \"Mediator / Mediasiya təşkilatı\",\n            cell: (apply) => {\n              // for user\n              if (apply.selectedMediatr && auth.currentUser.person) {\n                return `${apply.selectedMediatr.firstName} ${apply.selectedMediatr.lastName}`;\n              } else if (apply.mediatrs.length > 0 && auth.currentUser.person) {\n                let medArr = [];\n                apply.mediatrs.forEach((item) => {\n                  medArr.push(`${item.firstName} ${item.lastName}`);\n                });\n                return <p>{medArr.join(\", \")}</p>;\n              } else if (apply.office && auth.currentUser.person) {\n                return <p>{apply.office.officeName}</p>;\n              }\n              // for office\n              else if (apply.selectedMediatr && auth.currentUser.office) {\n                return `${apply.selectedMediatr.firstName} ${apply.selectedMediatr.lastName}`;\n              } else if (\n                !apply.selectedMediatr > 0 &&\n                auth.currentUser.office\n              ) {\n                return <p>Mediator təyin edilməyib</p>;\n              }\n              // for mediator\n              else if (auth.currentUser.mediatr && apply.person) {\n                return `${apply.person.firstName} ${apply.person.lastName} ${apply.person.middleName}`;\n              } else if (\n                !apply.selectedMediatr > 0 &&\n                auth.currentUser.office\n              ) {\n                return <p>Mediator təyin edilməyib</p>;\n              }\n              // for council\n              else if (apply.selectedMediatr) {\n                return `${apply.selectedMediatr.firstName} ${apply.selectedMediatr.lastName}`;\n              } else {\n                return <p>Mediator təyin edilməyib</p>;\n              }\n            },\n            sortable: true,\n          },\n          {\n            name: \"Məhkəmə\",\n            selector: \"courtName\",\n            sortable: true,\n          },\n          {\n            name: \"Status\",\n            // selector: \"status\",\n            cell: (apply) => <p>{apply.status.statusName}</p>,\n            maxWidth: \"164px\",\n\n            sortable: true,\n          },\n\n          {\n            name: \"\",\n            cell: (apply) => (\n              <div className=\"action-btn\">\n                <svg\n                  type=\"button\"\n                  data-toggle=\"modal\"\n                  data-target=\"#exampleModal\"\n                  data-name=\"edit\"\n                  onClick={() => {\n                    dispatch(\n                      openModal({\n                        modalType: \"ApplyPageModal\",\n                        modalProps: { apply },\n                      })\n                    );\n                  }}\n                  id={apply.id}\n                  onMouseEnter={(e) => {\n                    sethover(true);\n                    setTarget({\n                      ...target,\n                      id: e.target.id,\n                      name: e.target.getAttribute(\"data-name\"),\n                    });\n                    // console.log(e.target.getAttribute('data-name'))\n                  }}\n                  onMouseLeave={() => {\n                    sethover(false);\n                    setTarget();\n                  }}\n                  style={{\n                    ...buttonStyle1,\n                    ...(hover &&\n                      target.id === `${apply.id}` &&\n                      target.name === \"edit\" &&\n                      buttonHover),\n                  }}\n                  className=\"icon-hover btn btn-rounded btn-primary mb-2 mr-4\"\n                  viewBox=\"0 0 24 24\"\n                  width={24}\n                  height={24}\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                  fill=\"none\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"css-i6dzq1\"\n                >\n                  <path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\" />\n                  <circle cx={12} cy={12} r={3} />\n                </svg>\n                {auth.currentUser && auth.currentUser.role === \"Council\" && (\n                  <svg\n                    type=\"button\"\n                    id={apply.id}\n                    onClick={() => {\n                      if (apply.selectedMediatr) {\n                        let mediatorName = `${apply.selectedMediatr.firstName} ${apply.selectedMediatr.lastName}`;\n                        toast.error(\n                          <p>\n                            Bu muraciətə artıq <b>{mediatorName}</b> mediator\n                            kimi təyin edilmişdir\n                          </p>\n                        );\n                      } else {\n                        dispatch(assignMediator(apply.id));\n                      }\n                    }}\n                    onMouseEnter={(e) => {\n                      sethover(true);\n                      setTarget({\n                        ...target,\n                        id: e.target.id,\n                        name: e.target.getAttribute(\"data-name\"),\n                      });\n                      // console.log(e.target.getAttribute('data-name'))\n                    }}\n                    onMouseLeave={() => {\n                      sethover(false);\n                      setTarget();\n                    }}\n                    style={{\n                      ...buttonStyle1,\n                      ...(hover &&\n                        target.id === `${apply.id}` &&\n                        target.name === \"assignMediatr\" &&\n                        buttonHover),\n                    }}\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width={24}\n                    height={24}\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeWidth={2}\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    className=\"feather feather-user-plus\"\n                  >\n                    <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n                    <circle cx=\"8.5\" cy={7} r={4} />\n                    <line x1={20} y1={8} x2={20} y2={14} />\n                    <line x1={23} y1={11} x2={17} y2={11} />\n                  </svg>\n                )}\n                {auth.currentUser && auth.currentUser.role === \"Office\" && (\n                  <svg\n                    type=\"button\"\n                    data-toggle=\"modal\"\n                    data-target=\"#exampleModal\"\n                    data-name=\"assignMediatr\"\n                    id={apply.id}\n                    onClick={() => {\n                      if (apply.selectedMediatr) {\n                        let mediatorName = `${apply.selectedMediatr.firstName} ${apply.selectedMediatr.lastName}`;\n                        toast.error(\n                          <p>\n                            Bu muraciətə artıq <b>{mediatorName}</b> mediator\n                            kimi təyin edilmişdir\n                          </p>\n                        );\n                      } else {\n                        dispatch(\n                          openModal({\n                            modalType: \"SelectMediatorModal\",\n                            modalProps: { auth, apply },\n                          })\n                        );\n                      }\n                    }}\n                    onMouseEnter={(e) => {\n                      sethover(true);\n                      setTarget({\n                        ...target,\n                        id: e.target.id,\n                        name: e.target.getAttribute(\"data-name\"),\n                      });\n                      // console.log(e.target.getAttribute('data-name'))\n                    }}\n                    onMouseLeave={() => {\n                      sethover(false);\n                      setTarget();\n                    }}\n                    style={{\n                      ...buttonStyle1,\n                      ...(hover &&\n                        target.id === `${apply.id}` &&\n                        target.name === \"assignMediatr\" &&\n                        buttonHover),\n                    }}\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width={24}\n                    height={24}\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeWidth={2}\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    className=\"feather feather-user-plus\"\n                  >\n                    <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n                    <circle cx=\"8.5\" cy={7} r={4} />\n                    <line x1={20} y1={8} x2={20} y2={14} />\n                    <line x1={23} y1={11} x2={17} y2={11} />\n                  </svg>\n                )}\n                {async.kind === \"print\" && target.id === `${apply.id}` ? (\n                  <svg\n                    style={buttonStyle1}\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width={24}\n                    height={24}\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeWidth={2}\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    className=\"feather feather-loader spin mr-2\"\n                  >\n                    <line x1={12} y1={2} x2={12} y2={6} />\n                    <line x1={12} y1={18} x2={12} y2={22} />\n                    <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\" />\n                    <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\" />\n                    <line x1={2} y1={12} x2={6} y2={12} />\n                    <line x1={18} y1={12} x2={22} y2={12} />\n                    <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\" />\n                    <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\" />\n                  </svg>\n                ) : (\n                  <svg\n                    type=\"button\"\n                    data-name=\"print\"\n                    id={apply.id}\n                    onClick={(e) => {\n                      if (apply.selectedMediatr) {\n                        dispatch(loadPrint(apply.id));\n                      } else {\n                        toast.error(\n                          \"Seçdiyiniz müraciətə mediator təyin olunmadığı üçün çap versiyası mövcud deyildir.\"\n                        );\n                      }\n                    }}\n                    onMouseEnter={(e) => {\n                      sethover(true);\n                      setTarget({\n                        ...target,\n                        id: e.target.id,\n                        name: e.target.getAttribute(\"data-name\"),\n                      });\n                      // console.log(e.target.getAttribute('data-name'))\n                    }}\n                    onMouseLeave={() => {\n                      sethover(false);\n                      setTarget();\n                    }}\n                    style={{\n                      ...buttonStyle1,\n                      ...(hover &&\n                        target.id === `${apply.id}` &&\n                        target.name === \"print\" &&\n                        buttonHover),\n                    }}\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width={24}\n                    height={24}\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeWidth={2}\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    className=\"feather feather-printer\"\n                  >\n                    <polyline points=\"6 9 6 2 18 2 18 9\" />\n                    <path d=\"M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2\" />\n                    <rect x={6} y={14} width={12} height={8} />\n                  </svg>\n                )}\n              </div>\n            ),\n          },\n        ];\n  // let title;\n  // // switch (auth.currentUser.role) {\n  // //   case \"Citizen\":\n  // //     title = \"Müraciətlər\"\n  // //     break;\n  // //   case \"\"\n  // //   default:\n  // //     break;\n  // // }\n\n  return (\n    <React.Fragment>\n      {/* BEGIN applyPAGE CONTAINER */}\n      <div className=\"layout-px-spacing\">\n        <div className=\"row layout-top-spacing\">\n          <div className=\"col-xl-12 col-lg-12 col-sm-12  layout-spacing\">\n            <div className=\"widget-content widget-content-area br-6\">\n              <DataTable\n                // className=\"dataTables_wrapper container-fluid dt-bootstrap4 table-responsive\"\n                // selectableRows\n                title={\"Müraciətlər\"}\n                columns={columns}\n                data={data}\n                pagination\n                paginationServer\n                paginationTotalRows={totalCount}\n                paginationDefaultPage={PageNumber}\n                onChangeRowsPerPage={handlePerRowsChange}\n                onChangePage={handlePageChange}\n                highlightOnHover\n                Clicked\n                actions={\n                  auth.currentUser &&\n                  auth.currentUser.role === \"Citizen\" &&\n                  actions\n                }\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* END applyPAGE CONTAINER */}\n    </React.Fragment>\n  );\n}\n","/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/applyPage/applyActions.js",[],"/Users/ict/Documents/GitHub/mediasiya/src/app/common/modal/modalReducer.js",[],"/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/applyPage/ApplyPageModal.jsx",["265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282"],"import React, { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\n// import ScriptTag from 'react-script-tag';\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\nimport { Field, FieldArray, Form, Formik } from \"formik\";\nimport {\n  approveApply,\n  createApply,\n  listenToApply,\n  loadApply,\n  loadCourt,\n  loadDistrict,\n  loadMediatr,\n  loadOffice,\n  loadProfession,\n  rejectApply,\n  updateApply,\n} from \"./applyActions\";\n// import './tree.css'\nimport { closeModal } from \"../../../app/common/modal/modalReducer\";\nimport MySearchableSelect from \"../../../app/common/form/MySearchableSelect\";\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\n\nimport ModalWrapper from \"../../../app/common/modal/ModalWrapper\";\nimport Button from \"../../../app/common/modal/Button\";\nimport MyCheckbox from \"../../../app/common/form/MyCheckbox\";\nimport { toast } from \"react-toastify\";\n\n// const Demo = props => (\n//   <ScriptTag type=\"text/javascript\" src=\"/custom-jstree.js\" />\n//   )\nexport default function ApplyPageModal({ apply }) {\n  const dispatch = useDispatch();\n  const [modal, setModal] = useState(false);\n  const [rejectForm, setRejectForm] = useState(false);\n  const nodes = [\n    {\n      value: \"mars\",\n      label: \"Mars\",\n      children: [\n        { value: \"phobos\", label: \"Phobos\" },\n        { value: \"deimos\", label: \"Deimos\" },\n      ],\n    },\n  ];\n  const [checked, setChecked] = useState([]);\n  const [expanded, setExpanded] = useState([]);\n\n  const async = useSelector((state) => state.async);\n  const auth = useSelector((state) => state.auth);\n\n  useEffect(() => {\n    if (modal) {\n      $(\"#closeModal\").click();\n    }\n  });\n\n  const [check, setCheck] = useState();\n  useEffect(async () => {\n    apply && (await dispatch(listenToApply(apply.id)));\n    dispatch(loadDistrict());\n    dispatch(loadCourt());\n    dispatch(loadProfession());\n    dispatch(loadMediatr());\n    dispatch(loadOffice());\n  }, [dispatch]);\n  const applys = useSelector((state) => state.applys);\n  const { listenedApply } = useSelector((state) => state.applys);\n  console.log(listenedApply);\n  const districtsOptions =\n    applys.districts &&\n    applys.districts.map((district) => {\n      return {\n        value: parseInt(district.id),\n        label: `${district.districtName}`,\n      };\n    });\n  const courtsOptions =\n    applys.courts &&\n    applys.courts.map((court) => {\n      return {\n        value: parseInt(court.id),\n        label: `${court.courtName}`,\n      };\n    });\n  const professionOptions =\n    applys.professions &&\n    applys.professions.map((profession) => {\n      return {\n        value: parseInt(profession.id),\n        label: `${profession.professionName}`,\n      };\n    });\n\n  const officeOptions =\n    applys.offices &&\n    applys.offices.map((office) => {\n      return {\n        value: parseInt(office.id),\n        label: `${office.officeName}`,\n      };\n    });\n\n  const languageKnowledgeOptions = [\n    { label: \"Azərbaycan\", value: \"Azərbaycan\" },\n    { label: \"Rus\", value: \"Rus\" },\n    { label: \"İngilis\", value: \"İngilis\" },\n  ];\n  const genderOptions = [\n    { label: \"Kişi\", value: parseInt(1) },\n    { label: \"Qadın\", value:parseInt (2) },\n  ];\n  const datesOptions = [\n    { label: \"9:00 - 9:30\", value: \"9:00 - 9:30\" },\n    { label: \"10:00 - 10:30\", value: \"10:00 - 10:30\" },\n    { label: \"11:00 - 11:30\", value: \"11:00 - 11:30\" },\n    { label: \"12:00 - 12:30\", value: \"12:00 - 12:30\" },\n    { label: \"13:00 - 13:30\", value: \"13:00 - 13:30\" },\n    { label: \"14:00 - 14:30\", value: \"14:00 - 14:30\" },\n    { label: \"15:00 - 15:30\", value: \"15:00 - 15:30\" },\n    { label: \"16:00 - 16:30\", value: \"16:00 - 16:30\" },\n    { label: \"17:00 - 17:30\", value: \"17:00 - 17:30\" },\n  ];\n\n  const [sides, setSides] = useState(\n    apply && listenedApply.sides\n      ? listenedApply.sides\n      : [\n          {\n            sideFirstName: \"\",\n            sideLastName: \"\",\n            sideMiddleName: \"\",\n            sideGender: \"\",\n            advocateFirstName: \"\",\n            advocateLastName: \"\",\n            advocateMiddleName: \"\",\n            organizationName: \"\",\n            address: \"\",\n            phone: \"\",\n            email: \"\",\n          },\n        ]\n  );\n  const handleAddSide = () => {\n    setSides([\n      ...sides,\n      {\n        fullName: \"\",\n        advocateFullName: \"\",\n        organizationName: \"\",\n        address: \"\",\n        phone: \"\",\n        email: \"\",\n      },\n    ]);\n  };\n  const handleRemoveSide = () => {\n    if (sides.length > 1) {\n      let lastIndex = sides.length - 1;\n      let values = [...sides];\n      values.splice(lastIndex, 1);\n      setSides(values);\n    }\n  };\n\n  const initialValues = apply\n    ? {\n        professionId: listenedApply.professionId && listenedApply.professionId,\n        districtIds: listenedApply.districtIds && listenedApply.districtIds,\n        mediatrIds: listenedApply.mediatrIds && listenedApply.mediatrIds,\n        officeId: listenedApply.officeId && listenedApply.officeId,\n        courtId: listenedApply.courtId && listenedApply.courtId,\n        sides: listenedApply.sides && listenedApply.sides,\n        conflictInfo: listenedApply.conflictInfo && listenedApply.conflictInfo,\n        courtCaseInfo:\n          listenedApply.courtCaseInfo && listenedApply.courtCaseInfo,\n        prefferedSessionTime:\n          listenedApply.prefferedSessionTime &&\n          listenedApply.prefferedSessionTime,\n        requiredLangs:\n          listenedApply.requiredLangs && listenedApply.requiredLangs,\n        caseInAction: listenedApply.caseInAction && listenedApply.caseInAction,\n      }\n    : {\n        professionId: \"\",\n        districtIds: [],\n        mediatrIds: [],\n        officeId: \"\",\n        courtId: \"\",\n        sides: sides,\n        conflictInfo: \"\",\n        courtCaseInfo: \"\",\n        prefferedSessionTime: \"\",\n        requiredLangs: \"\",\n        caseInAction: true,\n        mediatorNames: [],\n      };\n  const validationSchema = Yup.object({});\n\n  // const [professionId, setProfessionId] = useState();\n  // const [courtId, setCourtId] = useState();\n  const onChangeProfId = async (profId, courtId) => {\n    dispatch(loadMediatr({ professionId: profId, courtId: courtId }));\n  };\n  const groupStyles = {\n    display: \"flex\",\n    alignItems: \"center\",\n    fontWeight: \"bold\",\n    fontSize: \"1.2em\",\n    justifyContent: \"space-between\",\n    borderBottom: \"1px dotted #7091e6\",\n  };\n  const groupBadgeStyles = {\n    backgroundColor: \"#7091e6\",\n    borderRadius: \"2em\",\n    color: \"#fff\",\n    display: \"inline-block\",\n    fontSize: 12,\n    marginLeft: \"10px\",\n    fontWeight: \"bold\",\n    lineHeight: \"1\",\n    minWidth: 1,\n    padding: \"0.16666666666667em 0.5em\",\n    textAlign: \"center\",\n  };\n\n  // const mediatorOptions =\n  //   applys.mediatrs &&\n  //   applys.mediatrs.map((mediatr) => {\n  //     return {\n  //       value: parseInt(mediatr.id),\n  //       label: `${mediatr.firstName} ${mediatr.lastName} ${mediatr.middleName}`,\n  //       ids: mediatr.mediatrProfessions.map((medik) => medik.id),\n  //     };\n  //   });\n  const groupedOptions =\n    check === \"mediator\" &&\n    applys.mediatrs.map((mediatr) => {\n      return {\n        value: parseInt(mediatr.districtId),\n        label: `${mediatr.districtName}`,\n        mediatrs: mediatr.mediatrs.map((medik) => {\n          return {\n            label: `${medik.firstName} ${medik.lastName} ${medik.middleName}`,\n            value: parseInt(medik.mediatrId),\n          };\n        }),\n        // ids: mediatr.mediatrProfessions.map((medik) => medik.id),\n      };\n    });\n\n  useEffect(() => {\n    var toggler = document.getElementsByClassName(\"caret\");\n    var i;\n\n    for (i = 0; i < toggler.length; i++) {\n      toggler[i].addEventListener(\"click\", function () {\n        this.parentElement.querySelector(\".nested\").classList.toggle(\"active\");\n        this.classList.toggle(\"caret-down\");\n      });\n    }\n  }, []);\n  // let medik =\n  // if(medik[0] !== undefined){\n  //   let mediator = medik[0]\n  //   console.log(mediator.map(medi=>medi.label))\n  // }\n  //medik[0].forEach(med => console.log(med))\n  //console.log(medik[0])\n\n  // const groupByRegion =\n  //   check === \"mediator\" &&\n  //   apply.mediatrs.map((mediatrs) => {\n  //     mediatrs.map((mediatr) => {\n  //       return {\n  //         label: `${mediatr.firstName} ${mediatr.lastName} ${mediatr.middleName}`,\n  //         value: parseInt(mediatr.mediatrId),\n  //       };\n  //     });\n  //   });\n  // console.log(groupByRegion);\n  // [\n  //   {\n  //     label: \"Colours\",\n  //     options: colourOptions,\n  //   },\n  //   {\n  //     label: \"Flavours\",\n  //     options: flavourOptions,\n  //   },\n  // ];\n\n  const formatGroupLabel = (groupedOptions) => (\n    <div style={groupStyles}>\n      <span>{groupedOptions.label}</span>\n      <span style={groupBadgeStyles}>{groupedOptions.options.length}</span>\n    </div>\n  );\n\n  const [mediatorName, setMediatorName] = useState([]);\n  return (\n    <ModalWrapper\n      size=\"modal-xl\"\n      header={\n        apply\n          ? \"Mediatora müraciət - nəzərdən keçir \"\n          : \"Mediatora müraciət - yeni\"\n      }\n    >\n      {async.kind === \"listenApply\" && async.loading ? (\n        <div className=\"loader text-center\">\n          {\" \"}\n          <div className=\"loader-content\">\n            <div className=\"spinner-grow align-self-center\"></div>\n          </div>\n        </div>\n      ) : (\n        <React.Fragment>\n          <Formik\n            initialValues={initialValues}\n            validationSchema={validationSchema}\n            onSubmit={async (values, { setSubmitting, setErrors }) => {\n              try {\n                apply\n                  ? await dispatch(\n                      updateApply({\n                        ...values,\n                        id: apply.id,\n                      })\n                    )\n                  : await dispatch(\n                      createApply({\n                        professionId: values.professionId,\n                        districtIds: values.districtIds,\n                        mediatrIds: values.mediatrIds,\n                        officeId: values.officeId,\n                        courtId: values.courtId,\n                        sides: values.sides,\n                        conflictInfo: values.conflictInfo,\n                        courtCaseInfo: values.courtCaseInfo,\n                        prefferedSessionTime:\n                          values.prefferedSessionTime.toString(),\n                        requiredLangs: values.requiredLangs.toString(),\n                        caseInAction: values.caseInAction,\n                      })\n                    );\n                setSubmitting(false);\n                setModal(true);\n                dispatch(closeModal());\n              } catch (error) {\n                setErrors({ auth: error.message });\n                // console.log(error);\n                setSubmitting(false);\n              }\n            }}\n          >\n            {({ isSubmitting, isValid, dirty, errors, values }) => (\n              <Form id=\"emp\">\n                <div id=\"iconsAccordion\" className=\"accordion-icons\">\n                  <div className=\"card\">\n                    <div className=\"card-header\" id=\"headingTwo3\">\n                      <section className=\"mb-0 mt-0\">\n                        <div\n                          role=\"menu\"\n                          className=\"show\"\n                          data-toggle=\"collapse\"\n                          data-target=\"#iconAccordionTwo\"\n                          aria-expanded=\"false\"\n                          aria-controls=\"iconAccordionTwo\"\n                        >\n                          <div className=\"accordion-icon\">\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              strokeWidth={2}\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              className=\"feather feather-box\"\n                            >\n                              <path d=\"M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z\" />\n                              <polyline points=\"3.27 6.96 12 12.01 20.73 6.96\" />\n                              <line x1={12} y1=\"22.08\" x2={12} y2={12} />\n                            </svg>\n                          </div>\n                          Ümumi məlumatlar\n                          <div className=\"icons\">\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              strokeWidth={2}\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              className=\"feather feather-chevron-down\"\n                            >\n                              <polyline points=\"6 9 12 15 18 9\" />\n                            </svg>\n                          </div>\n                        </div>\n                      </section>\n                    </div>\n                    <div\n                      id=\"iconAccordionTwo\"\n                      className=\"collapsed show\"\n                      aria-labelledby=\"headingTwo3\"\n                      data-parent=\"#iconsAccordion\"\n                    >\n                      <div className=\"card-body\">\n                        <div className=\"row mb-4\">\n                          <div className=\"col-md-12\">\n                            <MySearchableSelect\n                              id=\"professionId\"\n                              name=\"professionId\"\n                              type=\"text\"\n                              // loadOptions={onChangeProfId}\n                              // onInputChange={(values) => {\n\n                              //     onChangeProfId(values.professionId);\n\n                              // }}\n                              defaultValue={\n                                apply && {\n                                  value: parseInt(\n                                    listenedApply.profession &&\n                                      listenedApply.profession.id\n                                  ),\n                                  label: listenedApply.profession\n                                    ? listenedApply.profession.professionName\n                                    : \"Təyin edilməyib\",\n                                }\n                              }\n                              isDisabled={apply ? true : false}\n                              options={professionOptions}\n                              // className=\"form-control\"\n                              placeholder=\"İxtisas seçin\"\n                              label={\"Mediatorun ixtisası *\"}\n                            />\n                          </div>\n                        </div>\n                        <div className=\"row mb-4\">\n                          <div className=\"col-md-12\">\n                            <MySearchableSelect\n                              id=\"districtIds\"\n                              name=\"districtIds\"\n                              type=\"text\"\n                              isDisabled={apply ? true : false}\n                              defaultValue={\n                                apply &&\n                                listenedApply.districts &&\n                                listenedApply.districts.map((district) => {\n                                  return {\n                                    label: `${district.districtName}`,\n                                  };\n                                })\n                              }\n                              options={districtsOptions}\n                              isMulti\n                              // className=\"form-control\"\n                              placeholder=\"Məkan seçin\"\n                              label={\n                                \"Mediasiyanın keçirilməsi üçün üstünlük verilən yer*\"\n                              }\n                            />\n                          </div>\n                        </div>\n                        <div className=\"row mb-4\">\n                          <div className=\"col-md-12\">\n                            <MySearchableSelect\n                              id=\"courtId\"\n                              name=\"courtId\"\n                              isDisabled={apply ? true : false}\n                              type=\"text\"\n                              options={courtsOptions}\n                              defaultValue={\n                                apply && {\n                                  value: parseInt(\n                                    listenedApply.court &&\n                                      listenedApply.court.id\n                                  ),\n                                  label: listenedApply.court\n                                    ? listenedApply.court.courtName\n                                    : \"Təyin edilməyib\",\n                                }\n                              }\n                              placeholder=\"Məhkəmə seçin\"\n                              label={\n                                \"Mübahisə həll olunmazsa mübahisənin baxılacağı yer*\"\n                              }\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"card\">\n                    <div className=\"card-header\" id=\"headingOne3\">\n                      <section className=\"mb-0 mt-0\">\n                        <div\n                          role=\"menu\"\n                          className=\"collapsed\"\n                          data-toggle=\"collapse\"\n                          data-target=\"#iconAccordionOne\"\n                          aria-expanded=\"false\"\n                          aria-controls=\"iconAccordionOne\"\n                        >\n                          <div className=\"accordion-icon\">\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              strokeWidth={2}\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              className=\"feather feather-user\"\n                            >\n                              <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\" />\n                              <circle cx={12} cy={7} r={4} />\n                            </svg>\n                          </div>\n                          Mediator seçimi:{\" \"}\n                          {mediatorName &&\n                            mediatorName.map((medik) => ` ${medik}`)}\n                          <div className=\"icons\">\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              strokeWidth={2}\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              className=\"feather feather-chevron-down\"\n                            >\n                              <polyline points=\"6 9 12 15 18 9\" />\n                            </svg>\n                          </div>\n                        </div>\n                      </section>\n                    </div>\n                    <div\n                      id=\"iconAccordionOne\"\n                      className=\"collapse\"\n                      aria-labelledby=\"headingOne3\"\n                      data-parent=\"#iconsAccordion\"\n                    >\n                      <div className=\"card-body\">\n                        <div className=\"row\"></div>\n                        <div className=\"row mb-4\">\n                          {apply ? (\n                            \"\"\n                          ) : (\n                            <div className=\"col-md-12\">\n                              <div className=\"form-check mb-2\">\n                                <div className=\"custom-control custom-radio classic-radio-info\">\n                                  <input\n                                    type=\"radio\"\n                                    // checked={apply && listenedApply. }\n                                    id=\"hRadio2\"\n                                    name=\"classicRadio\"\n                                    onClick={() => setCheck(\"office\")}\n                                    className=\"custom-control-input\"\n                                  />\n                                  <label\n                                    className=\"custom-control-label\"\n                                    htmlFor=\"hRadio2\"\n                                  >\n                                    Mediasiya təşkilatları\n                                  </label>\n                                </div>\n                              </div>\n                              <div className=\"form-check mb-2\">\n                                <div className=\"custom-control custom-radio classic-radio-info\">\n                                  <input\n                                    type=\"radio\"\n                                    id=\"hRadio1\"\n                                    name=\"classicRadio\"\n                                    onClick={() => {\n                                      setCheck(\"mediator\");\n                                      onChangeProfId(\n                                        values.professionId,\n                                        values.courtId\n                                      );\n                                    }}\n                                    className=\"custom-control-input\"\n                                  />\n                                  <label\n                                    className=\"custom-control-label\"\n                                    htmlFor=\"hRadio1\"\n                                  >\n                                    Fərdi qaydada fəaliyyət göstərən mediatorlar\n                                  </label>\n                                </div>\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                        {(check === \"office\" || listenedApply.office) && (\n                          <div className=\"row mb-4\">\n                            <div className=\"col-md-12\">\n                              <MySearchableSelect\n                                id=\"officeId\"\n                                name=\"officeId\"\n                                type=\"text\"\n                                defaultValue={\n                                  apply && {\n                                    value: parseInt(\n                                      listenedApply.office &&\n                                        listenedApply.office.id\n                                    ),\n                                    label: listenedApply.office\n                                      ? listenedApply.office.officeName\n                                      : \"Təyin edilməyib\",\n                                  }\n                                }\n                                options={officeOptions}\n                                isMulti={check === \"office\" && false}\n                                // className=\"form-control\"\n                                placeholder=\"Mediator təşkilatı seçin\"\n                                label={\"Mediator təşkilatları*\"}\n                              />\n                            </div>\n                          </div>\n                        )}\n                        {(check === \"mediator\" || listenedApply.mediatrs) && (\n                          <div className=\"row mb-4\">\n                            <div className=\"col-md-12\">\n                              <div id=\"toggleAccordion\">\n                                {applys &&\n                                  applys.mediatrs.map((tree, index) => (\n                                    <div className=\"card\">\n                                      <div className=\"card-header\" id=\"...\">\n                                        <section className=\"mb-0 mt-0\">\n                                          <div\n                                            role=\"menu\"\n                                            className=\"collapsed\"\n                                            data-toggle=\"collapse\"\n                                            data-target={`#defaultAccordion${index}`}\n                                            aria-expanded=\"true\"\n                                            aria-controls={`#defaultAccordion${index}`}\n                                          >\n                                            {tree.districtName}\n                                            <div className=\"icons\">\n                                              <svg> ... </svg>\n                                            </div>\n                                          </div>\n                                        </section>\n                                      </div>\n                                      <div\n                                        id={`defaultAccordion${index}`}\n                                        className=\"collapse\"\n                                        aria-labelledby=\"...\"\n                                        data-parent=\"#toggleAccordion\"\n                                      >\n                                        <div className=\"card-body\">\n                                          <div className=\"row\">\n                                            {tree.mediatrs.map((name) => (\n                                              <div className=\"col-md-12\">\n                                                <MyCheckbox\n                                                  name=\"mediatrIds\"\n                                                  value={name.mediatrId}\n                                                  label={`${name.firstName} ${name.lastName}`}\n                                                  onClick={(e) => {\n                                                    if (\n                                                      e.target.checked ===\n                                                        true &&\n                                                      !mediatorName.includes(\n                                                        `${name.firstName} ${name.lastName}`\n                                                      )\n                                                    ) {\n                                                      setMediatorName(\n                                                        (state) => [\n                                                          ...state,\n                                                          `${name.firstName} ${name.lastName}`,\n                                                        ]\n                                                      );\n                                                    } else if (\n                                                      e.target.checked ===\n                                                        false &&\n                                                      mediatorName.includes(\n                                                        `${name.firstName} ${name.lastName}`\n                                                      )\n                                                    ) {\n                                                      setMediatorName(\n                                                        (state) => [\n                                                          ...state.filter(\n                                                            (medik) =>\n                                                              medik !==\n                                                              `${name.firstName} ${name.lastName}`\n                                                          ),\n                                                        ]\n                                                      );\n                                                      console.log(\n                                                        values.mediatrIds.find(\n                                                          (name) =>\n                                                            name ===\n                                                            e.target.value\n                                                        ),\n                                                        \"medname\"\n                                                      );\n                                                    }\n                                                  }}\n                                                />\n                                                {/* {console.log(\n                                                  mediatorName.find(\n                                                    (mediator) =>\n                                                      mediator ===\n                                                      `${name.firstName} ${name.lastName}`\n                                                  )\n                                                )} */}\n                                              </div>\n                                            ))}\n                                          </div>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  ))}\n                              </div>\n                            </div>\n                            {/* <div className=\"col-md-12\">\n                              <p>medikler</p>\n                            </div> */}\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"card\">\n                    <div className=\"card-header \" id=\"headingTwo3\">\n                      <section className=\"mb-0 mt-0\">\n                        <div\n                          role=\"menu\"\n                          className=\"collapsed\"\n                          data-toggle=\"collapse\"\n                          data-target=\"#iconAccordionThree\"\n                          aria-expanded=\"false\"\n                          aria-controls=\"iconAccordionThree\"\n                        >\n                          <div className=\"accordion-icon\">\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              strokeWidth={2}\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              className=\"feather feather-users\"\n                            >\n                              <path d=\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n                              <circle cx={9} cy={7} r={4} />\n                              <path d=\"M23 21v-2a4 4 0 0 0-3-3.87\" />\n                              <path d=\"M16 3.13a4 4 0 0 1 0 7.75\" />\n                            </svg>\n                          </div>\n                          Tərəflar barədə məlumatlar\n                          <div className=\"icons\">\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              strokeWidth={2}\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              className=\"feather feather-chevron-down\"\n                            >\n                              <polyline points=\"6 9 12 15 18 9\" />\n                            </svg>\n                          </div>\n                        </div>\n                      </section>\n                    </div>\n                    <div\n                      id=\"iconAccordionThree\"\n                      className=\"collapse\"\n                      aria-labelledby=\"headingTwo3\"\n                      data-parent=\"#iconsAccordion\"\n                    >\n                      <div className=\"card-body\">\n                        {!apply && (\n                          <div className=\"row mb-4\">\n                            <div className=\"col-md-2 offset-10 text-right\">\n                              <div className=\"icon-container\">\n                                <button\n                                  title=\"Tərəf əlavə et\"\n                                  type=\"button\"\n                                  className=\"close\"\n                                  onClick={() => handleAddSide()}\n                                >\n                                  <svg\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                    width={24}\n                                    height={24}\n                                    viewBox=\"0 0 24 24\"\n                                    fill=\"none\"\n                                    stroke=\"currentColor\"\n                                    strokeWidth={2}\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    className=\"feather feather-plus-circle\"\n                                  >\n                                    <circle cx={12} cy={12} r={10} />\n                                    <line x1={12} y1={8} x2={12} y2={16} />\n                                    <line x1={8} y1={12} x2={16} y2={12} />\n                                  </svg>\n                                </button>\n                                <button\n                                  type=\"button\"\n                                  onClick={() => handleRemoveSide()}\n                                  className=\"close\"\n                                  title=\"Tərəfi sil\"\n                                >\n                                  <svg\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                    width={24}\n                                    height={24}\n                                    viewBox=\"0 0 24 24\"\n                                    fill=\"none\"\n                                    stroke=\"currentColor\"\n                                    strokeWidth={2}\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    className=\"feather feather-minus-circle\"\n                                  >\n                                    <circle cx={12} cy={12} r={10} />\n                                    <line x1={8} y1={12} x2={16} y2={12} />\n                                  </svg>\n                                </button>\n                              </div>\n                            </div>\n                          </div>\n                       \n                       )}\n\n                        {!sides && (\n                          <div className=\"row\">\n                            <div className=\"col-md-12\">\n                              <h2 className=\"text-center\">\n                                Heç bir tərəf daxil edilməyib\n                              </h2>\n                            </div>\n                          </div>\n                        )}\n                        {sides &&\n                          sides.map((side, index) => (\n                            <React.Fragment key={index}>\n                              <div className=\"row\">\n                                <div className=\"col-xl-12 col-md-12 col-sm-12 col-12\">\n                                  <div\n                                    className=\"infobox-3 mb-4\"\n                                    style={{ width: \"100%\" }}\n                                  >\n                                    <div className=\"info-icon\">\n                                      <svg\n                                        xmlns=\"http://www.w3.org/2000/svg\"\n                                        width={24}\n                                        height={24}\n                                        viewBox=\"0 0 24 24\"\n                                        fill=\"none\"\n                                        stroke=\"currentColor\"\n                                        strokeWidth={2}\n                                        strokeLinecap=\"round\"\n                                        strokeLinejoin=\"round\"\n                                        className=\"feather feather-user\"\n                                      >\n                                        <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\" />\n                                        <circle cx={12} cy={7} r={4} />\n                                      </svg>\n                                    </div>\n                                    <h5 className=\"info-heading\">\n                                      Tərəf :\n                                      {!apply &&\n                                        `${index + 2} - ${\n                                          values.sides[index]\n                                            ? `\n                                            ${\n                                              values.sides[index].sideLastName\n                                                ? values.sides[index]\n                                                    .sideLastName\n                                                : \"\"\n                                            } \n                                            ${\n                                              values.sides[index].sideFirstName\n                                                ? values.sides[index]\n                                                    .sideFirstName\n                                                : \"\"\n                                            } ${\n                                                values.sides[index]\n                                                  .sideMiddleName\n                                                  ? values.sides[index]\n                                                      .sideMiddleName\n                                                  : \"\"\n                                              }`\n                                            : \"\"\n                                        }`}{\" \"}\n                                    </h5>\n                                    {/* {console.log(values,'cins')} */}\n                                    <p className=\"info-text\">\n                                      <div className=\"row mb-4\">\n                                        <div className=\"col-md-3\">\n                                          <MyTextInput\n                                            disabled={apply ? true : false}\n                                            id={`sides[${index}].sideLastName`}\n                                            name={`sides[${index}].sideLastName`}\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            placeholder=\"Soyadın daxil edin\"\n                                            label={\"Qarşı tərəfin soyadı*\"}\n                                          />\n                                        </div>\n                                        <div className=\"col-md-3\">\n                                          <MyTextInput\n                                            disabled={apply ? true : false}\n                                            id={`sides[${index}].sideFirstName`}\n                                            name={`sides[${index}].sideFirstName`}\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            placeholder=\"Adın daxil edin\"\n                                            label={\"Qarşı tərəfin adı*\"}\n                                          />\n                                        </div>\n                                        <div className=\"col-md-3\">\n                                          <MyTextInput\n                                            disabled={apply ? true : false}\n                                            id={`sides[${index}].sideMiddleName`}\n                                            name={`sides[${index}].sideMiddleName`}\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            placeholder=\"Ata adın daxil edin\"\n                                            label={\"Qarşı tərəfin ata adı*\"}\n                                          />\n                                        </div>\n                                        <div className=\"col-md-3\">\n                                          <MySearchableSelect\n                                            isDisabled={apply ? true : false}\n                                            id={`sides[${index}].sideGender`}\n                                            name={`sides[${index}].sideGender`}\n                                            type=\"text\"\n                                            // className=\"form-control\"\n                                            // defaultValue={\n                                            //   apply && {\n                                            //     label:\n                                            //       sides[index] &&\n                                            //       sides[index].sideGender === 1\n                                            //         ? \"Kişi\"\n                                            //         : \"Qadın\",\n                                            //   }\n                                            // }\n                                            options={genderOptions}\n                                            placeholder=\"Cinsin daxil edin\"\n                                            label={\"Qarşı tərəf cinsi*\"}\n                                          />\n                                        </div>\n                                      </div>\n                                      <div className=\"row mb-4\">\n                                        <div className=\"col-md-4\">\n                                          <MyTextInput\n                                            disabled={apply ? true : false}\n                                            id={`sides[${index}].advocateFirstName`}\n                                            name={`sides[${index}].advocateFirstName`}\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            placeholder=\"Adın daxil edin\"\n                                            label={\"Nümayəndənin adı*\"}\n                                          />\n                                        </div>\n                                        <div className=\"col-md-4\">\n                                          <MyTextInput\n                                            disabled={apply ? true : false}\n                                            id={`sides[${index}].advocateLastName`}\n                                            name={`sides[${index}].advocateLastName`}\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            placeholder=\"Soyadın daxil edin\"\n                                            label={\"Nümayəndənin soyadı*\"}\n                                          />\n                                        </div>\n                                        <div className=\"col-md-4\">\n                                          <MyTextInput\n                                            disabled={apply ? true : false}\n                                            id={`sides[${index}].advocateMiddleName`}\n                                            name={`sides[${index}].advocateMiddleName`}\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            placeholder=\"Ata adın daxil edin\"\n                                            label={\"Nümayəndənin ata adı*\"}\n                                          />\n                                        </div>\n                                      </div>\n\n                                      <div className=\"row mb-4\">\n                                        <div className=\"col-md-12\">\n                                          <MyTextInput\n                                            id={`sides[${index}].organizationName`}\n                                            name={`sides[${index}].organizationName`}\n                                            disabled={apply ? true : false}\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            label=\"Hüquq şirkəti\"\n                                            placeholder={\n                                              \"Hüquq şirkət adı daxil edin*\"\n                                            }\n                                          />\n                                        </div>\n                                      </div>\n                                      <div className=\"row mb-4\">\n                                        <div className=\"col-md-12\">\n                                          <MyTextInput\n                                            id={`sides[${index}].address`}\n                                            name={`sides[${index}].address`}\n                                            disabled={apply ? true : false}\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            label=\"Ünvan\"\n                                            placeholder={\"Ünval daxil edin*\"}\n                                          />\n                                        </div>\n                                      </div>\n                                      <div className=\"row mb-4\">\n                                        <div className=\"col-md-6\">\n                                          <MyTextInput\n                                            id={`sides[${index}].phone`}\n                                            name={`sides[${index}].phone`}\n                                            disabled={apply ? true : false}\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            label=\"Telefon\"\n                                            placeholder={\n                                              \"Telefon nömrəsi daxil edin*\"\n                                            }\n                                          />\n                                        </div>\n                                        <div className=\"col-md-6\">\n                                          <MyTextInput\n                                            id={`sides[${index}].email`}\n                                            name={`sides[${index}].email`}\n                                            disabled={apply ? true : false}\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            label=\"E-mail\"\n                                            placeholder={\"e-mail daxil edin*\"}\n                                          />\n                                        </div>\n                                      </div>\n                                    </p>\n                                    {/* <a class=\"info-link\" href=\"\">\n                                Discover <svg> ... </svg>\n                              </a> */}\n                                  </div>\n                                </div>\n                              </div>\n                            </React.Fragment>\n                          ))}\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"card\">\n                    <div className=\"card-header\" id=\"headingTwo3\">\n                      <section className=\"mb-0 mt-0\">\n                        <div\n                          role=\"menu\"\n                          className=\"collapsed\"\n                          data-toggle=\"collapse\"\n                          data-target=\"#iconAccordionForth\"\n                          aria-expanded=\"false\"\n                          aria-controls=\"iconAccordionForth\"\n                        >\n                          <div className=\"accordion-icon\">\n                            <svg\n                              viewBox=\"0 0 24 24\"\n                              width={24}\n                              height={24}\n                              stroke=\"currentColor\"\n                              strokeWidth={2}\n                              fill=\"none\"\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              className=\"css-i6dzq1\"\n                            >\n                              <path d=\"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z\" />\n                            </svg>\n                          </div>\n                          Mübahisə və mediasiya sessiyası\n                          <div className=\"icons\">\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              strokeWidth={2}\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              className=\"feather feather-chevron-down\"\n                            >\n                              <polyline points=\"6 9 12 15 18 9\" />\n                            </svg>\n                          </div>\n                        </div>\n                      </section>\n                    </div>\n                    <div\n                      id=\"iconAccordionForth\"\n                      className=\"collapse\"\n                      aria-labelledby=\"headingTwo3\"\n                      data-parent=\"#iconsAccordion\"\n                    >\n                      <div className=\"card-body\">\n                        <div className=\"row mb-4\">\n                          <div className=\"col-md-12\">\n                            <MyTextArea\n                              id=\"conflictInfo\"\n                              name=\"conflictInfo\"\n                              type=\"text\"\n                              disabled={apply ? true : false}\n                              className=\"form-control\"\n                              label=\"Mübahisənin qısa məzmunu və mediasiyadan gözlənilən nəticələr*\"\n                              placeholder={\"Qısa məlumat daxil edin\"}\n                            />\n                          </div>\n                        </div>\n                        <div className=\"row mb-4\">\n                          <div className=\"col-md-12\">\n                            <div className=\"form-group form-check pl-0\">\n                              <div className=\"custom-control custom-checkbox checkbox-info\">\n                                <MyTextInput\n                                  type=\"checkbox\"\n                                  className=\"custom-control-input\"\n                                  disabled={apply ? true : false}\n                                  id=\"caseInAction\"\n                                  name=\"caseInAction\"\n                                />\n                                <label\n                                  className=\"custom-control-label\"\n                                  htmlFor=\"caseInAction\"\n                                >\n                                  Bu mübahisə hazırda məhkəmə icraatındadır?\n                                </label>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"row mb-4\">\n                          <div className=\"col-md-12\">\n                            <MyTextArea\n                              id=\"courtCaseInfo\"\n                              name=\"courtCaseInfo\"\n                              disabled={apply ? true : false}\n                              type=\"text\"\n                              className=\"form-control\"\n                              label=\"Məhkəmə və iş barədə mulamatlar*\"\n                              placeholder={\n                                \"Məhkəmə və iş barədə məlumat daxil edin\"\n                              }\n                            />\n                          </div>\n                        </div>\n                        <div className=\"row mb-4\">\n                          <div className=\"col-md-6\">\n                            <MySearchableSelect\n                              id=\"prefferedSessionTime\"\n                              name=\"prefferedSessionTime\"\n                              type=\"text\"\n                              isMulti\n                              options={datesOptions}\n                              isDisabled={apply ? true : false}\n                              // className=\"form-control\"\n                              label=\"Mediasiya sessiyalarının keçirilməsi üçün üstünlük verilən vaxt*\"\n                              placeholder={\n                                apply && listenedApply.prefferedSessionTime\n                                  ? listenedApply.prefferedSessionTime\n                                  : \"Sizə uyğun vaxtı daxil edin\"\n                              }\n                            />\n                          </div>\n                          <div className=\"col-md-6\">\n                            <MySearchableSelect\n                              id=\"requiredLangs\"\n                              name=\"requiredLangs\"\n                              type=\"text\"\n                              isMulti\n                              isDisabled={apply ? true : false}\n                              options={languageKnowledgeOptions}\n                              // className=\"form-control\"\n                              label=\"Mediatordan tələb olunan dil biliyi*\"\n                              placeholder={\n                                \"Mediatordan tələb etdiyiniz dil biliyi\"\n                              }\n                              placeholder={\n                                apply && listenedApply.requiredLangs\n                                  ? listenedApply.requiredLangs\n                                  : \"Mediatordan tələb etdiyiniz dil biliyi\"\n                              }\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  {/* <ul className=\"file-tree\">\n                    <li className=\"file-tree-folder\">\n                      CSS\n                      <ul>\n                        <li>style.css</li>\n                      </ul>\n                    </li>\n                    <li className=\"file-tree-folder empty\">Images</li>\n                    <li className=\"file-tree-folder\">\n                      HTML\n                      <ul>\n                        <li className=\"file-tree-folder\">\n                          PAGES\n                          <ul>\n                            <li>file name </li>\n                            <li>file name </li>\n                            <li>file name </li>\n                          </ul>\n                        </li>\n                        <li>file name </li>\n                        <li>file name </li>\n                      </ul>\n                    </li>\n                    <li>index.html </li>\n                    <li>components.html </li>\n                  </ul> */}\n                </div>\n\n                {!apply && (\n                  <Button\n                    // style={{ position: \"fixed\", bottom: \"11.8%\", right: \"21vw\" }}\n                    disabled={!isValid || !dirty || isSubmitting}\n                    type=\"submit\"\n                    // name=\"time\"\n                    className=\"btn btn-primary float-right  btn-lg mt-2 mb-4\"\n                  >\n                    {isSubmitting && (\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width={24}\n                        height={24}\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        strokeWidth={2}\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        className=\"feather feather-loader spin mr-2\"\n                      >\n                        <line x1={12} y1={2} x2={12} y2={6} />\n                        <line x1={12} y1={18} x2={12} y2={22} />\n                        <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\" />\n                        <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\" />\n                        <line x1={2} y1={12} x2={6} y2={12} />\n                        <line x1={18} y1={12} x2={22} y2={12} />\n                        <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\" />\n                        <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\" />\n                      </svg>\n                    )}\n                    Göndər\n                  </Button>\n                )}\n\n                <button\n                  style={{ display: \"none\" }}\n                  id=\"closeModal\"\n                  onClick={() => {\n                    dispatch(closeModal());\n                  }}\n                  className=\"btn btn-lg float-right mt-3 mr-2\"\n                  data-dismiss=\"modal\"\n                >\n                  <i className=\"flaticon-cancel-12\" /> Ləğv et\n                </button>\n                {/* <button\n            style={{position:\"fixed\",bottom:\"12%\",right:\"12%\"}}\n              id=\"closeModal\"\n              onClick={() => {\n                dispatch(closeModal());\n              }}\n              className=\"btn btn-lg float-right mt-3 mr-2\"\n              data-dismiss=\"modal\"\n            >\n              <i className=\"flaticon-cancel-12\" /> Ləğv et\n            </button> */}\n              </Form>\n            )}\n          </Formik>\n          {apply &&\n            apply.status.id === 1 &&\n            auth.currentUser.role === \"Mediatr\" && (\n              <div className=\"row\">\n                {!rejectForm && (\n                  <div className=\"col-md-12\">\n                    <div className=\"button-setting\">\n                      <Button\n                        onClick={() => {\n                          setRejectForm(true);\n                          toast.info(\n                            \"İmtina etmək üçün səbəb daxil edilməlidir.\"\n                          );\n                        }}\n                        className=\"btn btn-danger float-right  btn-lg mr-1 ml-2 mt-2 mb-4\"\n                      >\n                        İmtina et\n                      </Button>\n\n                      <Formik\n                        initialValues={{ id: apply.id }}\n                        validationSchema={Yup.object({\n                          id: Yup.number().required(\n                            \"Bu sahə mütləq doldurulmalıdır.\"\n                          ),\n                        })}\n                        onSubmit={(values, { setSubmitting, setErrors }) => {\n                          // console.log('ugurludur')\n                          dispatch(approveApply(apply.id));\n                          setModal(true);\n                          dispatch(closeModal());\n                          setSubmitting(false);\n                        }}\n                      >\n                        {({ isSubmitting, isValid, dirty, errors }) => (\n                          <Form className=\"text-left mt-4\">\n                            <div className=\"form\">\n                              <MyTextArea\n                                id=\"id\"\n                                name=\"id\"\n                                type=\"text\"\n                                className=\"form-control\"\n                                value={apply.id}\n                                style={{ display: \"none\" }}\n                                // placeholder=\"İmtina səbəbini daxil edin\"\n                                // label=\"İmtina səbəbi\"\n                              />\n\n                              <div\n                                style={{ float: \"right\" }}\n                                className=\"d-sm-flex text-right justify-content-between\"\n                              >\n                                <div className=\"\">\n                                  <button\n                                    disabled={isSubmitting}\n                                    type=\"submit\"\n                                    // name=\"time\"\n                                    className=\"btn btn-success float-right  btn-lg mt-2 ml-2 mt-2 mb-4 \"\n                                  >\n                                    {async.kind === \"approve\" && (\n                                      <svg\n                                        xmlns=\"http://www.w3.org/2000/svg\"\n                                        width={24}\n                                        height={24}\n                                        viewBox=\"0 0 24 24\"\n                                        fill=\"none\"\n                                        stroke=\"currentColor\"\n                                        strokeWidth={2}\n                                        strokeLinecap=\"round\"\n                                        strokeLinejoin=\"round\"\n                                        className=\"feather feather-loader spin mr-2\"\n                                      >\n                                        <line x1={12} y1={2} x2={12} y2={6} />\n                                        <line x1={12} y1={18} x2={12} y2={22} />\n                                        <line\n                                          x1=\"4.93\"\n                                          y1=\"4.93\"\n                                          x2=\"7.76\"\n                                          y2=\"7.76\"\n                                        />\n                                        <line\n                                          x1=\"16.24\"\n                                          y1=\"16.24\"\n                                          x2=\"19.07\"\n                                          y2=\"19.07\"\n                                        />\n                                        <line x1={2} y1={12} x2={6} y2={12} />\n                                        <line x1={18} y1={12} x2={22} y2={12} />\n                                        <line\n                                          x1=\"4.93\"\n                                          y1=\"19.07\"\n                                          x2=\"7.76\"\n                                          y2=\"16.24\"\n                                        />\n                                        <line\n                                          x1=\"16.24\"\n                                          y1=\"7.76\"\n                                          x2=\"19.07\"\n                                          y2=\"4.93\"\n                                        />\n                                      </svg>\n                                    )}\n                                    Qəbul et\n                                  </button>\n                                </div>\n                              </div>\n                            </div>\n                          </Form>\n                        )}\n                      </Formik>\n                      {/* <Button\n                        onClick={() => {\n                        }}\n                        className=\"btn btn-success float-right  btn-lg mt-2 ml-2 mt-2 mb-4\"\n                      >\n                        {\" \"}\n                        Qəbul et\n                      </Button>\n                      <button\n                        style={{ display: \"none\" }}\n                        id=\"closeModal\"\n                        onClick={() => {\n                          dispatch(closeModal());\n                        }}\n                        className=\"btn btn-lg float-right mt-3 mr-2\"\n                        data-dismiss=\"modal\"\n                      >\n                        <i className=\"flaticon-cancel-12\" /> Ləğv et\n                      </button> */}\n                    </div>\n                  </div>\n                )}\n                <div className=\"col-md-12\">\n                  {rejectForm === true && (\n                    <div className=\"row\">\n                      <div className=\"col-md-12\">\n                        <Formik\n                          initialValues={{ username: \"\", password: \"\" }}\n                          validationSchema={Yup.object({\n                            reasonOfReject: Yup.string().required(\n                              \"Bu sahə mütləq doldurulmalıdır.\"\n                            ),\n                          })}\n                          onSubmit={(values, { setSubmitting, setErrors }) => {\n                            // console.log('ugurludur')\n                            dispatch(\n                              rejectApply(apply.id, {\n                                rejectText: values.reasonOfReject,\n                              })\n                            );\n                            setModal(true);\n                            dispatch(closeModal());\n                            setSubmitting(false);\n                          }}\n                        >\n                          {({ isSubmitting, isValid, dirty, errors }) => (\n                            <Form className=\"text-left mt-4\">\n                              <div className=\"form\">\n                                <div\n                                  id=\"username-field\"\n                                  className=\"field-wrapper input\"\n                                >\n                                  <MyTextArea\n                                    id=\"reasonOfReject\"\n                                    name=\"reasonOfReject\"\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"İmtina səbəbini daxil edin\"\n                                    label=\"İmtina səbəbi\"\n                                  />\n                                </div>\n\n                                <div\n                                  style={{ float: \"right\" }}\n                                  className=\"d-sm-flex text-right justify-content-between\"\n                                >\n                                  <div className=\"\">\n                                    <button\n                                      disabled={\n                                        !isValid || !dirty || isSubmitting\n                                      }\n                                      type=\"submit\"\n                                      // name=\"time\"\n                                      className=\"btn btn-danger text-right  btn-lg mt-3 \"\n                                    >\n                                      İmtina et\n                                    </button>\n                                  </div>\n                                </div>\n                              </div>\n                            </Form>\n                          )}\n                        </Formik>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n        </React.Fragment>\n      )}\n    </ModalWrapper>\n  );\n}\n\n// const nodes = [\n//   {\n//     value: \"mars\",\n//     label: \"Mars\",\n//     children: [\n//       { value: \"phobos\", label: \"Phobos\" },\n//       { value: \"deimos\", label: \"Deimos\" },\n//       { value: \"deimos\", label: \"Deimos\" },\n//       { value: \"deimos\", label: \"Deimos\" },\n//       { value: \"deimos\", label: \"Deimos\" },\n//       { value: \"deimos\", label: \"Deimos\" },\n//       { value: \"deimos\", label: \"Deimos\" },\n//       { value: \"deimos\", label: \"Deimos\" },\n\n//     ],\n//   },\n// ];\n\n// class ApplyPageModal extends React.Component {\n//   state = {\n//     checked: [],\n//     expanded: [],\n//   };\n\n//   render() {\n//     return (\n//       <ModalWrapper>\n//         <CheckboxTree\n//           nodes={nodes}\n//           checked={this.state.checked}\n//           expanded={this.state.expanded}\n//           onCheck={(checked) => this.setState({ checked })}\n//           onExpand={(expanded) => this.setState({ expanded })}\n//         />\n//       </ModalWrapper>\n//     );\n//   }\n// }\n// export default ApplyPageModal;\n","/Users/ict/Documents/GitHub/mediasiya/src/app/common/form/MyTextArea.jsx",[],"/Users/ict/Documents/GitHub/mediasiya/src/app/common/form/MySearchableSelect.jsx",[],"/Users/ict/Documents/GitHub/mediasiya/src/app/common/modal/ModalWrapper.jsx",["283"],"import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Button from \"./Button\";\nimport { closeModal } from \"./modalReducer\";\n\nexport default function ModalWrapper({ children, size, header,data, footer }) {\n  const dispatch = useDispatch();\n\n  return (\n    <div\n\n      className=\"modal fade\"\n      id=\"exampleModal\"\n      // tabIndex={-1}\n      // role=\"dialog\"\n      aria-labelledby=\"exampleModalLabel\"\n      // aria-hidden=\"true\"\n      onClose={() =>\n        setTimeout(function () {\n          dispatch(closeModal());\n        }, 0)\n      }\n      data-backdrop=\"static\"\n      data-keyboard=\"false\"\n    >\n      <div\n        className={`modal-dialog ${size} modal-dialog-centered`}\n        role=\"document\"\n      >\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            {header && (\n              <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n                {header} \n              </h5>\n            )}\n            \n            {data &&  <span class=\"badge ml-4 badge-danger\">  {data}</span> }\n            <button\n              onClick={() => {\n                dispatch(closeModal());\n              }}\n              type=\"button\"\n              className=\"close\"\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n              form=\"emp\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\"\n                height=\"24\"\n                viewBox=\"0 0 24 24\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                className=\"feather feather-x-circle\"\n              >\n                <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n                <line x1=\"15\" y1=\"9\" x2=\"9\" y2=\"15\"></line>\n                <line x1=\"9\" y1=\"9\" x2=\"15\" y2=\"15\"></line>\n              </svg>\n            </button>\n          </div>\n          <div className=\"modal-body\">{children}</div>\n          {/* <div className=\"modal-footer\">\n            <Button/>\n          </div> */}\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/ict/Documents/GitHub/mediasiya/src/app/common/modal/Button.jsx",[],"/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/applyPage/SelectMediatorModal.jsx",["284","285"],"import React, { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\n// import ModalWrapper from \"../../../app/modal/ModalWrapper\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport { Form, Formik } from \"formik\";\n// import { createOrder, sendToOperation, updateOrder } from \"./orderActions\";\n// import { closeModal } from \"../../../app/modal/modalReducer\";\nimport MySearchableSelect from \"../../../app/common/form/MySearchableSelect\";\nimport ModalWrapper from \"../../../app/common/modal/ModalWrapper\";\nimport { closeModal } from \"../../../app/common/modal/modalReducer\";\nimport { assignMediator, loadApply, loadMediatr } from \"./applyActions\";\n\nexport default function SelectMediatorModal({ auth, apply }) {\n  console.log(apply, \"requestId\");\n  const dispatch = useDispatch();\n  const [modal, setModal] = useState(false);\n  useEffect(() => {\n    dispatch(loadMediatr(auth.currentUser.office.id));\n  }, [dispatch]);\n  const { applys } = useSelector((applys) => applys);\n  console.log(applys.mediatrs, \"oyeh\");\n  useEffect(() => {\n    if (modal) {\n      $(\"#closeModal\").click();\n    }\n  });\n  // const { employees } = useSelector((state) => state.employees);\n\n  let employeeOptions = [];\n  // employeeOptions =\n  //   employees &&\n  //   employees.map((employee) => {\n  //     return {\n  //       value: employee.id,\n  //       label: `${employee.name} ${employee.surname}`,\n  //     };\n  //   });\n  const initialValues = {\n    mediatrId: \"\",\n    /////\n  };\n  const validationSchema = Yup.object({\n    mediatrId: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n  });\n  const mediatorOptions =\n    applys.mediatrs &&\n    applys.mediatrs.map((mediatr) => {\n      return {\n        value: parseInt(mediatr.id),\n        label: `${mediatr.firstName} ${mediatr.lastName} ${mediatr.middleName}`,\n        ids: mediatr.mediatrProfessions.map((medik) => medik.id),\n      };\n    });\n  return (\n    <ModalWrapper size=\"modal-md\" header={\"Mediator təyin et\"}>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={async (values, { setSubmitting, setErrors }) => {\n          try {\n            await dispatch(assignMediator(apply.id, values.mediatrId));\n            await dispatch(loadApply({ pageSize: 20 }));\n            setSubmitting(false);\n            setModal(true);\n            dispatch(closeModal());\n          } catch (error) {\n            setErrors({ auth: error.message });\n            // console.log(error);\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ isSubmitting, isValid, dirty, errors, values }) => (\n          <Form>\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <MySearchableSelect\n                  name=\"mediatrId\"\n                  id=\"mediatrId\"\n                  type=\"text\"\n                  options={mediatorOptions}\n                  label=\"Mediator\"\n                  placeholder=\"Mediator seçin\"\n                />\n              </div>\n            </div>\n            <button\n              disabled={!isValid || !dirty || isSubmitting}\n              type=\"submit\"\n              // name=\"time\"\n              className=\"btn btn-primary float-right  btn-lg mt-3 \"\n            >\n              {isSubmitting && (\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width={24}\n                  height={24}\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-loader spin mr-2\"\n                >\n                  <line x1={12} y1={2} x2={12} y2={6} />\n                  <line x1={12} y1={18} x2={12} y2={22} />\n                  <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\" />\n                  <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\" />\n                  <line x1={2} y1={12} x2={6} y2={12} />\n                  <line x1={18} y1={12} x2={22} y2={12} />\n                  <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\" />\n                  <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\" />\n                </svg>\n              )}\n              İcra et\n            </button>\n            <button\n              id=\"closeModal\"\n              onClick={() => {\n                dispatch(closeModal());\n              }}\n              className=\"btn btn-lg float-right mt-3 mr-2\"\n              data-dismiss=\"modal\"\n            >\n              <i className=\"flaticon-cancel-12\" /> Ləğv et\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </ModalWrapper>\n  );\n}\n","/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/applyPage/Widget.jsx",["286"],"import React from 'react';\nimport CheckboxTree from 'react-checkbox-tree';\nconst nodes = [{\n    value: 'mars',\n    label: 'Mars',\n    children: [\n        { value: 'phobos', label: 'Phobos' },\n        { value: 'deimos', label: 'Deimos' },\n    ],\n}];\n\nclass Widget extends React.Component {\n    state = {\n        checked: [],\n        expanded: [],\n    };\n\n    render() {\n        console.log(this.state.checked)\n        return (\n            <CheckboxTree\n            icons={{\n                check: <span className=\"rct-icon rct-icon-check\" />,\n                uncheck: <span className=\"rct-icon rct-icon-uncheck\" />,\n                halfCheck: <span className=\"rct-icon rct-icon-half-check\" />,\n                expandClose: <span className=\"rct-icon rct-icon-expand-close\" />,\n                expandOpen: <span className=\"rct-icon rct-icon-expand-open\" />,\n                expandAll: <span className=\"rct-icon rct-icon-expand-all\" />,\n                collapseAll: <span className=\"rct-icon rct-icon-collapse-all\" />,\n                parentClose: <span className=\"rct-icon rct-icon-parent-close\" />,\n                parentOpen: <span className=\"rct-icon rct-icon-parent-open\" />,\n                leaf: <span className=\"rct-icon rct-icon-leaf\" />,\n            }}\n\n                nodes={this.props.nodes}\n                checked={this.state.checked}\n                expanded={this.state.expanded}\n                onCheck={checked => this.setState({ checked })}\n                onExpand={expanded => this.setState({ expanded })}\n            />\n        );\n    }\n}\nexport default Widget;",["287","288"],"/Users/ict/Documents/GitHub/mediasiya/src/app/common/form/MyCheckbox.jsx",["289","290","291"],"import React from \"react\";\nimport { Formik, Field, useField } from \"formik\";\n\nfunction MyCheckbox(props) {\n  const [field, meta, helpers] = useField(props);\n\n  return (\n    <Field name={props.name}>\n      {({ field, form }) => (\n        <React.Fragment>\n          <label className=\"ml-3\" htmlFor={props.id}>\n            <input\n              type=\"checkbox\"\n              {...props}\n              checked={field.value.includes(props.value)}\n              onChange={() => {\n                if (field.value.includes(props.value)) {\n                  const nextValue = field.value.filter(\n                    (value) => value !== props.value\n                  );\n                  form.setFieldValue(props.name, nextValue);\n                } else {\n                  const nextValue = field.value.concat(props.value);\n                  form.setFieldValue(props.name, nextValue);\n                }\n              }}\n            />\n            <span className=\"ml-2\">{props.label}</span>{\" \"}\n          </label>\n\n          {meta.touched && meta.error ? (\n            <div className=\"invalid-feedback\">{meta.error}</div>\n          ) : null}\n        </React.Fragment>\n      )}\n    </Field>\n  );\n}\nexport default MyCheckbox;\n","/Users/ict/Documents/GitHub/mediasiya/src/features/form/FormPage.jsx",["292","293","294","295","296","297","298","299","300","301","302","303"],"import { Form, Formik } from \"formik\";\nimport moment from \"moment\";\nimport * as Yup from \"yup\";\n\nimport { Redirect, useHistory } from \"react-router\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport MySearchableSelect from \"../../app/common/form/MySearchableSelect\";\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport MyTextArea from \"../../app/common/form/MyTextArea\";\nimport {\n  createMediatr,\n  getPerson,\n  loadDistrict,\n  loadInstitution,\n  loadOffice,\n  loadProfession,\n  loadSocialMedia,\n} from \"./formActions\";\nimport Button from \"../../app/common/modal/Button\";\nimport MyTextInputWithMask from \"../../app/common/form/MyTextInputWithMask\";\n\nexport default function FormPage(form) {\n  const history = useHistory();\n\n  const auth = useSelector((state) => state.auth);\n  const async = useSelector((state) => state.async);\n\n  const forms = useSelector((state) => state.forms);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadProfession());\n    dispatch(loadInstitution());\n    dispatch(loadDistrict());\n    dispatch(loadSocialMedia());\n    dispatch(loadOffice());\n  }, [dispatch]);\n\n  const seriaTypes = [\n    { label: \"AA\", value: \"AA\" },\n    { label: \"AZE\", value: \"AZE\" },\n  ];\n  const prefixTypes = [\n    { label: \"050\", value: \"050\" },\n    { label: \"051\", value: \"051\" },\n    { label: \"055\", value: \"055\" },\n    { label: \"060\", value: \"060\" },\n    { label: \"070\", value: \"070\" },\n    { label: \"070\", value: \"070\" },\n    { label: \"099\", value: \"099\" },\n  ];\n  //   sertifikat\n\n  const [certificate, setCertificate] = useState([\n    {\n      issuerInstitution: \"\",\n      certificateName: \"\",\n      certificationDate: \"\",\n      imageData: \"\",\n    },\n  ]);\n  const handleAddCertificate = () => {\n    setCertificate([\n      ...certificate,\n      {\n        issuerInstitution: \"\",\n        certificateName: \"\",\n        certificationDate: \"\",\n        imageData: \"\",\n      },\n    ]);\n  };\n  const handleRemoveCertificate = () => {\n    if (certificate.length > 1) {\n      let lastIndex = certificate.length - 1;\n      let values = [...certificate];\n      values.splice(lastIndex, 1);\n      setCertificate(values);\n    }\n  };\n  //   education\n  const [education, setEducation] = useState([\n    {\n      collegeName: \"\",\n      majorName: \"\",\n      graduationDate: \"\",\n    },\n  ]);\n  const handleAddEducation = () => {\n    setEducation([\n      ...education,\n      {\n        collegeName: \"\",\n        majorName: \"\",\n        graduationDate: \"\",\n      },\n    ]);\n  };\n  const handleRemoveEducation = () => {\n    if (education.length > 1) {\n      let lastIndex = education.length - 1;\n      let values = [...education];\n      values.splice(lastIndex, 1);\n      setEducation(values);\n    }\n  };\n  //   social\n\n  const [social, setSocial] = useState([\n    {\n      socialMediaId: \"\",\n      linkToPage: \"\",\n    },\n  ]);\n  const handleAddSocial = () => {\n    setSocial([\n      ...social,\n      {\n        socialMediaId: \"\",\n        linkToPage: \"\",\n      },\n    ]);\n  };\n  const handleRemoveSocial = () => {\n    if (social.length > 1) {\n      let lastIndex = social.length - 1;\n      let values = [...social];\n      values.splice(lastIndex, 1);\n      setSocial(values);\n    }\n  };\n  // profession loading ...\n  const professionOptions =\n    forms.professions &&\n    forms.professions.map((profession) => {\n      return {\n        value: parseInt(profession.id),\n        label: `${profession.professionName}`,\n      };\n    });\n\n  // profession loading ...\n  const institutionOptions =\n    forms.institutions &&\n    forms.institutions.map((institution) => {\n      return {\n        value: parseInt(institution.id),\n        label: `${institution.institutionName}`,\n      };\n    });\n  // district loading ...\n  const districtOptions =\n    forms.districts &&\n    forms.districts.map((district) => {\n      return {\n        value: parseInt(district.id),\n        label: `${district.districtName}`,\n      };\n    });\n  // Social media loading ...\n  const socialMediaOptions =\n    forms.socialMedias &&\n    forms.socialMedias.map((socialMedia) => {\n      return {\n        value: parseInt(socialMedia.id),\n        label: `${socialMedia.socialMediaName}`,\n      };\n    });\n  // Social media loading ...\n  const officeOptions =\n    forms.offices &&\n    forms.offices.map((office) => {\n      return {\n        value: parseInt(office.id),\n        label: `${office.officeName}`,\n      };\n    });\n\n  // lang knowledge loading ...\n\n  const languageKnowledgeOptions = [\n    { label: \"Azərbaycan\", value: \"Azərbaycan\" },\n    { label: \"Rus\", value: \"Rus\" },\n    { label: \"İngilis\", value: \"İngilis\" },\n  ];\n\n  // getPerson data\n  const getPersonData = async (docSeries, docNumber, pin) => {\n    await dispatch(getPerson({ docSeries, docNumber, pin }));\n  };\n  const initialValues = {\n    firstName: \"\",\n    lastName: \"\",\n    middleName: \"\",\n    dateOfBirth: \"\",\n    pin: \"\",\n    docSeries: \"\",\n    docNumber: \"\",\n    regAddress: \"\",\n    actingAddress: \"\",\n    membershipDate: \"\",\n    languageSkills: \"\",\n    voen: \"\",\n    registryNumber: \"\",\n    email: \"\",\n    phone: \"\",\n    personalPageLink: \"\",\n    otherWorkplace: \"\",\n    otherPosition: \"\",\n    // officeId: \"\",\n\n    institutionId: \"\",\n    mediatrProfessions: [],\n    districtMediatrs: \"\",\n    mediatrsSocialMedias: social,\n    educations: education,\n    certificates: certificate,\n  };\n\n  const validationSchema = Yup.object({\n    pin: Yup.string()\n      .min(5, \"FİN düzgün daxil edilməyib\")\n      .max(7, \"FİN düzgün daxil edilməyib\")\n      .required(\"Bu xana boş qoyula bilməz\"),\n    docSeries: Yup.string().required(\"Bu xana boş qoyula bilməz\"),\n    docNumber: Yup.string().required(\"Bu xana boş qoyula bilməz\"),\n    actingAddress: Yup.string().required(\"Bu xana boş qoyula bilməz\"),\n    membershipDate: Yup.string().required(\"Bu xana boş qoyula bilməz\"),\n    languageSkills: Yup.array()\n      .min(1, \"Bu xana boş qoyula bilməz\")\n      .required(\"Bu xana boş qoyula bilməz\"),\n    prefix: Yup.string().required(\"Bu xana boş qoyula bilməz\"),\n    voen: Yup.string()\n      .min(10, \"VÖEN düzgün daxil edilməyib\")\n      .max(10, \"VÖEN düzgün daxil edilməyib\")\n      .required(\"Bu xana boş qoyula bilməz\"),\n    registryNumber: Yup.string().required(\"Bu xana boş qoyula bilməz\"),\n    email: Yup.string()\n      .email(\"Elektron poçt ünvanı düzgün daxil edilməyib\")\n      .required(\"Bu xana boş qoyula bilməz\"),\n    phone: Yup.string().required(\"Bu xana boş qoyula bilməz\"),\n    otherWorkplace: Yup.string().required(\"Bu xana boş qoyula bilməz\"),\n    otherPosition: Yup.string().required(\"Bu xana boş qoyula bilməz\"),\n    institutionId: Yup.string().required(\"Bu xana boş qoyula bilməz\"),\n    mediatrProfessions: Yup.array()\n      .min(1, \"Bu xana boş qoyula bilməz\")\n      .required(\"Bu xana boş qoyula bilməz\"),\n    districtMediatrs: Yup.string().required(\"Bu xana boş qoyula bilməz\"),\n    educations: Yup.array()\n      .of(\n        Yup.object().shape({\n          collegeName: Yup.string().required(\"Bu xana boş qoyula bilməz\"),\n          majorName: Yup.string().required(\"Bu xana boş qoyula bilməz\"),\n          graduationDate: Yup.date().required(\"Bu xana boş qoyula bilməz\"),\n        })\n      )\n      .required(\"Bu xana boş qoyula bilməz\"),\n    // certificates: Yup.string().required(\"Bu xana boş qoyula bilməz\"),\n  });\n\n  // file upload\n  // file.size / 1024 / 1024 > 1\n  const [baseImageErr, setBaseImageErr] = useState(\"\");\n  const [page, setPage] = useState();\n\n  const convertBase64 = (file) => {\n    if (file.size / 1024 / 1024 > 1) {\n      setBaseImageErr(\"Faylın ölçüsü 1MB-dan böyük ola bilməz\");\n    } else {\n      return new Promise((resolve, reject) => {\n        const fileReader = new FileReader();\n        fileReader.readAsDataURL(file);\n\n        fileReader.onload = () => {\n          resolve(fileReader.result.split(\",\")[1]);\n        };\n\n        fileReader.onerror = (error) => {\n          reject(error);\n        };\n      });\n    }\n  };\n  return (\n    <React.Fragment>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={(values, { setSubmitting, setErrors }) => {\n          dispatch(\n            createMediatr(history, {\n              firstName: forms.person && forms.person.firstName,\n              lastName: forms.person && forms.person.lastName,\n              middleName: forms.person && forms.person.middleName,\n              dateOfBirth: forms.person && forms.person.dateOfBirth,\n\n              imagePath: forms.person && forms.person.imagePath,\n              pin: values.pin.toUpperCase(),\n              docSeries: values.docSeries,\n              docNumber: values.docNumber,\n              regAddress: forms.person && forms.person.regAddress,\n              actingAddress: values.actingAddress,\n              membershipDate: values.membershipDate,\n              languageSkills: values.languageSkills.toString(),\n              voen: values.voen,\n              registryNumber: values.registryNumber,\n              email: values.email,\n              phone: `${values.prefix}${values.phone}`,\n              personalPageLink: values.personalPageLink,\n              otherWorkplace: values.otherWorkplace,\n              otherPosition: values.otherPosition,\n              officeId: values.officeId,\n              institutionId: values.institutionId,\n              mediatrProfessions: values.mediatrProfessions,\n              districtMediatrs: [values.districtMediatrs],\n              mediatrsSocialMedias: values.mediatrsSocialMedias,\n              educations: values.educations,\n              certificates: values.certificates,\n            })\n          );\n          setSubmitting(false);\n        }}\n      >\n        {({ isSubmitting, isValid, dirty, errors, values, setFieldValue }) => (\n          <Form className=\"text-left mt-4\">\n            <div className=\"helpdesk container\">\n              <div className=\"helpdesk layout-spacing\">\n                <div className=\"hd-header-wrapper\">\n                  <div className=\"row\">\n                    <div className=\"col-md-12 text-center\">\n                      <h4 className>\n                        Mediatorun reyestr məlumatları üçün sorğu\n                      </h4>\n                      <p className>Mediasiya Şurası</p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"hd-tab-section\">\n                  <div className=\"row\">\n                    <div className=\"col-md-12 mb-5 mt-5\">\n                      {forms.message ? (\n                        <div className=\"row mt-5\">\n                          <div className=\"col-md-12 mt-5\">\n                            <h3 className=\"text-info text-center mt-5\">\n                              {forms.message}\n                            </h3>\n                          </div>\n                        </div>\n                      ) : (\n                        <div className=\"accordion\" id=\"hd-statistics\">\n                          <div className=\"card\">\n                            <div className=\"card-header\" id=\"hd-statistics-1\">\n                              <div className=\"mb-0\">\n                                <div\n                                  className=\"collapsed\"\n                                  data-toggle=\"collapse\"\n                                  role=\"navigation\"\n                                  data-target=\"#collapse-hd-statistics-1\"\n                                  aria-expanded=\"false\"\n                                  aria-controls=\"collapse-hd-statistics-1\"\n                                >\n                                  <svg\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                    width={24}\n                                    height={24}\n                                    viewBox=\"0 0 24 24\"\n                                    fill=\"none\"\n                                    stroke=\"currentColor\"\n                                    strokeWidth={2}\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    className=\"feather feather-help-circle\"\n                                  >\n                                    <circle cx={12} cy={12} r={10} />\n                                    <path d=\"M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3\" />\n                                    <line x1={12} y1={17} x2={12} y2={17} />\n                                  </svg>\n                                  Şəxsi məlumatlar\n                                </div>\n                              </div>\n                            </div>\n                            <div\n                              id=\"collapse-hd-statistics-1\"\n                              className=\"collapse\"\n                              aria-labelledby=\"hd-statistics-1\"\n                              data-parent=\"#hd-statistics\"\n                              style={{}}\n                            >\n                              <div className=\"card-body\">\n                                <div className=\"row\">\n                                  <div className=\"col-md-2\">\n                                    <MySearchableSelect\n                                      id=\"docSeries\"\n                                      name=\"docSeries\"\n                                      type=\"text\"\n                                      //   isDisabled={apply ? true : false}\n                                      options={seriaTypes}\n                                      // className=\"form-control\"\n                                      placeholder=\"Seriya\"\n                                      label={\"Ş/V seriyası *\"}\n                                    />\n                                  </div>\n                                  <div className=\"col-md-4\">\n                                    <MyTextInput\n                                      id=\"docNumber\"\n                                      name=\"docNumber\"\n                                      type=\"docNumber\"\n                                      //   isDisabled={apply ? true : false}\n                                      options={seriaTypes}\n                                      className=\"form-control\"\n                                      placeholder=\"Nömrə\"\n                                      label={\"Ş/V nömrəsi *\"}\n                                    />\n                                  </div>\n                                  <div className=\"col-md-4\">\n                                    <MyTextInput\n                                      style={{ textTransform: \"uppercase\" }}\n                                      id=\"pin\"\n                                      name=\"pin\"\n                                      type=\"text\"\n                                      //   isDisabled={apply ? true : false}\n                                      options={seriaTypes}\n                                      className=\"form-control\"\n                                      placeholder=\"FİN\"\n                                      label={\"FİN *\"}\n                                    />\n                                  </div>\n                                  <div className=\"col-md-2 pt-1\">\n                                    <div>\n                                      <Button\n                                        type=\"button\"\n                                        disabled={\n                                          !values.pin ||\n                                          !values.docNumber ||\n                                          !values.docSeries\n                                        }\n                                        onClick={() =>\n                                          getPersonData(\n                                            values.docSeries,\n                                            values.docNumber,\n                                            values.pin\n                                          )\n                                        }\n                                        className=\"w-100 btn btn-outline-primary btn-lg mt-4\"\n                                      >\n                                        {async.loading && (\n                                          <svg\n                                            xmlns=\"http://www.w3.org/2000/svg\"\n                                            width={24}\n                                            height={24}\n                                            viewBox=\"0 0 24 24\"\n                                            fill=\"none\"\n                                            stroke=\"currentColor\"\n                                            strokeWidth={2}\n                                            strokeLinecap=\"round\"\n                                            strokeLinejoin=\"round\"\n                                            className=\"feather feather-loader spin mr-2\"\n                                          >\n                                            <line\n                                              x1={12}\n                                              y1={2}\n                                              x2={12}\n                                              y2={6}\n                                            />\n                                            <line\n                                              x1={12}\n                                              y1={18}\n                                              x2={12}\n                                              y2={22}\n                                            />\n                                            <line\n                                              x1=\"4.93\"\n                                              y1=\"4.93\"\n                                              x2=\"7.76\"\n                                              y2=\"7.76\"\n                                            />\n                                            <line\n                                              x1=\"16.24\"\n                                              y1=\"16.24\"\n                                              x2=\"19.07\"\n                                              y2=\"19.07\"\n                                            />\n                                            <line\n                                              x1={2}\n                                              y1={12}\n                                              x2={6}\n                                              y2={12}\n                                            />\n                                            <line\n                                              x1={18}\n                                              y1={12}\n                                              x2={22}\n                                              y2={12}\n                                            />\n                                            <line\n                                              x1=\"4.93\"\n                                              y1=\"19.07\"\n                                              x2=\"7.76\"\n                                              y2=\"16.24\"\n                                            />\n                                            <line\n                                              x1=\"16.24\"\n                                              y1=\"7.76\"\n                                              x2=\"19.07\"\n                                              y2=\"4.93\"\n                                            />\n                                          </svg>\n                                        )}\n                                        Axtar\n                                      </Button>\n                                    </div>\n                                  </div>\n                                </div>\n\n                                <div className=\"row mt-5\">\n                                  <div className=\"col-md-3\">\n                                    <MyTextInput\n                                      id=\"firstName\"\n                                      name=\"firstName\"\n                                      type=\"text\"\n                                      value={\n                                        forms.person && forms.person.firstName\n                                      }\n                                      readOnly\n                                      //   isDisabled={apply ? true : false}\n                                      options={seriaTypes}\n                                      className=\"form-control\"\n                                      placeholder=\"Ad\"\n                                      label={\"Ad *\"}\n                                    />\n                                  </div>\n                                  <div className=\"col-md-3\">\n                                    <MyTextInput\n                                      id=\"lastName\"\n                                      name=\"lastName\"\n                                      type=\"text\"\n                                      value={\n                                        forms.person && forms.person.lastName\n                                      }\n                                      readOnly\n                                      //   isDisabled={apply ? true : false}\n                                      options={seriaTypes}\n                                      className=\"form-control\"\n                                      placeholder=\"Soyad\"\n                                      label={\"Soyad *\"}\n                                    />\n                                  </div>\n                                  <div className=\"col-md-3\">\n                                    <MyTextInput\n                                      id=\"middleName\"\n                                      name=\"middleName\"\n                                      type=\"text\"\n                                      value={\n                                        forms.person && forms.person.middleName\n                                      }\n                                      readOnly\n                                      //   isDisabled={apply ? true : false}\n                                      options={seriaTypes}\n                                      className=\"form-control\"\n                                      placeholder=\"Ata adı\"\n                                      label={\"Ata adı *\"}\n                                    />\n                                  </div>\n                                  <div className=\"col-md-3 pt-1\">\n                                    <MyTextInput\n                                      id=\"dateOfBirth\"\n                                      name=\"dateOfBirth\"\n                                      type=\"date\"\n                                      value={\n                                        forms.person && forms.person.dateOfBirth\n                                      }\n                                      readOnly\n                                      //   isDisabled={apply ? true : false}\n                                      options={seriaTypes}\n                                      className=\"form-control\"\n                                      placeholder=\"Doğum tarixi\"\n                                      label={\"Doğum tarixi *\"}\n                                    />\n                                  </div>\n                                </div>\n                                <div className=\"row mt-5\">\n                                  <div className=\"col-md-12 mv-4 pt-1\">\n                                    <MyTextArea\n                                      id=\"regAddress\"\n                                      name=\"regAddress\"\n                                      type=\"text\"\n                                      value={\n                                        forms.person && forms.person.regAddress\n                                      }\n                                      readOnly\n                                      //   isDisabled={apply ? true : false}\n                                      options={seriaTypes}\n                                      className=\"form-control\"\n                                      placeholder=\"Qeydiyyat ünvanı\"\n                                      label={\"Qeydiyyat ünvanı *\"}\n                                    />\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"card\">\n                            <div className=\"card-header\" id=\"hd-statistics-2\">\n                              <div className=\"mb-0\">\n                                <div\n                                  className=\"collapsed\"\n                                  data-toggle=\"collapse\"\n                                  role=\"navigation\"\n                                  data-target=\"#collapse-hd-statistics-2\"\n                                  aria-expanded=\"false\"\n                                  aria-controls=\"collapse-hd-statistics-2\"\n                                >\n                                  <svg\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                    width={24}\n                                    height={24}\n                                    viewBox=\"0 0 24 24\"\n                                    fill=\"none\"\n                                    stroke=\"currentColor\"\n                                    strokeWidth={2}\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    className=\"feather feather-help-circle\"\n                                  >\n                                    <circle cx={12} cy={12} r={10} />\n                                    <path d=\"M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3\" />\n                                    <line x1={12} y1={17} x2={12} y2={17} />\n                                  </svg>\n                                  Fəaliyyətinə dair məlumatlar\n                                </div>\n                              </div>\n                            </div>\n                            <div\n                              id=\"collapse-hd-statistics-2\"\n                              className=\"collapse\"\n                              aria-labelledby=\"hd-statistics-2\"\n                              data-parent=\"#hd-statistics\"\n                              style={{}}\n                            >\n                              <div className=\"card-body\">\n                                <div className=\"row\">\n                                  <div className=\"col-md-12 mb-4\">\n                                    <MySearchableSelect\n                                      id=\"mediatrProfessions\"\n                                      name=\"mediatrProfessions\"\n                                      type=\"text\"\n                                      //   isDisabled={apply ? true : false}\n                                      options={professionOptions}\n                                      isMulti\n                                      // className=\"form-control\"\n                                      placeholder=\"İxtisaslaşma\"\n                                      label={\"İxtisaslaşma *\"}\n                                    />\n                                  </div>\n                                  <div className=\"col-md-12 mb-4\">\n                                    <MySearchableSelect\n                                      id=\"institutionId\"\n                                      name=\"institutionId\"\n                                      type=\"text\"\n                                      //   isDisabled={apply ? true : false}\n                                      options={institutionOptions}\n                                      // className=\"form-control\"\n                                      placeholder=\"Təlim keçdiyi qurum\"\n                                      label={\"Təlim keçdiyi qurum *\"}\n                                    />\n                                  </div>\n                                  <div className=\"col-md-12 mb-4\">\n                                    <MySearchableSelect\n                                      id=\"districtMediatrs\"\n                                      name=\"districtMediatrs\"\n                                      type=\"text\"\n                                      //   isDisabled={apply ? true : false}\n                                      options={districtOptions}\n                                      // className=\"form-control\"\n                                      placeholder=\"Fəaliyyət göstərdiyi şəhər/rayon *\"\n                                      label={\n                                        \"Fəaliyyət göstərdiyi şəhər/rayon *\"\n                                      }\n                                    />\n                                  </div>\n                                  {/* <div className=\"col-md-12 mb-4\">\n                                            <MySearchableSelect\n                                              id=\"officeId\"\n                                              name=\"officeId\"\n                                              type=\"text\"\n                                              //   isDisabled={apply ? true : false}\n                                              options={officeOptions}\n                                              // className=\"form-control\"\n                                              placeholder=\"Mediasiya təşkilatı\"\n                                              label={\"Mediasiya təşkilatı\"}\n                                            />\n                                          </div> */}\n                                  <div className=\"col-md-12 mb-4\">\n                                    <MyTextArea\n                                      id=\"actingAddress\"\n                                      name=\"actingAddress\"\n                                      type=\"text\"\n                                      //   isDisabled={apply ? true : false}\n                                      className=\"form-control\"\n                                      placeholder=\"Fəliyyət göstərdiyi ünvan\"\n                                      label={\"Fəaliyyət göstərdiyi ünvan *\"}\n                                    />\n                                  </div>\n\n                                  <div className=\"col-md-12 mb-4\">\n                                    <MyTextInput\n                                      id=\"membershipDate\"\n                                      name=\"membershipDate\"\n                                      type=\"date\"\n                                      //   isDisabled={apply ? true : false}\n                                      className=\"form-control\"\n                                      placeholder=\"Üzvlüyə qəbul edildiyi tarix\"\n                                      label={\"Üzvlüyə qəbul edildiyi tarix *\"}\n                                    />\n                                  </div>\n                                  <div className=\"col-md-12 mb-4\">\n                                    <MyTextInputWithMask\n                                      id=\"registryNumber\"\n                                      name=\"registryNumber\"\n                                      type=\"text\"\n                                      mask=\"M-99999\"\n                                      //   isDisabled={apply ? true : false}\n                                      className=\"form-control\"\n                                      placeholder=\"Reyestr nömrəsi *\"\n                                      label={\"Reyestr nömrəsi *\"}\n                                    />\n                                  </div>\n                                  <div className=\"col-md-12 mb-4\">\n                                    <MyTextInputWithMask\n                                      mask=\"9999999999\"\n                                      id=\"voen\"\n                                      name=\"voen\"\n                                      type=\"text\"\n                                      //   isDisabled={apply ? true : false}\n                                      className=\"form-control\"\n                                      placeholder=\"VÖEN\"\n                                      label={\"VÖEN *\"}\n                                    />\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"card\">\n                            <div className=\"card-header\" id=\"hd-performance-2\">\n                              <div className=\"mb-0\">\n                                <div\n                                  className=\" collapsed\"\n                                  data-toggle=\"collapse\"\n                                  role=\"navigation\"\n                                  data-target=\"#collapse-hd-performance-2\"\n                                  aria-expanded=\"false\"\n                                  aria-controls=\"collapse-hd-performance-2\"\n                                >\n                                  <svg\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                    width={24}\n                                    height={24}\n                                    viewBox=\"0 0 24 24\"\n                                    fill=\"none\"\n                                    stroke=\"currentColor\"\n                                    strokeWidth={2}\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    className=\"feather feather-help-circle\"\n                                  >\n                                    <circle cx={12} cy={12} r={10} />\n                                    <path d=\"M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3\" />\n                                    <line x1={12} y1={17} x2={12} y2={17} />\n                                  </svg>\n                                  Təhsil məlumatları\n                                </div>\n                              </div>\n                            </div>\n                            <div\n                              id=\"collapse-hd-performance-2\"\n                              className=\"collapse\"\n                              aria-labelledby=\"hd-performance-2\"\n                              data-parent=\"#hd-statistics\"\n                            >\n                              <div className=\"card-body\">\n                                <div className=\"row mb-4\">\n                                  <div className=\"col-md-2 offset-10 text-right\">\n                                    <div className=\"icon-container\">\n                                      <button\n                                        title=\"Sertifikat əlavə et\"\n                                        type=\"button\"\n                                        className=\"close\"\n                                        onClick={() => handleAddEducation()}\n                                      >\n                                        <svg\n                                          xmlns=\"http://www.w3.org/2000/svg\"\n                                          width={24}\n                                          height={24}\n                                          viewBox=\"0 0 24 24\"\n                                          fill=\"none\"\n                                          stroke=\"currentColor\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                          className=\"feather feather-plus-circle\"\n                                        >\n                                          <circle cx={12} cy={12} r={10} />\n                                          <line\n                                            x1={12}\n                                            y1={8}\n                                            x2={12}\n                                            y2={16}\n                                          />\n                                          <line\n                                            x1={8}\n                                            y1={12}\n                                            x2={16}\n                                            y2={12}\n                                          />\n                                        </svg>\n                                      </button>\n                                      <button\n                                        type=\"button\"\n                                        onClick={() => handleRemoveEducation()}\n                                        className=\"close\"\n                                        title=\"Sertifikat sil\"\n                                      >\n                                        <svg\n                                          xmlns=\"http://www.w3.org/2000/svg\"\n                                          width={24}\n                                          height={24}\n                                          viewBox=\"0 0 24 24\"\n                                          fill=\"none\"\n                                          stroke=\"currentColor\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                          className=\"feather feather-minus-circle\"\n                                        >\n                                          <circle cx={12} cy={12} r={10} />\n                                          <line\n                                            x1={8}\n                                            y1={12}\n                                            x2={16}\n                                            y2={12}\n                                          />\n                                        </svg>\n                                      </button>\n                                    </div>\n                                  </div>\n                                </div>\n                                {education &&\n                                  education.map((edu, index) => (\n                                    <React.Fragment key={index}>\n                                      <div className=\"row\">\n                                        <div className=\"col-md-4 mb-4\">\n                                          <MyTextInput\n                                            id={`educations[${index}].collegeName`}\n                                            name={`educations[${index}].collegeName`}\n                                            type=\"text\"\n                                            //   isDisabled={apply ? true : false}\n                                            className=\"form-control\"\n                                            placeholder=\"Təhsil müəssisəsinin adı\"\n                                            label={\"Təhsil müəssisəsinin adı *\"}\n                                          />\n                                        </div>\n                                        <div className=\"col-md-4 mb-4\">\n                                          <MyTextInput\n                                            id={`educations[${index}].majorName`}\n                                            name={`educations[${index}].majorName`}\n                                            type=\"text\"\n                                            //   isDisabled={apply ? true : false}\n                                            className=\"form-control\"\n                                            placeholder=\"İxtisas\"\n                                            label={\"İxtisas *\"}\n                                          />\n                                        </div>\n                                        <div className=\"col-md-4 mb-4\">\n                                          <MyTextInput\n                                            id={`educations[${index}].graduationDate`}\n                                            name={`educations[${index}].graduationDate`}\n                                            type=\"date\"\n                                            //   isDisabled={apply ? true : false}\n                                            className=\"form-control\"\n                                            placeholder=\"il\"\n                                            label={\"Bitirdiyi il *\"}\n                                          />\n                                        </div>\n                                      </div>\n                                    </React.Fragment>\n                                  ))}\n                              </div>\n                            </div>\n                          </div>\n\n                          <div className=\"card\">\n                            <div className=\"card-header\" id=\"hd-statistics-3\">\n                              <div className=\"mb-0\">\n                                <div\n                                  className=\"collapsed\"\n                                  data-toggle=\"collapse\"\n                                  role=\"navigation\"\n                                  data-target=\"#collapse-hd-statistics-3\"\n                                  aria-expanded=\"false\"\n                                  aria-controls=\"collapse-hd-statistics-3\"\n                                >\n                                  <svg\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                    width={24}\n                                    height={24}\n                                    viewBox=\"0 0 24 24\"\n                                    fill=\"none\"\n                                    stroke=\"currentColor\"\n                                    strokeWidth={2}\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    className=\"feather feather-help-circle\"\n                                  >\n                                    <circle cx={12} cy={12} r={10} />\n                                    <path d=\"M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3\" />\n                                    <line x1={12} y1={17} x2={12} y2={17} />\n                                  </svg>\n                                  Sertifikat barədə məlumatlar\n                                </div>\n                              </div>\n                            </div>\n                            <div\n                              id=\"collapse-hd-statistics-3\"\n                              className=\"collapse\"\n                              aria-labelledby=\"hd-statistics-3\"\n                              data-parent=\"#hd-statistics\"\n                              style={{}}\n                            >\n                              <div className=\"card-body\">\n                                <div className=\"row mb-4\">\n                                  <div className=\"col-md-2 offset-10 text-right\">\n                                    <div className=\"icon-container\">\n                                      <button\n                                        title=\"Sertifikat əlavə et\"\n                                        type=\"button\"\n                                        className=\"close\"\n                                        onClick={() => handleAddCertificate()}\n                                      >\n                                        <svg\n                                          xmlns=\"http://www.w3.org/2000/svg\"\n                                          width={24}\n                                          height={24}\n                                          viewBox=\"0 0 24 24\"\n                                          fill=\"none\"\n                                          stroke=\"currentColor\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                          className=\"feather feather-plus-circle\"\n                                        >\n                                          <circle cx={12} cy={12} r={10} />\n                                          <line\n                                            x1={12}\n                                            y1={8}\n                                            x2={12}\n                                            y2={16}\n                                          />\n                                          <line\n                                            x1={8}\n                                            y1={12}\n                                            x2={16}\n                                            y2={12}\n                                          />\n                                        </svg>\n                                      </button>\n                                      <button\n                                        type=\"button\"\n                                        onClick={() =>\n                                          handleRemoveCertificate()\n                                        }\n                                        className=\"close\"\n                                        title=\"Sertifikat sil\"\n                                      >\n                                        <svg\n                                          xmlns=\"http://www.w3.org/2000/svg\"\n                                          width={24}\n                                          height={24}\n                                          viewBox=\"0 0 24 24\"\n                                          fill=\"none\"\n                                          stroke=\"currentColor\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                          className=\"feather feather-minus-circle\"\n                                        >\n                                          <circle cx={12} cy={12} r={10} />\n                                          <line\n                                            x1={8}\n                                            y1={12}\n                                            x2={16}\n                                            y2={12}\n                                          />\n                                        </svg>\n                                      </button>\n                                    </div>\n                                  </div>\n                                </div>\n                                {certificate &&\n                                  certificate.map((certi, index) => (\n                                    <React.Fragment key={index}>\n                                      <div className=\"row\">\n                                        <div className=\"col-md-3 mb-4\">\n                                          <MyTextInput\n                                            id={`certificates[${index}].issuerInstitution`}\n                                            name={`certificates[${index}].issuerInstitution`}\n                                            type=\"text\"\n                                            //   isDisabled={apply ? true : false}\n                                            className=\"form-control\"\n                                            placeholder=\"Sertifikati verən qurum\"\n                                            label={\"Sertifikati verən qurum\"}\n                                          />\n                                        </div>\n                                        <div className=\"col-md-3 mb-4\">\n                                          <MyTextInput\n                                            id={`certificates[${index}].certificateName`}\n                                            name={`certificates[${index}].certificateName`}\n                                            type=\"text\"\n                                            //   isDisabled={apply ? true : false}\n                                            className=\"form-control\"\n                                            placeholder=\"Sertifikatın adı, növü\"\n                                            label={\"Sertifikatın adı, növü\"}\n                                          />\n                                        </div>\n                                        <div className=\"col-md-3 mb-4\">\n                                          <MyTextInput\n                                            id={`certificates[${index}].certificationDate`}\n                                            name={`certificates[${index}].certificationDate`}\n                                            type=\"date\"\n                                            //   isDisabled={apply ? true : false}\n                                            className=\"form-control\"\n                                            placeholder=\"Verilmə tarixi\"\n                                            label={\"Verilmə tarixi\"}\n                                          />\n                                        </div>\n                                        <div className=\"col-md-3 mb-4\">\n                                          <label\n                                            htmlFor={`certificates[${index}].imageData`}\n                                          >\n                                            Sertifikatı yüklə (jpg,png,pdf)\n                                          </label>\n                                          <input\n                                            id={`certificates[${index}].imageData`}\n                                            name={`certificates[${index}].imageData`}\n                                            type=\"file\"\n                                            accept=\"image/jpg,image/png,application/pdf\"\n                                            onChange={async (e) => {\n                                              // uploadImage(e);\n                                              const base64 =\n                                                await convertBase64(\n                                                  e.target.files[0]\n                                                );\n                                              setFieldValue(\n                                                `certificates[${index}].imageData`,\n                                                base64\n                                              );\n                                            }}\n                                            //   isDisabled={apply ? true : false}\n                                            className=\"form-control\"\n                                            placeholder=\"Sertifikat\"\n                                            label={\"Sertifikat\"}\n                                          />\n                                          <div className=\"invalid-feedback\">\n                                            {baseImageErr && baseImageErr}\n                                          </div>\n                                        </div>\n                                      </div>\n                                    </React.Fragment>\n                                  ))}\n                              </div>\n                            </div>\n                          </div>\n\n                          <div className=\"card\">\n                            <div className=\"card-header\" id=\"hd-performance-3\">\n                              <div className=\"mb-0\">\n                                <div\n                                  className=\" collapsed\"\n                                  data-toggle=\"collapse\"\n                                  role=\"navigation\"\n                                  data-target=\"#collapse-hd-performance-3\"\n                                  aria-expanded=\"false\"\n                                  aria-controls=\"collapse-hd-performance-3\"\n                                >\n                                  <svg\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                    width={24}\n                                    height={24}\n                                    viewBox=\"0 0 24 24\"\n                                    fill=\"none\"\n                                    stroke=\"currentColor\"\n                                    strokeWidth={2}\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    className=\"feather feather-help-circle\"\n                                  >\n                                    <circle cx={12} cy={12} r={10} />\n                                    <path d=\"M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3\" />\n                                    <line x1={12} y1={17} x2={12} y2={17} />\n                                  </svg>\n                                  Digər\n                                </div>\n                              </div>\n                            </div>\n                            <div\n                              id=\"collapse-hd-performance-3\"\n                              className=\"collapse\"\n                              aria-labelledby=\"hd-performance-3\"\n                              data-parent=\"#hd-statistics\"\n                            >\n                              <div className=\"card-body\">\n                                <div className=\"row\">\n                                  <div className=\"col-md-12 mb-4\">\n                                    <MySearchableSelect\n                                      id=\"languageSkills\"\n                                      name=\"languageSkills\"\n                                      type=\"text\"\n                                      isMulti\n                                      options={languageKnowledgeOptions}\n                                      // isMulti\n                                      //   isDisabled={apply ? true : false}\n                                      placeholder=\"Dil bilikləri\"\n                                      label={\"Dil bilikləri *\"}\n                                    />\n                                  </div>\n                                  <div className=\"col-md-12 mb-4\">\n                                    <MyTextInput\n                                      id=\"otherWorkplace\"\n                                      name=\"otherWorkplace\"\n                                      type=\"text\"\n                                      //   isDisabled={apply ? true : false}\n                                      className=\"form-control\"\n                                      placeholder=\"Mediatorluqla yanaşı hazırda işlədiyi yer*\"\n                                      label={\n                                        \"Mediatorluqla yanaşı hazırda işlədiyi yer*\"\n                                      }\n                                    />\n                                  </div>\n                                  <div className=\"col-md-12 mb-4\">\n                                    <MyTextInput\n                                      id=\"otherPosition\"\n                                      name=\"otherPosition\"\n                                      type=\"text\"\n                                      //   isDisabled={apply ? true : false}\n                                      className=\"form-control\"\n                                      placeholder=\"Vəzifə\"\n                                      label={\"Vəzifə*\"}\n                                    />\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n\n                          <div className=\"card\">\n                            <div className=\"card-header\" id=\"hd-performance-1\">\n                              <div className=\"mb-0\">\n                                <div\n                                  className\n                                  data-toggle=\"collapse\"\n                                  role=\"navigation\"\n                                  data-target=\"#collapse-hd-performance-1\"\n                                  aria-expanded=\"false\"\n                                  aria-controls=\"collapse-hd-performance-1\"\n                                >\n                                  <svg\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                    width={24}\n                                    height={24}\n                                    viewBox=\"0 0 24 24\"\n                                    fill=\"none\"\n                                    stroke=\"currentColor\"\n                                    strokeWidth={2}\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    className=\"feather feather-help-circle\"\n                                  >\n                                    <circle cx={12} cy={12} r={10} />\n                                    <path d=\"M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3\" />\n                                    <line x1={12} y1={17} x2={12} y2={17} />\n                                  </svg>\n                                  Əlaqə\n                                </div>\n                              </div>\n                            </div>\n                            <div\n                              id=\"collapse-hd-performance-1\"\n                              className=\"collapse\"\n                              aria-labelledby=\"hd-performance-1\"\n                              data-parent=\"#hd-statistics\"\n                            >\n                              <div className=\"card-body\">\n                                <div className=\"row\">\n                                  <div className=\"col-md-2 mb-4\">\n                                    <MySearchableSelect\n                                      id={`prefix`}\n                                      name={`prefix`}\n                                      type=\"text\"\n                                      options={prefixTypes}\n                                      //   isDisabled={apply ? true : false}\n                                      // className=\"form-control\"\n                                      placeholder=\"Prefiks\"\n                                      label={\"Prefiks* \"}\n                                    />\n                                  </div>\n                                  <div className=\"col-md-10 mb-4\">\n                                    <MyTextInputWithMask\n                                      id=\"phone\"\n                                      name=\"phone\"\n                                      type=\"text\"\n                                      mask=\"9999999\"\n                                      //   isDisabled={apply ? true : false}\n                                      options={seriaTypes}\n                                      className=\"form-control\"\n                                      placeholder=\"Telefon nömrəsi\"\n                                      label={\"Telefon nömrəsi *\"}\n                                    />\n                                  </div>\n\n                                  <div className=\"col-md-12 mb-4\">\n                                    <MyTextInputWithMask\n                                      id=\"email\"\n                                      name=\"email\"\n                                      type=\"text\"\n                                      // mask='+4\\9 99 999 99'\n                                      //   isDisabled={apply ? true : false}\n                                      className=\"form-control\"\n                                      placeholder=\"Elektron poçt ünvanı *\"\n                                      label={\"Elektron poçt ünvanı *\"}\n                                    />\n                                  </div>\n                                  <div className=\"col-md-12 mb-4\">\n                                    <MyTextInput\n                                      id=\"personalPageLink\"\n                                      name=\"personalPageLink\"\n                                      type=\"text\"\n                                      //   isDisabled={apply ? true : false}\n                                      className=\"form-control\"\n                                      placeholder=\"Rəsmi veb səhifəsi\"\n                                      label={\"Rəsmi veb səhifəsi\"}\n                                    />\n                                  </div>\n                                </div>\n                                <div className=\"row mt-4\">\n                                  <div className=\"col-md-2 offset-10 text-right\">\n                                    <div className=\"icon-container\">\n                                      <button\n                                        title=\"Sosial media əlavə et\"\n                                        type=\"button\"\n                                        className=\"close\"\n                                        onClick={() => handleAddSocial()}\n                                      >\n                                        <svg\n                                          xmlns=\"http://www.w3.org/2000/svg\"\n                                          width={24}\n                                          height={24}\n                                          viewBox=\"0 0 24 24\"\n                                          fill=\"none\"\n                                          stroke=\"currentColor\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                          className=\"feather feather-plus-circle\"\n                                        >\n                                          <circle cx={12} cy={12} r={10} />\n                                          <line\n                                            x1={12}\n                                            y1={8}\n                                            x2={12}\n                                            y2={16}\n                                          />\n                                          <line\n                                            x1={8}\n                                            y1={12}\n                                            x2={16}\n                                            y2={12}\n                                          />\n                                        </svg>\n                                      </button>\n                                      <button\n                                        type=\"button\"\n                                        onClick={() => handleRemoveSocial()}\n                                        className=\"close\"\n                                        title=\"Sosial media sil\"\n                                      >\n                                        <svg\n                                          xmlns=\"http://www.w3.org/2000/svg\"\n                                          width={24}\n                                          height={24}\n                                          viewBox=\"0 0 24 24\"\n                                          fill=\"none\"\n                                          stroke=\"currentColor\"\n                                          strokeWidth={2}\n                                          strokeLinecap=\"round\"\n                                          strokeLinejoin=\"round\"\n                                          className=\"feather feather-minus-circle\"\n                                        >\n                                          <circle cx={12} cy={12} r={10} />\n                                          <line\n                                            x1={8}\n                                            y1={12}\n                                            x2={16}\n                                            y2={12}\n                                          />\n                                        </svg>\n                                      </button>\n                                    </div>\n                                  </div>\n                                </div>\n                                {social &&\n                                  social.map((soci, index) => (\n                                    <React.Fragment key={index}>\n                                      <div className=\"row\">\n                                        <div className=\"col-md-3 mb-4\">\n                                          <MySearchableSelect\n                                            id={`mediatrsSocialMedias[${index}].socialMediaId`}\n                                            name={`mediatrsSocialMedias[${index}].socialMediaId`}\n                                            type=\"text\"\n                                            options={socialMediaOptions}\n                                            //   isDisabled={apply ? true : false}\n                                            // className=\"form-control\"\n                                            placeholder=\"Social media hesabı\"\n                                            label={\"Social media hesabı \"}\n                                          />\n                                        </div>\n                                        <div className=\"col-md-9 mb-4\">\n                                          <MyTextInput\n                                            id={`mediatrsSocialMedias[${index}].linkToPage`}\n                                            name={`mediatrsSocialMedias[${index}].linkToPage`}\n                                            type=\"text\"\n                                            //   isDisabled={apply ? true : false}\n                                            className=\"form-control\"\n                                            placeholder=\"Social media hesabının linki\"\n                                            label={\n                                              \"Social media hesabının linki \"\n                                            }\n                                          />\n                                        </div>\n                                      </div>\n                                    </React.Fragment>\n                                  ))}\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"row\">\n                            <div className=\"col-md-12\">\n                              <button\n                                disabled={!isValid || !dirty || isSubmitting}\n                                type=\"submit\"\n                                className=\"btn btn-primary float-right   btn-lg\"\n                              >\n                                {async.kind === \"createMediatr\" && (\n                                  <svg\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                    width={24}\n                                    height={24}\n                                    viewBox=\"0 0 24 24\"\n                                    fill=\"none\"\n                                    stroke=\"currentColor\"\n                                    strokeWidth={2}\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    className=\"feather feather-loader spin mr-2\"\n                                  >\n                                    <line x1={12} y1={2} x2={12} y2={6} />\n                                    <line x1={12} y1={18} x2={12} y2={22} />\n                                    <line\n                                      x1=\"4.93\"\n                                      y1=\"4.93\"\n                                      x2=\"7.76\"\n                                      y2=\"7.76\"\n                                    />\n                                    <line\n                                      x1=\"16.24\"\n                                      y1=\"16.24\"\n                                      x2=\"19.07\"\n                                      y2=\"19.07\"\n                                    />\n                                    <line x1={2} y1={12} x2={6} y2={12} />\n                                    <line x1={18} y1={12} x2={22} y2={12} />\n                                    <line\n                                      x1=\"4.93\"\n                                      y1=\"19.07\"\n                                      x2=\"7.76\"\n                                      y2=\"16.24\"\n                                    />\n                                    <line\n                                      x1=\"16.24\"\n                                      y1=\"7.76\"\n                                      x2=\"19.07\"\n                                      y2=\"4.93\"\n                                    />\n                                  </svg>\n                                )}\n                                Göndər\n                              </button>\n                            </div>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Form>\n        )}\n      </Formik>\n\n      {/* </div>\n          </div>\n        </div>\n      </div> */}\n      {/* END FORMPAGE CONTAINER */}\n    </React.Fragment>\n  );\n}\n","/Users/ict/Documents/GitHub/mediasiya/src/features/form/formReducer.js",[],"/Users/ict/Documents/GitHub/mediasiya/src/features/form/formConstants.js",[],"/Users/ict/Documents/GitHub/mediasiya/src/features/form/formActions.js",[],"/Users/ict/Documents/GitHub/mediasiya/src/app/common/form/MyTextInputWithMask.jsx",[],"/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/roles/council/councilPage/councilReducer.js",[],"/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/roles/citizen/citizenPage/citizenReducer.js",[],"/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/roles/mediator/mediatorPage/mediatorReducer.js",[],"/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/roles/council/councilPage/councilConstants.js",[],"/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/roles/mediator/mediatorPage/mediatorConstants.js",[],"/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/roles/citizen/citizenPage/citizenConstants.js",[],"/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/roles/mediator/mediatorPage/ViewModalForMediator.jsx",["304","305","306","307","308","309"],"import React, { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\n// import ScriptTag from 'react-script-tag';\nimport MyTextInput from \"../../../../../app/common/form/MyTextInput\";\nimport { Form, Formik } from \"formik\";\nimport { listenToApply, approveApply, rejectApply } from \"./mediatorActions\";\nimport { closeModal } from \"../../../../../app/common/modal/modalReducer\";\nimport MyTextArea from \"../../../../../app/common/form/MyTextArea\";\n\nimport ModalWrapper from \"../../../../../app/common/modal/ModalWrapper\";\nimport Button from \"../../../../../app/common/modal/Button\";\nimport { toast } from \"react-toastify\";\n\nexport default function ViewModalForMediator({ apply }) {\n  const dispatch = useDispatch();\n  const [modal, setModal] = useState(false);\n  const [rejectForm, setRejectForm] = useState(false);\n  const async = useSelector((state) => state.async);\n  const { listenedApplyForMediator } = useSelector((state) => state.mediator);\n\n  useEffect(() => {\n    if (modal) {\n      $(\"#closeModal\").click();\n    }\n  });\n\n  useEffect(async () => {\n    apply && (await dispatch(listenToApply(apply.id)));\n  }, [dispatch]);\n\n  const initialValues = {\n    professionId:\n      listenedApplyForMediator.profession &&\n      listenedApplyForMediator.profession.professionName,\n    districtIds:\n      listenedApplyForMediator.districts &&\n      listenedApplyForMediator.districts.map(\n        (district) => ` ${district.districtName}`\n      ),\n    courtId:\n      listenedApplyForMediator.court &&\n      listenedApplyForMediator.court.courtName,\n\n    // mediatrIds: listenedApplyForMediator.court && listenedApplyForMediator.court.map(court=> ` ${court.courtName}`  ),\n    officeId: \"\",\n    sides: listenedApplyForMediator.sides && listenedApplyForMediator.sides,\n    conflictInfo:\n      listenedApplyForMediator.conflictInfo &&\n      listenedApplyForMediator.conflictInfo,\n    courtCaseInfo:\n      listenedApplyForMediator.courtCaseInfo &&\n      listenedApplyForMediator.courtCaseInfo,\n    prefferedSessionTime:\n      listenedApplyForMediator.prefferedSessionTime &&\n      listenedApplyForMediator.prefferedSessionTime,\n    requiredLangs:\n      listenedApplyForMediator.requiredLangs &&\n      listenedApplyForMediator.requiredLangs,\n    caseInAction: true,\n    // mediatorNames: [],\n  };\n  const validationSchema = Yup.object({});\n\n  useEffect(() => {\n    var toggler = document.getElementsByClassName(\"caret\");\n    var i;\n\n    for (i = 0; i < toggler.length; i++) {\n      toggler[i].addEventListener(\"click\", function () {\n        this.parentElement.querySelector(\".nested\").classList.toggle(\"active\");\n        this.classList.toggle(\"caret-down\");\n      });\n    }\n  }, []);\n  return (\n    <ModalWrapper size=\"modal-xl\" header={\"Daxil olan müraciət\"}>\n      {async.kind === \"listenToApply\" ? (\n        <div className=\"loader text-center\">\n          {\" \"}\n          <div className=\"loader-content\">\n            <div className=\"spinner-grow align-self-center\"></div>\n          </div>\n        </div>\n      ) : (\n        <React.Fragment>\n          <Formik\n            initialValues={initialValues}\n            validationSchema={validationSchema}\n          >\n            {({ values }) => (\n              <Form id=\"emp\">\n                <div id=\"iconsAccordion\" className=\"accordion-icons\">\n                  <div className=\"card\">\n                    <div className=\"card-header\" id=\"headingTwo3\">\n                      <section className=\"mb-0 mt-0\">\n                        <div\n                          role=\"menu\"\n                          className=\"show\"\n                          data-toggle=\"collapse\"\n                          data-target=\"#iconAccordionTwo\"\n                          aria-expanded=\"false\"\n                          aria-controls=\"iconAccordionTwo\"\n                        >\n                          <div className=\"accordion-icon\">\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              strokeWidth={2}\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              className=\"feather feather-box\"\n                            >\n                              <path d=\"M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z\" />\n                              <polyline points=\"3.27 6.96 12 12.01 20.73 6.96\" />\n                              <line x1={12} y1=\"22.08\" x2={12} y2={12} />\n                            </svg>\n                          </div>\n                          Ümumi məlumatlar\n                          <div className=\"icons\">\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              strokeWidth={2}\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              className=\"feather feather-chevron-down\"\n                            >\n                              <polyline points=\"6 9 12 15 18 9\" />\n                            </svg>\n                          </div>\n                        </div>\n                      </section>\n                    </div>\n                    <div\n                      id=\"iconAccordionTwo\"\n                      className=\"collapsed show\"\n                      aria-labelledby=\"headingTwo3\"\n                      data-parent=\"#iconsAccordion\"\n                    >\n                      <div className=\"card-body\">\n                        <div className=\"row mb-4\">\n                          <div className=\"col-md-12\">\n                            <MyTextInput\n                              id=\"professionId\"\n                              name=\"professionId\"\n                              type=\"text\"\n                              placeholder=\"İxtisas seçin\"\n                              className=\"form-control\"\n                              label={\"Mediatorun ixtisası *\"}\n                            />\n                          </div>\n                        </div>\n                        <div className=\"row mb-4\">\n                          <div className=\"col-md-12\">\n                            <MyTextInput\n                              id=\"districtIds\"\n                              name=\"districtIds\"\n                              type=\"text\"\n                              isMulti\n                              className=\"form-control\"\n                              placeholder=\"Məkan seçin\"\n                              label={\n                                \"Mediasiyanın keçirilməsi üçün üstünlük verilən yer *\"\n                              }\n                            />\n                          </div>\n                        </div>\n                        <div className=\"row mb-4\">\n                          <div className=\"col-md-12\">\n                            <MyTextInput\n                              id=\"courtId\"\n                              name=\"courtId\"\n                              type=\"text\"\n                              className=\"form-control\"\n                              placeholder=\"Məhkəmə seçin\"\n                              label={\n                                \"Mübahisə həll olunmazsa mübahisənin baxılacağı yer *\"\n                              }\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"card\">\n                    <div className=\"card-header\" id=\"headingOne3\">\n                      <section className=\"mb-0 mt-0\">\n                        <div\n                          role=\"menu\"\n                          className=\"collapsed\"\n                          data-toggle=\"collapse\"\n                          data-target=\"#iconAccordionOne\"\n                          aria-expanded=\"false\"\n                          aria-controls=\"iconAccordionOne\"\n                        >\n                          <div className=\"accordion-icon\">\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              strokeWidth={2}\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              className=\"feather feather-user\"\n                            >\n                              <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\" />\n                              <circle cx={12} cy={7} r={4} />\n                            </svg>\n                          </div>\n                          Mediator seçimi\n                          <div className=\"icons\">\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              strokeWidth={2}\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              className=\"feather feather-chevron-down\"\n                            >\n                              <polyline points=\"6 9 12 15 18 9\" />\n                            </svg>\n                          </div>\n                        </div>\n                      </section>\n                    </div>\n                    <div\n                      id=\"iconAccordionOne\"\n                      className=\"collapse\"\n                      aria-labelledby=\"headingOne3\"\n                      data-parent=\"#iconsAccordion\"\n                    >\n                      <div className=\"card-body\">\n                        <ul className=\"list-group list-group-media\">\n                          {listenedApplyForMediator.mediatrs &&\n                            listenedApplyForMediator.mediatrs.map((mediatr,index) => (\n                              <li key={index} className=\"list-group-item list-group-item-action\">\n                                <div className=\"media\">\n                                  <div className=\"mr-3\">\n                                    <img\n                                      alt=\"avatar\"\n                                      src=\"/assets/img/90x90.jpg\"\n                                      className=\"img-fluid rounded-circle\"\n                                    />\n                                  </div>\n                                  <div className=\"media-body\">\n                                    <h6 className=\"tx-inverse\">{`${mediatr.firstName} ${mediatr.lastName}`}</h6>\n                                    <p className=\"mg-b-0\">\n                                      {mediatr.registryNumber}\n                                    </p>\n                                  </div>\n                                </div>\n                              </li>\n                            ))}\n                        </ul>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"card\">\n                    <div className=\"card-header \" id=\"headingTwo3\">\n                      <section className=\"mb-0 mt-0\">\n                        <div\n                          role=\"menu\"\n                          className=\"collapsed\"\n                          data-toggle=\"collapse\"\n                          data-target=\"#iconAccordionThree\"\n                          aria-expanded=\"false\"\n                          aria-controls=\"iconAccordionThree\"\n                        >\n                          <div className=\"accordion-icon\">\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              strokeWidth={2}\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              className=\"feather feather-users\"\n                            >\n                              <path d=\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n                              <circle cx={9} cy={7} r={4} />\n                              <path d=\"M23 21v-2a4 4 0 0 0-3-3.87\" />\n                              <path d=\"M16 3.13a4 4 0 0 1 0 7.75\" />\n                            </svg>\n                          </div>\n                          Tərəflar barədə məlumatlar\n                          <div className=\"icons\">\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              strokeWidth={2}\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              className=\"feather feather-chevron-down\"\n                            >\n                              <polyline points=\"6 9 12 15 18 9\" />\n                            </svg>\n                          </div>\n                        </div>\n                      </section>\n                    </div>\n                    <div\n                      id=\"iconAccordionThree\"\n                      className=\"collapse\"\n                      aria-labelledby=\"headingTwo3\"\n                      data-parent=\"#iconsAccordion\"\n                    >\n                      <div className=\"card-body\">\n                        {!listenedApplyForMediator.sides && (\n                          <div className=\"row\">\n                            <div className=\"col-md-12\">\n                              <h2 className=\"text-center\">\n                                Heç bir tərəf daxil edilməyib\n                              </h2>\n                            </div>\n                          </div>\n                        )}\n                        {listenedApplyForMediator.sides &&\n                          listenedApplyForMediator.sides.map((side, index) => (\n                            <React.Fragment key={index}>\n                              <div className=\"row\">\n                                <div className=\"col-xl-12 col-md-12 col-sm-12 col-12\">\n                                  <div\n                                    className=\"infobox-3 mb-4\"\n                                    style={{ width: \"100%\" }}\n                                  >\n                                    <div className=\"info-icon\">\n                                      <svg\n                                        xmlns=\"http://www.w3.org/2000/svg\"\n                                        width={24}\n                                        height={24}\n                                        viewBox=\"0 0 24 24\"\n                                        fill=\"none\"\n                                        stroke=\"currentColor\"\n                                        strokeWidth={2}\n                                        strokeLinecap=\"round\"\n                                        strokeLinejoin=\"round\"\n                                        className=\"feather feather-user\"\n                                      >\n                                        <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\" />\n                                        <circle cx={12} cy={7} r={4} />\n                                      </svg>\n                                    </div>\n                                    <h5 className=\"info-heading\">\n                                      Tərəf :\n                                      {` ${index + 1} - \n                                            ${side.sideLastName} \n                                            ${side.sideFirstName} ${\n                                        side.sideMiddleName\n                                      }`}\n                                    </h5>\n                                    {/* {console.log(values,'cins')} */}\n                                    <p className=\"info-text\">\n                                      <div className=\"row mb-4\">\n                                        <div className=\"col-md-4\">\n                                          <MyTextInput\n                                            id={`sides[${index}].sideLastName`}\n                                            name={`sides[${index}].sideLastName`}\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            placeholder=\"Soyadın daxil edin\"\n                                            label={\"Qarşı tərəfin soyadı *\"}\n                                          />\n                                        </div>\n                                        <div className=\"col-md-4\">\n                                          <MyTextInput\n                                            id={`sides[${index}].sideFirstName`}\n                                            name={`sides[${index}].sideFirstName`}\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            placeholder=\"Adın daxil edin\"\n                                            label={\"Qarşı tərəfin adı *\"}\n                                          />\n                                        </div>\n                                        <div className=\"col-md-4\">\n                                          <MyTextInput\n                                            id={`sides[${index}].sideMiddleName`}\n                                            name={`sides[${index}].sideMiddleName`}\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            placeholder=\"Ata adın daxil edin\"\n                                            label={\"Qarşı tərəfin ata adı *\"}\n                                          />\n                                        </div>\n                                      </div>\n                                      <div className=\"row mb-4\">\n                                        <div className=\"col-md-4\">\n                                          <MyTextInput\n                                            id={`sides[${index}].advocateFirstName`}\n                                            name={`sides[${index}].advocateFirstName`}\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            placeholder=\"Adın daxil edin\"\n                                            label={\"Nümayəndənin adı\"}\n                                          />\n                                        </div>\n                                        <div className=\"col-md-4\">\n                                          <MyTextInput\n                                            id={`sides[${index}].advocateLastName`}\n                                            name={`sides[${index}].advocateLastName`}\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            placeholder=\"Soyadın daxil edin\"\n                                            label={\"Nümayəndənin soyadı\"}\n                                          />\n                                        </div>\n                                        <div className=\"col-md-4\">\n                                          <MyTextInput\n                                            id={`sides[${index}].advocateMiddleName`}\n                                            name={`sides[${index}].advocateMiddleName`}\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            placeholder=\"Ata adın daxil edin\"\n                                            label={\"Nümayəndənin ata adı\"}\n                                          />\n                                        </div>\n                                      </div>\n\n                                      <div className=\"row mb-4\">\n                                        <div className=\"col-md-12\">\n                                          <MyTextInput\n                                            id={`sides[${index}].organizationName`}\n                                            name={`sides[${index}].organizationName`}\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            label=\"Hüquq şirkəti\"\n                                            placeholder={\n                                              \"Hüquq şirkət adı daxil edin\"\n                                            }\n                                          />\n                                        </div>\n                                      </div>\n                                      <div className=\"row mb-4\">\n                                        <div className=\"col-md-12\">\n                                          <MyTextInput\n                                            id={`sides[${index}].address`}\n                                            name={`sides[${index}].address`}\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            label=\"Ünvan*\"\n                                            placeholder={\"Ünval daxil edin\"}\n                                          />\n                                        </div>\n                                      </div>\n                                      <div className=\"row mb-4\">\n                                        <div className=\"col-md-6\">\n                                          <MyTextInput\n                                            id={`sides[${index}].phone`}\n                                            name={`sides[${index}].phone`}\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            label=\"Telefon*\"\n                                            placeholder={\n                                              \"Telefon nömrəsi daxil edin\"\n                                            }\n                                          />\n                                        </div>\n                                        <div className=\"col-md-6\">\n                                          <MyTextInput\n                                            id={`sides[${index}].email`}\n                                            name={`sides[${index}].email`}\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            label=\"E-mail*\"\n                                            placeholder={\"e-mail daxil edin\"}\n                                          />\n                                        </div>\n                                      </div>\n                                    </p>\n                                    {/* <a class=\"info-link\" href=\"\">\n                                Discover <svg> ... </svg>\n                              </a> */}\n                                  </div>\n                                </div>\n                              </div>\n                            </React.Fragment>\n                          ))}\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"card\">\n                    <div className=\"card-header\" id=\"headingTwo3\">\n                      <section className=\"mb-0 mt-0\">\n                        <div\n                          role=\"menu\"\n                          className=\"collapsed\"\n                          data-toggle=\"collapse\"\n                          data-target=\"#iconAccordionForth\"\n                          aria-expanded=\"false\"\n                          aria-controls=\"iconAccordionForth\"\n                        >\n                          <div className=\"accordion-icon\">\n                            <svg\n                              viewBox=\"0 0 24 24\"\n                              width={24}\n                              height={24}\n                              stroke=\"currentColor\"\n                              strokeWidth={2}\n                              fill=\"none\"\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              className=\"css-i6dzq1\"\n                            >\n                              <path d=\"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z\" />\n                            </svg>\n                          </div>\n                          Mübahisə və mediasiya sessiyası\n                          <div className=\"icons\">\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              strokeWidth={2}\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              className=\"feather feather-chevron-down\"\n                            >\n                              <polyline points=\"6 9 12 15 18 9\" />\n                            </svg>\n                          </div>\n                        </div>\n                      </section>\n                    </div>\n                    <div\n                      id=\"iconAccordionForth\"\n                      className=\"collapse\"\n                      aria-labelledby=\"headingTwo3\"\n                      data-parent=\"#iconsAccordion\"\n                    >\n                      <div className=\"card-body\">\n                        <div className=\"row mb-4\">\n                          <div className=\"col-md-12\">\n                            <MyTextArea\n                              id=\"conflictInfo\"\n                              name=\"conflictInfo\"\n                              type=\"text\"\n                              className=\"form-control\"\n                              label=\"Mübahisənin qısa məzmunu və mediasiyadan gözlənilən nəticələr*\"\n                              placeholder={\"Qısa məlumat daxil edin\"}\n                            />\n                          </div>\n                        </div>\n                        <div className=\"row mb-4\">\n                          <div className=\"col-md-12\">\n                            <div className=\"form-group form-check pl-0\">\n                              <div className=\"custom-control custom-checkbox checkbox-info\">\n                                <MyTextInput\n                                  type=\"checkbox\"\n                                  className=\"custom-control-input\"\n                                  id=\"caseInAction\"\n                                  name=\"caseInAction\"\n                                />\n                                <label\n                                  className=\"custom-control-label\"\n                                  htmlFor=\"caseInAction\"\n                                >\n                                  Bu mübahisə hazırda məhkəmə icraatındadır?\n                                </label>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"row mb-4\">\n                          <div className=\"col-md-12\">\n                            <MyTextArea\n                              id=\"courtCaseInfo\"\n                              name=\"courtCaseInfo\"\n                              type=\"text\"\n                              className=\"form-control\"\n                              label=\"Məhkəmə və iş barədə mulamatlar*\"\n                              placeholder={\n                                \"Məhkəmə və iş barədə məlumat daxil edin\"\n                              }\n                            />\n                          </div>\n                        </div>\n                        <div className=\"row mb-4\">\n                          <div className=\"col-md-6\">\n                            <MyTextInput\n                              id=\"prefferedSessionTime\"\n                              name=\"prefferedSessionTime\"\n                              type=\"text\"\n                              isMulti\n                              className=\"form-control\"\n                              label=\"Mediasiya sessiyalarının keçirilməsi üçün üstünlük verilən vaxt*\"\n                              placeholder={\"Sizə uyğun vaxtı daxil edin\"}\n                            />\n                          </div>\n                          <div className=\"col-md-6\">\n                            <MyTextInput\n                              id=\"requiredLangs\"\n                              name=\"requiredLangs\"\n                              type=\"text\"\n                              isMulti\n                              className=\"form-control\"\n                              label=\"Mediatordan tələb olunan dil biliyi*\"\n                              placeholder={\n                                \"Mediatordan tələb etdiyiniz dil biliyi\"\n                              }\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <button\n                  style={{ display: \"none\" }}\n                  id=\"closeModal\"\n                  onClick={() => {\n                    dispatch(closeModal());\n                  }}\n                  className=\"btn btn-lg float-right mt-3 mr-2\"\n                  data-dismiss=\"modal\"\n                >\n                  <i className=\"flaticon-cancel-12\" /> Ləğv et\n                </button>\n              </Form>\n            )}\n          </Formik>\n          {apply && apply.status.id === 1 && (\n            <div className=\"row\">\n              {!rejectForm && (\n                <div className=\"col-md-12\">\n                  <div className=\"button-setting\">\n                    <Button\n                      onClick={() => {\n                        setRejectForm(true);\n                        toast.info(\n                          \"İmtina etmək üçün səbəb daxil edilməlidir.\"\n                        );\n                      }}\n                      className=\"btn btn-danger float-right  btn-lg mr-1 ml-2 mt-2 mb-4\"\n                    >\n                      İmtina et\n                    </Button>\n\n                    <Formik\n                      initialValues={{ id: apply.id }}\n                      validationSchema={Yup.object({\n                        id: Yup.number().required(\n                          \"Bu sahə mütləq doldurulmalıdır.\"\n                        ),\n                      })}\n                      onSubmit={(values, { setSubmitting, setErrors }) => {\n                        // console.log('ugurludur')\n                        dispatch(approveApply(apply.id));\n                        setModal(true);\n                        dispatch(closeModal());\n                        setSubmitting(false);\n                      }}\n                    >\n                      {({ isSubmitting, isValid, dirty, errors }) => (\n                        <Form className=\"text-left mt-4\">\n                          <div className=\"form\">\n                            <MyTextArea\n                              id=\"id\"\n                              name=\"id\"\n                              type=\"text\"\n                              className=\"form-control\"\n                              value={apply.id}\n                              style={{ display: \"none\" }}\n                              // placeholder=\"İmtina səbəbini daxil edin\"\n                              // label=\"İmtina səbəbi\"\n                            />\n\n                            <div\n                              style={{ float: \"right\" }}\n                              className=\"d-sm-flex text-right justify-content-between\"\n                            >\n                              <div className=\"\">\n                                <button\n                                  disabled={isSubmitting}\n                                  type=\"submit\"\n                                  // name=\"time\"\n                                  className=\"btn btn-success float-right  btn-lg mt-2 ml-2 mt-2 mb-4 \"\n                                >\n                                  {async.kind === \"approve\" && (\n                                    <svg\n                                      xmlns=\"http://www.w3.org/2000/svg\"\n                                      width={24}\n                                      height={24}\n                                      viewBox=\"0 0 24 24\"\n                                      fill=\"none\"\n                                      stroke=\"currentColor\"\n                                      strokeWidth={2}\n                                      strokeLinecap=\"round\"\n                                      strokeLinejoin=\"round\"\n                                      className=\"feather feather-loader spin mr-2\"\n                                    >\n                                      <line x1={12} y1={2} x2={12} y2={6} />\n                                      <line x1={12} y1={18} x2={12} y2={22} />\n                                      <line\n                                        x1=\"4.93\"\n                                        y1=\"4.93\"\n                                        x2=\"7.76\"\n                                        y2=\"7.76\"\n                                      />\n                                      <line\n                                        x1=\"16.24\"\n                                        y1=\"16.24\"\n                                        x2=\"19.07\"\n                                        y2=\"19.07\"\n                                      />\n                                      <line x1={2} y1={12} x2={6} y2={12} />\n                                      <line x1={18} y1={12} x2={22} y2={12} />\n                                      <line\n                                        x1=\"4.93\"\n                                        y1=\"19.07\"\n                                        x2=\"7.76\"\n                                        y2=\"16.24\"\n                                      />\n                                      <line\n                                        x1=\"16.24\"\n                                        y1=\"7.76\"\n                                        x2=\"19.07\"\n                                        y2=\"4.93\"\n                                      />\n                                    </svg>\n                                  )}\n                                  Qəbul et\n                                </button>\n                              </div>\n                            </div>\n                          </div>\n                        </Form>\n                      )}\n                    </Formik>\n                    {/* <Button\n                        onClick={() => {\n                        }}\n                        className=\"btn btn-success float-right  btn-lg mt-2 ml-2 mt-2 mb-4\"\n                      >\n                        {\" \"}\n                        Qəbul et\n                      </Button>\n                      <button\n                        style={{ display: \"none\" }}\n                        id=\"closeModal\"\n                        onClick={() => {\n                          dispatch(closeModal());\n                        }}\n                        className=\"btn btn-lg float-right mt-3 mr-2\"\n                        data-dismiss=\"modal\"\n                      >\n                        <i className=\"flaticon-cancel-12\" /> Ləğv et\n                      </button> */}\n                  </div>\n                </div>\n              )}\n              <div className=\"col-md-12\">\n                {rejectForm === true && (\n                  <div className=\"row\">\n                    <div className=\"col-md-12\">\n                      <Formik\n                        initialValues={{ username: \"\", password: \"\" }}\n                        validationSchema={Yup.object({\n                          reasonOfReject: Yup.string().required(\n                            \"Bu sahə mütləq doldurulmalıdır.\"\n                          ),\n                        })}\n                        onSubmit={(values, { setSubmitting, setErrors }) => {\n                          // console.log('ugurludur')\n                          dispatch(\n                            rejectApply(apply.id, {\n                              rejectText: values.reasonOfReject,\n                            })\n                          );\n                          setModal(true);\n                          dispatch(closeModal());\n                          setSubmitting(false);\n                        }}\n                      >\n                        {({ isSubmitting, isValid, dirty, errors }) => (\n                          <Form className=\"text-left mt-4\">\n                            <div className=\"form\">\n                              <div\n                                id=\"username-field\"\n                                className=\"field-wrapper input\"\n                              >\n                                <MyTextArea\n                                  id=\"reasonOfReject\"\n                                  name=\"reasonOfReject\"\n                                  type=\"text\"\n                                  className=\"form-control\"\n                                  placeholder=\"İmtina səbəbini daxil edin\"\n                                  label=\"İmtina səbəbi\"\n                                />\n                              </div>\n\n                              <div\n                                style={{ float: \"right\" }}\n                                className=\"d-sm-flex text-right justify-content-between\"\n                              >\n                                <div className=\"\">\n                                  <button\n                                    disabled={\n                                      !isValid || !dirty || isSubmitting\n                                    }\n                                    type=\"submit\"\n                                    // name=\"time\"\n                                    className=\"btn btn-danger text-right  btn-lg mt-3 \"\n                                  >\n                                    İmtina et\n                                  </button>\n                                </div>\n                              </div>\n                            </div>\n                          </Form>\n                        )}\n                      </Formik>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n        </React.Fragment>\n      )}\n    </ModalWrapper>\n  );\n}\n","/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/roles/citizen/citizenPage/ViewModalForCitizen.jsx",["310","311","312","313","314","315","316"],"import React, { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\n// import ScriptTag from 'react-script-tag';\nimport MyTextInput from \"../../../../../app/common/form/MyTextInput\";\nimport { Form, Formik } from \"formik\";\nimport { listenToApply } from \"./citizenActions\";\nimport { closeModal } from \"../../../../../app/common/modal/modalReducer\";\nimport MyTextArea from \"../../../../../app/common/form/MyTextArea\";\n\nimport ModalWrapper from \"../../../../../app/common/modal/ModalWrapper\";\n\nexport default function ViewModalForCitizen({ apply }) {\n  const dispatch = useDispatch();\n  const [modal, setModal] = useState(false);\n  const async = useSelector((state) => state.async);\n  const { listenApplyOfCitizen } = useSelector((state) => state.citizen);\n\n  useEffect(() => {\n    if (modal) {\n      $(\"#closeModal\").click();\n    }\n  });\n\n  useEffect(async () => {\n    apply && (await dispatch(listenToApply(apply.id)));\n  }, [dispatch]);\n\n  console.log(listenApplyOfCitizen.districts);\n  const initialValues = {\n    professionId:\n      listenApplyOfCitizen.profession &&\n      listenApplyOfCitizen.profession.professionName,\n    districtIds:\n      listenApplyOfCitizen.districts &&\n      listenApplyOfCitizen.districts.map(\n        (district) => ` ${district.districtName}`\n      ),\n    courtId: listenApplyOfCitizen.court && listenApplyOfCitizen.court.courtName,\n\n    // mediatrIds: listenApplyOfCitizen.court && listenApplyOfCitizen.court.map(court=> ` ${court.courtName}`  ),\n    officeId: \"\",\n    sides: listenApplyOfCitizen.sides && listenApplyOfCitizen.sides,\n    conflictInfo:  listenApplyOfCitizen.conflictInfo && listenApplyOfCitizen.conflictInfo,\n    courtCaseInfo: listenApplyOfCitizen.courtCaseInfo && listenApplyOfCitizen.courtCaseInfo,\n    prefferedSessionTime: listenApplyOfCitizen.prefferedSessionTime && listenApplyOfCitizen.prefferedSessionTime,\n    requiredLangs: listenApplyOfCitizen.requiredLangs && listenApplyOfCitizen.requiredLangs,\n    caseInAction: true,\n    // mediatorNames: [],\n  };\n  const validationSchema = Yup.object({});\n\n  useEffect(() => {\n    var toggler = document.getElementsByClassName(\"caret\");\n    var i;\n\n    for (i = 0; i < toggler.length; i++) {\n      toggler[i].addEventListener(\"click\", function () {\n        this.parentElement.querySelector(\".nested\").classList.toggle(\"active\");\n        this.classList.toggle(\"caret-down\");\n      });\n    }\n  }, []);\n  return (\n    <ModalWrapper size=\"modal-xl\" header={\"Müraciətim\"}>\n      {async.kind === \"listenToApply\" ? (\n        <div className=\"loader text-center\">\n          {\" \"}\n          <div className=\"loader-content\">\n            <div className=\"spinner-grow align-self-center\"></div>\n          </div>\n        </div>\n      ) : (\n        <React.Fragment>\n          <Formik\n            initialValues={initialValues}\n            validationSchema={validationSchema}\n          >\n            {({ values }) => (\n              <Form id=\"emp\">\n                <div id=\"iconsAccordion\" className=\"accordion-icons\">\n                  <div className=\"card\">\n                    <div className=\"card-header\" id=\"headingTwo3\">\n                      <section className=\"mb-0 mt-0\">\n                        <div\n                          role=\"menu\"\n                          className=\"show\"\n                          data-toggle=\"collapse\"\n                          data-target=\"#iconAccordionTwo\"\n                          aria-expanded=\"false\"\n                          aria-controls=\"iconAccordionTwo\"\n                        >\n                          <div className=\"accordion-icon\">\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              strokeWidth={2}\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              className=\"feather feather-box\"\n                            >\n                              <path d=\"M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z\" />\n                              <polyline points=\"3.27 6.96 12 12.01 20.73 6.96\" />\n                              <line x1={12} y1=\"22.08\" x2={12} y2={12} />\n                            </svg>\n                          </div>\n                          Ümumi məlumatlar\n                          <div className=\"icons\">\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              strokeWidth={2}\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              className=\"feather feather-chevron-down\"\n                            >\n                              <polyline points=\"6 9 12 15 18 9\" />\n                            </svg>\n                          </div>\n                        </div>\n                      </section>\n                    </div>\n                    <div\n                      id=\"iconAccordionTwo\"\n                      className=\"collapsed show\"\n                      aria-labelledby=\"headingTwo3\"\n                      data-parent=\"#iconsAccordion\"\n                    >\n                      <div className=\"card-body\">\n                        <div className=\"row mb-4\">\n                          <div className=\"col-md-12\">\n                            <MyTextInput\n                              id=\"professionId\"\n                              name=\"professionId\"\n                              type=\"text\"\n                              placeholder=\"İxtisas seçin\"\n                              className=\"form-control\"\n                              label={\"Mediatorun ixtisası *\"}\n                            />\n                          </div>\n                        </div>\n                        <div className=\"row mb-4\">\n                          <div className=\"col-md-12\">\n                            <MyTextInput\n                              id=\"districtIds\"\n                              name=\"districtIds\"\n                              type=\"text\"\n                              isMulti\n                              className=\"form-control\"\n                              placeholder=\"Məkan seçin\"\n                              label={\n                                \"Mediasiyanın keçirilməsi üçün üstünlük verilən yer *\"\n                              }\n                            />\n                          </div>\n                        </div>\n                        <div className=\"row mb-4\">\n                          <div className=\"col-md-12\">\n                            <MyTextInput\n                              id=\"courtId\"\n                              name=\"courtId\"\n                              type=\"text\"\n                              className=\"form-control\"\n                              placeholder=\"Məhkəmə seçin\"\n                              label={\n                                \"Mübahisə həll olunmazsa mübahisənin baxılacağı yer *\"\n                              }\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"card\">\n                    <div className=\"card-header\" id=\"headingOne3\">\n                      <section className=\"mb-0 mt-0\">\n                        <div\n                          role=\"menu\"\n                          className=\"collapsed\"\n                          data-toggle=\"collapse\"\n                          data-target=\"#iconAccordionOne\"\n                          aria-expanded=\"false\"\n                          aria-controls=\"iconAccordionOne\"\n                        >\n                          <div className=\"accordion-icon\">\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              strokeWidth={2}\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              className=\"feather feather-user\"\n                            >\n                              <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\" />\n                              <circle cx={12} cy={7} r={4} />\n                            </svg>\n                          </div>\n                          Mediator seçimi\n                          <div className=\"icons\">\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              strokeWidth={2}\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              className=\"feather feather-chevron-down\"\n                            >\n                              <polyline points=\"6 9 12 15 18 9\" />\n                            </svg>\n                          </div>\n                        </div>\n                      </section>\n                    </div>\n                    <div\n                      id=\"iconAccordionOne\"\n                      className=\"collapse\"\n                      aria-labelledby=\"headingOne3\"\n                      data-parent=\"#iconsAccordion\"\n                    >\n                      <div className=\"card-body\">\n                        <ul className=\"list-group list-group-media\">\n                          {listenApplyOfCitizen.mediatrs &&\n                            listenApplyOfCitizen.mediatrs.map((mediatr,index) => (\n                              <li key={index} className=\"list-group-item list-group-item-action\">\n                                <div className=\"media\">\n                                  <div className=\"mr-3\">\n                                    <img\n                                      alt=\"avatar\"\n                                      src=\"/assets/img/90x90.jpg\"\n                                      className=\"img-fluid rounded-circle\"\n                                    />\n                                  </div>\n                                  <div className=\"media-body\">\n                                    <h6 className=\"tx-inverse\">{`${mediatr.firstName} ${mediatr.lastName}`}</h6>\n                                    <p className=\"mg-b-0\">\n                                      {mediatr.registryNumber}\n                                    </p>\n                                  </div>\n                                </div>\n                              </li>\n                            ))}\n                        </ul>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"card\">\n                    <div className=\"card-header \" id=\"headingTwo3\">\n                      <section className=\"mb-0 mt-0\">\n                        <div\n                          role=\"menu\"\n                          className=\"collapsed\"\n                          data-toggle=\"collapse\"\n                          data-target=\"#iconAccordionThree\"\n                          aria-expanded=\"false\"\n                          aria-controls=\"iconAccordionThree\"\n                        >\n                          <div className=\"accordion-icon\">\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              strokeWidth={2}\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              className=\"feather feather-users\"\n                            >\n                              <path d=\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n                              <circle cx={9} cy={7} r={4} />\n                              <path d=\"M23 21v-2a4 4 0 0 0-3-3.87\" />\n                              <path d=\"M16 3.13a4 4 0 0 1 0 7.75\" />\n                            </svg>\n                          </div>\n                          Tərəflar barədə məlumatlar\n                          <div className=\"icons\">\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              strokeWidth={2}\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              className=\"feather feather-chevron-down\"\n                            >\n                              <polyline points=\"6 9 12 15 18 9\" />\n                            </svg>\n                          </div>\n                        </div>\n                      </section>\n                    </div>\n                    <div\n                      id=\"iconAccordionThree\"\n                      className=\"collapse\"\n                      aria-labelledby=\"headingTwo3\"\n                      data-parent=\"#iconsAccordion\"\n                    >\n                      <div className=\"card-body\">\n                        {!listenApplyOfCitizen.sides && (\n                          <div className=\"row\">\n                            <div className=\"col-md-12\">\n                              <h2 className=\"text-center\">\n                                Heç bir tərəf daxil edilməyib\n                              </h2>\n                            </div>\n                          </div>\n                        )}\n                        {listenApplyOfCitizen.sides &&\n                          listenApplyOfCitizen.sides.map((side, index) => (\n                            <React.Fragment key={index}>\n                              <div className=\"row\">\n                                <div className=\"col-xl-12 col-md-12 col-sm-12 col-12\">\n                                  <div\n                                    className=\"infobox-3 mb-4\"\n                                    style={{ width: \"100%\" }}\n                                  >\n                                    <div className=\"info-icon\">\n                                      <svg\n                                        xmlns=\"http://www.w3.org/2000/svg\"\n                                        width={24}\n                                        height={24}\n                                        viewBox=\"0 0 24 24\"\n                                        fill=\"none\"\n                                        stroke=\"currentColor\"\n                                        strokeWidth={2}\n                                        strokeLinecap=\"round\"\n                                        strokeLinejoin=\"round\"\n                                        className=\"feather feather-user\"\n                                      >\n                                        <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\" />\n                                        <circle cx={12} cy={7} r={4} />\n                                      </svg>\n                                    </div>\n                                    <h5 className=\"info-heading\">\n                                      Tərəf :\n                                      {` ${index + 1} - \n                                            ${\n                                              side.sideLastName\n                                            } \n                                            ${\n                                              side.sideFirstName\n          \n                                            } ${\n                                             side.sideMiddleName\n                                            }`\n                                      }\n                                    </h5>\n                                    {/* {console.log(values,'cins')} */}\n                                    <p className=\"info-text\">\n                                      <div className=\"row mb-4\">\n                                        <div className=\"col-md-4\">\n                                          <MyTextInput\n                                            id={`sides[${index}].sideLastName`}\n                                            name={`sides[${index}].sideLastName`}\n                                            type=\"text\"\n\n                                            className=\"form-control\"\n                                            placeholder=\"Soyadın daxil edin\"\n                                            label={\"Qarşı tərəfin soyadı *\"}\n                                          />\n                                        </div>\n                                        <div className=\"col-md-4\">\n                                          <MyTextInput\n                                            id={`sides[${index}].sideFirstName`}\n                                            name={`sides[${index}].sideFirstName`}\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            placeholder=\"Adın daxil edin\"\n                                            label={\"Qarşı tərəfin adı *\"}\n                                          />\n                                        </div>\n                                        <div className=\"col-md-4\">\n                                          <MyTextInput\n                                            id={`sides[${index}].sideMiddleName`}\n                                            name={`sides[${index}].sideMiddleName`}\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            placeholder=\"Ata adın daxil edin\"\n                                            label={\"Qarşı tərəfin ata adı *\"}\n                                          />\n                                        </div>\n                                      </div>\n                                      <div className=\"row mb-4\">\n                                        <div className=\"col-md-4\">\n                                          <MyTextInput\n                                            id={`sides[${index}].advocateFirstName`}\n                                            name={`sides[${index}].advocateFirstName`}\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            placeholder=\"Adın daxil edin\"\n                                            label={\"Nümayəndənin adı\"}\n                                          />\n                                        </div>\n                                        <div className=\"col-md-4\">\n                                          <MyTextInput\n                                            id={`sides[${index}].advocateLastName`}\n                                            name={`sides[${index}].advocateLastName`}\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            placeholder=\"Soyadın daxil edin\"\n                                            label={\"Nümayəndənin soyadı\"}\n                                          />\n                                        </div>\n                                        <div className=\"col-md-4\">\n                                          <MyTextInput\n                                            id={`sides[${index}].advocateMiddleName`}\n                                            name={`sides[${index}].advocateMiddleName`}\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            placeholder=\"Ata adın daxil edin\"\n                                            label={\"Nümayəndənin ata adı\"}\n                                          />\n                                        </div>\n                                      </div>\n\n                                      <div className=\"row mb-4\">\n                                        <div className=\"col-md-12\">\n                                          <MyTextInput\n                                            id={`sides[${index}].organizationName`}\n                                            name={`sides[${index}].organizationName`}\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            label=\"Hüquq şirkəti\"\n                                            placeholder={\n                                              \"Hüquq şirkət adı daxil edin\"\n                                            }\n                                          />\n                                        </div>\n                                      </div>\n                                      <div className=\"row mb-4\">\n                                        <div className=\"col-md-12\">\n                                          <MyTextInput\n                                            id={`sides[${index}].address`}\n                                            name={`sides[${index}].address`}\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            label=\"Ünvan *\"\n                                            placeholder={\"Ünval daxil edin\"}\n                                          />\n                                        </div>\n                                      </div>\n                                      <div className=\"row mb-4\">\n                                        <div className=\"col-md-6\">\n                                          <MyTextInput\n                                            id={`sides[${index}].phone`}\n                                            name={`sides[${index}].phone`}\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            label=\"Telefon *\"\n                                            placeholder={\n                                              \"Telefon nömrəsi daxil edin\"\n                                            }\n                                          />\n                                        </div>\n                                        <div className=\"col-md-6\">\n                                          <MyTextInput\n                                            id={`sides[${index}].email`}\n                                            name={`sides[${index}].email`}\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            label=\"E-mail\"\n                                            placeholder={\"E-mail daxil edin\"}\n                                          />\n                                        </div>\n                                      </div>\n                                    </p>\n                                    {/* <a class=\"info-link\" href=\"\">\n                                Discover <svg> ... </svg>\n                              </a> */}\n                                  </div>\n                                </div>\n                              </div>\n                            </React.Fragment>\n                          ))}\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"card\">\n                    <div className=\"card-header\" id=\"headingTwo3\">\n                      <section className=\"mb-0 mt-0\">\n                        <div\n                          role=\"menu\"\n                          className=\"collapsed\"\n                          data-toggle=\"collapse\"\n                          data-target=\"#iconAccordionForth\"\n                          aria-expanded=\"false\"\n                          aria-controls=\"iconAccordionForth\"\n                        >\n                          <div className=\"accordion-icon\">\n                            <svg\n                              viewBox=\"0 0 24 24\"\n                              width={24}\n                              height={24}\n                              stroke=\"currentColor\"\n                              strokeWidth={2}\n                              fill=\"none\"\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              className=\"css-i6dzq1\"\n                            >\n                              <path d=\"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z\" />\n                            </svg>\n                          </div>\n                          Mübahisə və mediasiya sessiyası\n                          <div className=\"icons\">\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              strokeWidth={2}\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              className=\"feather feather-chevron-down\"\n                            >\n                              <polyline points=\"6 9 12 15 18 9\" />\n                            </svg>\n                          </div>\n                        </div>\n                      </section>\n                    </div>\n                    <div\n                      id=\"iconAccordionForth\"\n                      className=\"collapse\"\n                      aria-labelledby=\"headingTwo3\"\n                      data-parent=\"#iconsAccordion\"\n                    >\n                      <div className=\"card-body\">\n                        <div className=\"row mb-4\">\n                          <div className=\"col-md-12\">\n                            <MyTextArea\n                              id=\"conflictInfo\"\n                              name=\"conflictInfo\"\n                              type=\"text\"\n                              className=\"form-control\"\n                              label=\"Mübahisənin qısa məzmunu və mediasiyadan gözlənilən nəticələr *\"\n                              placeholder={\"Qısa məlumat daxil edin\"}\n                            />\n                          </div>\n                        </div>\n                        <div className=\"row mb-4\">\n                          <div className=\"col-md-12\">\n                            <div className=\"form-group form-check pl-0\">\n                              <div className=\"custom-control custom-checkbox checkbox-info\">\n                                <MyTextInput\n                                  type=\"checkbox\"\n                                  className=\"custom-control-input\"\n                                  id=\"caseInAction\"\n                                  name=\"caseInAction\"\n                                />\n                                <label\n                                  className=\"custom-control-label\"\n                                  htmlFor=\"caseInAction\"\n                                >\n                                  Bu mübahisə hazırda məhkəmə icraatındadır?\n                                </label>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"row mb-4\">\n                          <div className=\"col-md-12\">\n                            <MyTextArea\n                              id=\"courtCaseInfo\"\n                              name=\"courtCaseInfo\"\n                              type=\"text\"\n                              className=\"form-control\"\n                              label=\"Məhkəmə və iş barədə mulamatlar *\"\n                              placeholder={\n                                \"Məhkəmə və iş barədə məlumat daxil edin\"\n                              }\n                            />\n                          </div>\n                        </div>\n                        <div className=\"row mb-4\">\n                          <div className=\"col-md-6\">\n                            <MyTextInput\n                              id=\"prefferedSessionTime\"\n                              name=\"prefferedSessionTime\"\n                              type=\"text\"\n                              isMulti\n                              className=\"form-control\"\n                              label=\"Mediasiya sessiyalarının keçirilməsi üçün üstünlük verilən vaxt *\"\n                              placeholder={\"Sizə uyğun vaxtı daxil edin\"}\n                            />\n                          </div>\n                          <div className=\"col-md-6\">\n                            <MyTextInput\n                              id=\"requiredLangs\"\n                              name=\"requiredLangs\"\n                              type=\"text\"\n                              isMulti\n                              className=\"form-control\"\n                              label=\"Mediatordan tələb olunan dil biliyi *\"\n                              placeholder={\n                                \"Mediatordan tələb etdiyiniz dil biliyi\"\n                              }\n   \n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <button\n                  style={{ display: \"none\" }}\n                  id=\"closeModal\"\n                  onClick={() => {\n                    dispatch(closeModal());\n                  }}\n                  className=\"btn btn-lg float-right mt-3 mr-2\"\n                  data-dismiss=\"modal\"\n                >\n                  <i className=\"flaticon-cancel-12\" /> Ləğv et\n                </button>\n              </Form>\n            )}\n          </Formik>\n        </React.Fragment>\n      )}\n    </ModalWrapper>\n  );\n}\n","/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/roles/council/councilPage/ViewModalForCouncil.jsx",["317","318","319","320","321","322","323"],"import React, { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\n// import ScriptTag from 'react-script-tag';\nimport MyTextInput from \"../../../../../app/common/form/MyTextInput\";\nimport { Form, Formik } from \"formik\";\nimport { listenToApply } from \"./councilActions\";\nimport { closeModal } from \"../../../../../app/common/modal/modalReducer\";\nimport MyTextArea from \"../../../../../app/common/form/MyTextArea\";\n\nimport ModalWrapper from \"../../../../../app/common/modal/ModalWrapper\";\n\nexport default function ViewModalForCouncil({ apply }) {\n  const dispatch = useDispatch();\n  const [modal, setModal] = useState(false);\n  const async = useSelector((state) => state.async);\n  const { listenedApplyForCouncil } = useSelector((state) => state.council);\n  \n  useEffect(() => {\n    if (modal) {\n      $(\"#closeModal\").click();\n    }\n  });\n\n  useEffect(async () => {\n    apply && (await dispatch(listenToApply(apply.id)));\n  }, [dispatch]);\n\n  const initialValues = {\n    professionId:\n      listenedApplyForCouncil.profession &&\n      listenedApplyForCouncil.profession.professionName,\n    districtIds:\n      listenedApplyForCouncil.districts &&\n      listenedApplyForCouncil.districts.map(\n        (district) => ` ${district.districtName}`\n      ),\n    courtId: listenedApplyForCouncil.court && listenedApplyForCouncil.court.courtName,\n\n    // mediatrIds: listenedApplyForCouncil.court && listenedApplyForCouncil.court.map(court=> ` ${court.courtName}`  ),\n    officeId: \"\",\n    sides: listenedApplyForCouncil.sides && listenedApplyForCouncil.sides,\n    conflictInfo:  listenedApplyForCouncil.conflictInfo && listenedApplyForCouncil.conflictInfo,\n    courtCaseInfo: listenedApplyForCouncil.courtCaseInfo && listenedApplyForCouncil.courtCaseInfo,\n    prefferedSessionTime: listenedApplyForCouncil.prefferedSessionTime && listenedApplyForCouncil.prefferedSessionTime,\n    requiredLangs: listenedApplyForCouncil.requiredLangs && listenedApplyForCouncil.requiredLangs,\n    caseInAction: true,\n    // mediatorNames: [],\n  };\n  const validationSchema = Yup.object({});\n\n  useEffect(() => {\n    var toggler = document.getElementsByClassName(\"caret\");\n    var i;\n\n    for (i = 0; i < toggler.length; i++) {\n      toggler[i].addEventListener(\"click\", function () {\n        this.parentElement.querySelector(\".nested\").classList.toggle(\"active\");\n        this.classList.toggle(\"caret-down\");\n      });\n    }\n  }, []);\n  return (\n    <ModalWrapper size=\"modal-xl\" header={\"Müraciətim\"}>\n      {async.kind === \"listenToApply\" ? (\n        <div className=\"loader text-center\">\n          {\" \"}\n          <div className=\"loader-content\">\n            <div className=\"spinner-grow align-self-center\"></div>\n          </div>\n        </div>\n      ) : (\n        <React.Fragment>\n          <Formik\n            initialValues={initialValues}\n            validationSchema={validationSchema}\n          >\n            {({ values }) => (\n              <Form id=\"emp\">\n                <div id=\"iconsAccordion\" className=\"accordion-icons\">\n                  <div className=\"card\">\n                    <div className=\"card-header\" id=\"headingTwo3\">\n                      <section className=\"mb-0 mt-0\">\n                        <div\n                          role=\"menu\"\n                          className=\"show\"\n                          data-toggle=\"collapse\"\n                          data-target=\"#iconAccordionTwo\"\n                          aria-expanded=\"false\"\n                          aria-controls=\"iconAccordionTwo\"\n                        >\n                          <div className=\"accordion-icon\">\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              strokeWidth={2}\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              className=\"feather feather-box\"\n                            >\n                              <path d=\"M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z\" />\n                              <polyline points=\"3.27 6.96 12 12.01 20.73 6.96\" />\n                              <line x1={12} y1=\"22.08\" x2={12} y2={12} />\n                            </svg>\n                          </div>\n                          Ümumi məlumatlar\n                          <div className=\"icons\">\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              strokeWidth={2}\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              className=\"feather feather-chevron-down\"\n                            >\n                              <polyline points=\"6 9 12 15 18 9\" />\n                            </svg>\n                          </div>\n                        </div>\n                      </section>\n                    </div>\n                    <div\n                      id=\"iconAccordionTwo\"\n                      className=\"collapsed show\"\n                      aria-labelledby=\"headingTwo3\"\n                      data-parent=\"#iconsAccordion\"\n                    >\n                      <div className=\"card-body\">\n                        <div className=\"row mb-4\">\n                          <div className=\"col-md-12\">\n                            <MyTextInput\n                              id=\"professionId\"\n                              name=\"professionId\"\n                              type=\"text\"\n                              placeholder=\"İxtisas seçin\"\n                              className=\"form-control\"\n                              label={\"Mediatorun ixtisası *\"}\n                            />\n                          </div>\n                        </div>\n                        <div className=\"row mb-4\">\n                          <div className=\"col-md-12\">\n                            <MyTextInput\n                              id=\"districtIds\"\n                              name=\"districtIds\"\n                              type=\"text\"\n                              isMulti\n                              className=\"form-control\"\n                              placeholder=\"Məkan seçin\"\n                              label={\n                                \"Mediasiyanın keçirilməsi üçün üstünlük verilən yer *\"\n                              }\n                            />\n                          </div>\n                        </div>\n                        <div className=\"row mb-4\">\n                          <div className=\"col-md-12\">\n                            <MyTextInput\n                              id=\"courtId\"\n                              name=\"courtId\"\n                              type=\"text\"\n                              className=\"form-control\"\n                              placeholder=\"Məhkəmə seçin\"\n                              label={\n                                \"Mübahisə həll olunmazsa mübahisənin baxılacağı yer *\"\n                              }\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"card\">\n                    <div className=\"card-header\" id=\"headingOne3\">\n                      <section className=\"mb-0 mt-0\">\n                        <div\n                          role=\"menu\"\n                          className=\"collapsed\"\n                          data-toggle=\"collapse\"\n                          data-target=\"#iconAccordionOne\"\n                          aria-expanded=\"false\"\n                          aria-controls=\"iconAccordionOne\"\n                        >\n                          <div className=\"accordion-icon\">\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              strokeWidth={2}\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              className=\"feather feather-user\"\n                            >\n                              <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\" />\n                              <circle cx={12} cy={7} r={4} />\n                            </svg>\n                          </div>\n                          Mediator seçimi\n                          <div className=\"icons\">\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              strokeWidth={2}\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              className=\"feather feather-chevron-down\"\n                            >\n                              <polyline points=\"6 9 12 15 18 9\" />\n                            </svg>\n                          </div>\n                        </div>\n                      </section>\n                    </div>\n                    <div\n                      id=\"iconAccordionOne\"\n                      className=\"collapse\"\n                      aria-labelledby=\"headingOne3\"\n                      data-parent=\"#iconsAccordion\"\n                    >\n                      <div className=\"card-body\">\n                        <ul className=\"list-group list-group-media\">\n                          {listenedApplyForCouncil.mediatrs &&\n                            listenedApplyForCouncil.mediatrs.map((mediatr,index) => (\n                              <li key={index} className=\"list-group-item list-group-item-action\">\n                                <div className=\"media\">\n                                  <div className=\"mr-3\">\n                                    <img\n                                      alt=\"avatar\"\n                                      src=\"/assets/img/90x90.jpg\"\n                                      className=\"img-fluid rounded-circle\"\n                                    />\n                                  </div>\n                                  <div className=\"media-body\">\n                                    <h6 className=\"tx-inverse\">{`${mediatr.firstName} ${mediatr.lastName}`}</h6>\n                                    <p className=\"mg-b-0\">\n                                      {mediatr.registryNumber}\n                                    </p>\n                                  </div>\n                                </div>\n                              </li>\n                            ))}\n                        </ul>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"card\">\n                    <div className=\"card-header \" id=\"headingTwo3\">\n                      <section className=\"mb-0 mt-0\">\n                        <div\n                          role=\"menu\"\n                          className=\"collapsed\"\n                          data-toggle=\"collapse\"\n                          data-target=\"#iconAccordionThree\"\n                          aria-expanded=\"false\"\n                          aria-controls=\"iconAccordionThree\"\n                        >\n                          <div className=\"accordion-icon\">\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              strokeWidth={2}\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              className=\"feather feather-users\"\n                            >\n                              <path d=\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n                              <circle cx={9} cy={7} r={4} />\n                              <path d=\"M23 21v-2a4 4 0 0 0-3-3.87\" />\n                              <path d=\"M16 3.13a4 4 0 0 1 0 7.75\" />\n                            </svg>\n                          </div>\n                          Tərəflar barədə məlumatlar\n                          <div className=\"icons\">\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              strokeWidth={2}\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              className=\"feather feather-chevron-down\"\n                            >\n                              <polyline points=\"6 9 12 15 18 9\" />\n                            </svg>\n                          </div>\n                        </div>\n                      </section>\n                    </div>\n                    <div\n                      id=\"iconAccordionThree\"\n                      className=\"collapse\"\n                      aria-labelledby=\"headingTwo3\"\n                      data-parent=\"#iconsAccordion\"\n                    >\n                      <div className=\"card-body\">\n                        {!listenedApplyForCouncil.sides && (\n                          <div className=\"row\">\n                            <div className=\"col-md-12\">\n                              <h2 className=\"text-center\">\n                                Heç bir tərəf daxil edilməyib\n                              </h2>\n                            </div>\n                          </div>\n                        )}\n                        {listenedApplyForCouncil.sides &&\n                          listenedApplyForCouncil.sides.map((side, index) => (\n                            <React.Fragment key={index}>\n                              <div className=\"row\">\n                                <div className=\"col-xl-12 col-md-12 col-sm-12 col-12\">\n                                  <div\n                                    className=\"infobox-3 mb-4\"\n                                    style={{ width: \"100%\" }}\n                                  >\n                                    <div className=\"info-icon\">\n                                      <svg\n                                        xmlns=\"http://www.w3.org/2000/svg\"\n                                        width={24}\n                                        height={24}\n                                        viewBox=\"0 0 24 24\"\n                                        fill=\"none\"\n                                        stroke=\"currentColor\"\n                                        strokeWidth={2}\n                                        strokeLinecap=\"round\"\n                                        strokeLinejoin=\"round\"\n                                        className=\"feather feather-user\"\n                                      >\n                                        <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\" />\n                                        <circle cx={12} cy={7} r={4} />\n                                      </svg>\n                                    </div>\n                                    <h5 className=\"info-heading\">\n                                      Tərəf :\n                                      {` ${index + 1} - \n                                            ${\n                                              side.sideLastName\n                                            } \n                                            ${\n                                              side.sideFirstName\n          \n                                            } ${\n                                             side.sideMiddleName\n                                            }`\n                                      }\n                                    </h5>\n                                    {/* {console.log(values,'cins')} */}\n                                    <p className=\"info-text\">\n                                      <div className=\"row mb-4\">\n                                        <div className=\"col-md-4\">\n                                          <MyTextInput\n                                            id={`sides[${index}].sideLastName`}\n                                            name={`sides[${index}].sideLastName`}\n                                            type=\"text\"\n\n                                            className=\"form-control\"\n                                            placeholder=\"Soyadın daxil edin\"\n                                            label={\"Qarşı tərəfin soyadı *\"}\n                                          />\n                                        </div>\n                                        <div className=\"col-md-4\">\n                                          <MyTextInput\n                                            id={`sides[${index}].sideFirstName`}\n                                            name={`sides[${index}].sideFirstName`}\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            placeholder=\"Adın daxil edin\"\n                                            label={\"Qarşı tərəfin adı *\"}\n                                          />\n                                        </div>\n                                        <div className=\"col-md-4\">\n                                          <MyTextInput\n                                            id={`sides[${index}].sideMiddleName`}\n                                            name={`sides[${index}].sideMiddleName`}\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            placeholder=\"Ata adın daxil edin\"\n                                            label={\"Qarşı tərəfin ata adı *\"}\n                                          />\n                                        </div>\n                                      </div>\n                                      <div className=\"row mb-4\">\n                                        <div className=\"col-md-4\">\n                                          <MyTextInput\n                                            id={`sides[${index}].advocateFirstName`}\n                                            name={`sides[${index}].advocateFirstName`}\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            placeholder=\"Adın daxil edin\"\n                                            label={\"Nümayəndənin adı\"}\n                                          />\n                                        </div>\n                                        <div className=\"col-md-4\">\n                                          <MyTextInput\n                                            id={`sides[${index}].advocateLastName`}\n                                            name={`sides[${index}].advocateLastName`}\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            placeholder=\"Soyadın daxil edin\"\n                                            label={\"Nümayəndənin soyadı\"}\n                                          />\n                                        </div>\n                                        <div className=\"col-md-4\">\n                                          <MyTextInput\n                                            id={`sides[${index}].advocateMiddleName`}\n                                            name={`sides[${index}].advocateMiddleName`}\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            placeholder=\"Ata adın daxil edin\"\n                                            label={\"Nümayəndənin ata adı\"}\n                                          />\n                                        </div>\n                                      </div>\n\n                                      <div className=\"row mb-4\">\n                                        <div className=\"col-md-12\">\n                                          <MyTextInput\n                                            id={`sides[${index}].organizationName`}\n                                            name={`sides[${index}].organizationName`}\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            label=\"Hüquq şirkəti\"\n                                            placeholder={\n                                              \"Hüquq şirkət adı daxil edin\"\n                                            }\n                                          />\n                                        </div>\n                                      </div>\n                                      <div className=\"row mb-4\">\n                                        <div className=\"col-md-12\">\n                                          <MyTextInput\n                                            id={`sides[${index}].address`}\n                                            name={`sides[${index}].address`}\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            label=\"Ünvan *\"\n                                            placeholder={\"Ünval daxil edin\"}\n                                          />\n                                        </div>\n                                      </div>\n                                      <div className=\"row mb-4\">\n                                        <div className=\"col-md-6\">\n                                          <MyTextInput\n                                            id={`sides[${index}].phone`}\n                                            name={`sides[${index}].phone`}\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            label=\"Telefon *\"\n                                            placeholder={\n                                              \"Telefon nömrəsi daxil edin\"\n                                            }\n                                          />\n                                        </div>\n                                        <div className=\"col-md-6\">\n                                          <MyTextInput\n                                            id={`sides[${index}].email`}\n                                            name={`sides[${index}].email`}\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            label=\"E-mail\"\n                                            placeholder={\"E-mail daxil edin\"}\n                                          />\n                                        </div>\n                                      </div>\n                                    </p>\n                                    {/* <a class=\"info-link\" href=\"\">\n                                Discover <svg> ... </svg>\n                              </a> */}\n                                  </div>\n                                </div>\n                              </div>\n                            </React.Fragment>\n                          ))}\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"card\">\n                    <div className=\"card-header\" id=\"headingTwo3\">\n                      <section className=\"mb-0 mt-0\">\n                        <div\n                          role=\"menu\"\n                          className=\"collapsed\"\n                          data-toggle=\"collapse\"\n                          data-target=\"#iconAccordionForth\"\n                          aria-expanded=\"false\"\n                          aria-controls=\"iconAccordionForth\"\n                        >\n                          <div className=\"accordion-icon\">\n                            <svg\n                              viewBox=\"0 0 24 24\"\n                              width={24}\n                              height={24}\n                              stroke=\"currentColor\"\n                              strokeWidth={2}\n                              fill=\"none\"\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              className=\"css-i6dzq1\"\n                            >\n                              <path d=\"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z\" />\n                            </svg>\n                          </div>\n                          Mübahisə və mediasiya sessiyası\n                          <div className=\"icons\">\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              strokeWidth={2}\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              className=\"feather feather-chevron-down\"\n                            >\n                              <polyline points=\"6 9 12 15 18 9\" />\n                            </svg>\n                          </div>\n                        </div>\n                      </section>\n                    </div>\n                    <div\n                      id=\"iconAccordionForth\"\n                      className=\"collapse\"\n                      aria-labelledby=\"headingTwo3\"\n                      data-parent=\"#iconsAccordion\"\n                    >\n                      <div className=\"card-body\">\n                        <div className=\"row mb-4\">\n                          <div className=\"col-md-12\">\n                            <MyTextArea\n                              id=\"conflictInfo\"\n                              name=\"conflictInfo\"\n                              type=\"text\"\n                              className=\"form-control\"\n                              label=\"Mübahisənin qısa məzmunu və mediasiyadan gözlənilən nəticələr *\"\n                              placeholder={\"Qısa məlumat daxil edin\"}\n                            />\n                          </div>\n                        </div>\n                        <div className=\"row mb-4\">\n                          <div className=\"col-md-12\">\n                            <div className=\"form-group form-check pl-0\">\n                              <div className=\"custom-control custom-checkbox checkbox-info\">\n                                <MyTextInput\n                                  type=\"checkbox\"\n                                  className=\"custom-control-input\"\n                                  id=\"caseInAction\"\n                                  name=\"caseInAction\"\n                                />\n                                <label\n                                  className=\"custom-control-label\"\n                                  htmlFor=\"caseInAction\"\n                                >\n                                  Bu mübahisə hazırda məhkəmə icraatındadır?\n                                </label>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"row mb-4\">\n                          <div className=\"col-md-12\">\n                            <MyTextArea\n                              id=\"courtCaseInfo\"\n                              name=\"courtCaseInfo\"\n                              type=\"text\"\n                              className=\"form-control\"\n                              label=\"Məhkəmə və iş barədə mulamatlar *\"\n                              placeholder={\n                                \"Məhkəmə və iş barədə məlumat daxil edin\"\n                              }\n                            />\n                          </div>\n                        </div>\n                        <div className=\"row mb-4\">\n                          <div className=\"col-md-6\">\n                            <MyTextInput\n                              id=\"prefferedSessionTime\"\n                              name=\"prefferedSessionTime\"\n                              type=\"text\"\n                              isMulti\n                              className=\"form-control\"\n                              label=\"Mediasiya sessiyalarının keçirilməsi üçün üstünlük verilən vaxt *\"\n                              placeholder={\"Sizə uyğun vaxtı daxil edin\"}\n                            />\n                          </div>\n                          <div className=\"col-md-6\">\n                            <MyTextInput\n                              id=\"requiredLangs\"\n                              name=\"requiredLangs\"\n                              type=\"text\"\n                              isMulti\n                              className=\"form-control\"\n                              label=\"Mediatordan tələb olunan dil biliyi *\"\n                              placeholder={\n                                \"Mediatordan tələb etdiyiniz dil biliyi\"\n                              }\n   \n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <button\n                  style={{ display: \"none\" }}\n                  id=\"closeModal\"\n                  onClick={() => {\n                    dispatch(closeModal());\n                  }}\n                  className=\"btn btn-lg float-right mt-3 mr-2\"\n                  data-dismiss=\"modal\"\n                >\n                  <i className=\"flaticon-cancel-12\" /> Ləğv et\n                </button>\n              </Form>\n            )}\n          </Formik>\n        </React.Fragment>\n      )}\n    </ModalWrapper>\n  );\n}\n","/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/roles/citizen/citizenPage/AddModalForCitizen.jsx",["324","325","326","327","328","329","330"],"/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/roles/mediator/mediatorPage/mediatorActions.js",[],"/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/roles/council/councilPage/councilActions.js",[],"/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/roles/citizen/citizenPage/citizenActions.js",[],"/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/roles/citizen/citizenPage/ApplyPageForCitizen.jsx",["331","332","333","334","335"],"import moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport DataTable, { defaultThemes } from \"react-data-table-component\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { openModal } from \"../../../../../app/common/modal/modalReducer\";\nimport { loadPrint } from \"../../../applyPage/applyActions\";\n\nimport {\n  loadApply,\n} from \"./citizenActions\";\nexport default function ApplyPageForCitizen() {\n  const auth = useSelector((state) => state.auth);\n  const async = useSelector((state) => state.async);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadApply());\n  }, [dispatch]);\n  const [perPage, setPerPage] = useState(10);\n  const [PageNumber, setPageNumber] = useState(1);\n  const { applysOfCitizen, totalCount } = useSelector((state) => state.citizen);\n  const print = useSelector((state) => state.applys.prints);\n  const [hover, sethover] = useState(false);\n  const [target, setTarget] = useState({ id: null, name: null });\n\n  const data = applysOfCitizen;\n  const buttonStyleAdd = {\n    padding: \"9px\",\n    background: \"#ffffff\",\n    // fontSize: \"0.8em\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    // marginRight: \"35px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 64%)\",\n    // width: \"400px\",\n    // height: \"41px\",\n    color: \"#1b55e2\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonStyle = {\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    marginRight: \"35px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"43px\",\n    height: \"41px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonStyle1 = {\n    //   '&:hover':{\n    //     background:'#sdsdss'\n    //   },\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    marginRight: \"2px\",\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"36px\",\n    height: \"34px\",\n    // color: \"#1b55e2\",\n    // fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonHover = {\n    color: \"#1b55e2\",\n    fill: \"rgba(27, 85, 226, 0.23921568627450981)\",\n  };\n  const handlePageChange = (page) => {\n    dispatch(loadApply({ PageNumber: page, PageSize: perPage }));\n    setPageNumber(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    dispatch(loadApply({ PageNumber: page, PageSize: newPerPage }));\n    setPerPage(newPerPage);\n  };\n\n  const actions = (\n    <span\n      type=\"button\"\n      data-toggle=\"modal\"\n      data-target=\"#exampleModal\"\n      data-name=\"add\"\n      onClick={() => {\n        dispatch(\n          openModal({\n            modalType: \"AddModalForCitizen\",\n            modalProps: null,\n          })\n        );\n      }}\n      onMouseEnter={(e) => {\n        sethover(true);\n        setTarget({\n          ...target,\n          name: e.target.getAttribute(\"data-name\"),\n        });\n      }}\n      onMouseLeave={() => {\n        sethover(false);\n        setTarget(null);\n      }}\n      style={{\n        ...buttonStyleAdd,\n        ...(hover && target.name === \"add\" && buttonHover),\n      }}\n    >\n      Mediatora müraciət\n      <svg\n        // type=\"button\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width={24}\n        height={24}\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeWidth={2}\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        className=\"feather feather-plus icon-container\"\n      >\n        <line x1={12} y1={5} x2={12} y2={19} />\n        <line x1={5} y1={12} x2={19} y2={12} />\n      </svg>\n    </span>\n  );\n\n  const columns = [\n    {\n      name: \"Müraciət tarixi\",\n      cell: (apply) => <p>{moment(apply.createdDate).format(\"DD-MM-YYYY\")}</p>,\n      maxWidth: \"150px\",\n      sortable: true,\n    },\n\n    {\n      name: \"Mediator / Mediasiya təşkilatı\",\n      cell: (apply) => {\n        // for user\n        if (apply.selectedMediatr) {\n          return `${apply.selectedMediatr.firstName} ${apply.selectedMediatr.lastName}`;\n        } else if (apply.mediatrs.length > 0) {\n          let medArr = [];\n          apply.mediatrs.forEach((item) => {\n            medArr.push(`${item.firstName} ${item.lastName}`);\n          });\n          return <p>{medArr.join(\", \")}</p>;\n        } else if (apply.office) {\n          return <p>{apply.office.officeName}</p>;\n        } else {\n          return <p>Mediator təyin edilməyib</p>;\n        }\n      },\n      sortable: true,\n    },\n    {\n      name: \"Məhkəmə\",\n      selector: \"courtName\",\n      sortable: true,\n    },\n    {\n      name: \"Status\",\n      // selector: \"status\",\n      cell: (apply) => <p>{apply.status.statusName}</p>,\n      maxWidth: \"164px\",\n\n      sortable: true,\n    },\n\n    {\n      name: \"\",\n      cell: (apply) => (\n        <div className=\"action-btn\">\n          <svg\n            type=\"button\"\n            data-toggle=\"modal\"\n            data-target=\"#exampleModal\"\n            data-name=\"edit\"\n            onClick={() => {\n              dispatch(\n                openModal({\n                  modalType: \"ViewModalForCitizen\",\n                  modalProps: { apply },\n                })\n              );\n            }}\n            id={apply.id}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${apply.id}` &&\n                target.name === \"edit\" &&\n                buttonHover),\n            }}\n            className=\"icon-hover btn btn-rounded btn-primary mb-2 mr-4\"\n            viewBox=\"0 0 24 24\"\n            width={24}\n            height={24}\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            fill=\"none\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"css-i6dzq1\"\n          >\n            <path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\" />\n            <circle cx={12} cy={12} r={3} />\n          </svg>\n\n          {async.kind === \"print\" && target.id === `${apply.id}` ? (\n            <svg\n              style={buttonStyle1}\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width={24}\n              height={24}\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth={2}\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              className=\"feather feather-loader spin mr-2\"\n            >\n              <line x1={12} y1={2} x2={12} y2={6} />\n              <line x1={12} y1={18} x2={12} y2={22} />\n              <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\" />\n              <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\" />\n              <line x1={2} y1={12} x2={6} y2={12} />\n              <line x1={18} y1={12} x2={22} y2={12} />\n              <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\" />\n              <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\" />\n            </svg>\n          ) : (\n            <svg\n              type=\"button\"\n              data-name=\"print\"\n              id={apply.id}\n              onClick={(e) => {\n                if (apply.selectedMediatr) {\n                  dispatch(loadPrint(apply.id));\n                } else {\n                  toast.error(\n                    \"Seçdiyiniz müraciətə mediator təyin olunmadığı üçün çap versiyası mövcud deyildir.\"\n                  );\n                }\n              }}\n              onMouseEnter={(e) => {\n                sethover(true);\n                setTarget({\n                  ...target,\n                  id: e.target.id,\n                  name: e.target.getAttribute(\"data-name\"),\n                });\n                // console.log(e.target.getAttribute('data-name'))\n              }}\n              onMouseLeave={() => {\n                sethover(false);\n                setTarget();\n              }}\n              style={{\n                ...buttonStyle1,\n                ...(hover &&\n                  target.id === `${apply.id}` &&\n                  target.name === \"print\" &&\n                  buttonHover),\n              }}\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width={24}\n              height={24}\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth={2}\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              className=\"feather feather-printer\"\n            >\n              <polyline points=\"6 9 6 2 18 2 18 9\" />\n              <path d=\"M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2\" />\n              <rect x={6} y={14} width={12} height={8} />\n            </svg>\n          )}\n        </div>\n      ),\n    },\n  ];\n\n\n  return (\n    <React.Fragment>\n      {/* BEGIN applyPAGE CONTAINER */}\n      <div className=\"layout-px-spacing\">\n        <div className=\"row layout-top-spacing\">\n          <div className=\"col-xl-12 col-lg-12 col-sm-12  layout-spacing\">\n            <div className=\"widget-content widget-content-area br-6\">\n              <DataTable\n                // className=\"dataTables_wrapper container-fluid dt-bootstrap4 table-responsive\"\n                // selectableRows\n                title={\"Müraciətlərim\"}\n                columns={columns}\n                data={data}\n                pagination\n                paginationServer\n                paginationTotalRows={totalCount}\n                paginationDefaultPage={PageNumber}\n                onChangeRowsPerPage={handlePerRowsChange}\n                onChangePage={handlePageChange}\n                highlightOnHover\n                Clicked\n                actions={\n                  actions\n                }\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* END applyPAGE CONTAINER */}\n    </React.Fragment>\n  );\n}\n","/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/roles/mediator/mediatorPage/ApplyPageForMediator.jsx",["336","337","338","339","340"],"import moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport DataTable, { defaultThemes } from \"react-data-table-component\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { openModal } from \"../../../../../app/common/modal/modalReducer\";\n\nimport { loadApply } from \"./mediatorActions\";\nimport { loadPrint } from \"../../../applyPage/applyActions\";\n\nexport default function ApplyPageForMediator() {\n  const auth = useSelector((state) => state.auth);\n  const async = useSelector((state) => state.async);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadApply());\n  }, dispatch);\n  const [perPage, setPerPage] = useState(10);\n  const [PageNumber, setPageNumber] = useState(1);\n  const { applysOfMediator, totalCount } = useSelector((state) => state.mediator);\n  const print = useSelector((state) => state.applys.prints);\n  const [hover, sethover] = useState(false);\n  const [target, setTarget] = useState({ id: null, name: null });\n\n  const data = applysOfMediator;\n  const buttonStyle1 = {\n    //   '&:hover':{\n    //     background:'#sdsdss'\n    //   },\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    marginRight: \"2px\",\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"36px\",\n    height: \"34px\",\n    // color: \"#1b55e2\",\n    // fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonHover = {\n    color: \"#1b55e2\",\n    fill: \"rgba(27, 85, 226, 0.23921568627450981)\",\n  };\n  const handlePageChange = (page) => {\n    dispatch(loadApply({ PageNumber: page, PageSize: perPage }));\n    setPageNumber(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    dispatch(loadApply({ PageNumber: page, PageSize: newPerPage }));\n    setPerPage(newPerPage);\n  };\n\n\n  const columns = [\n    {\n      name: \"Müraciət tarixi\",\n      cell: (apply) => <p>{moment(apply.createdDate).format(\"DD-MM-YYYY\")}</p>,\n      maxWidth: \"150px\",\n      sortable: true,\n    },\n\n    {\n      name:\n        auth.currentUser && auth.currentUser.mediatr\n          ? \"Müraciət edən şəxs\"\n          : \"Mediator / Mediasiya təşkilatı\",\n      cell: (apply) => {\n        // for mediator\n        if (auth.currentUser.mediatr && apply.person) {\n          return `${apply.person.firstName} ${apply.person.lastName} ${apply.person.middleName}`;\n        } else if (!apply.selectedMediatr > 0 && auth.currentUser.office) {\n          return <p>Mediator təyin edilməyib</p>;\n        }\n      },\n      sortable: true,\n    },\n    {\n      name: \"Məhkəmə\",\n      selector: \"courtName\",\n      sortable: true,\n    },\n    {\n      name: \"Status\",\n      // selector: \"status\",\n      cell: (apply) => <p>{apply.status.statusName}</p>,\n      maxWidth: \"164px\",\n\n      sortable: true,\n    },\n\n    {\n      name: \"\",\n      cell: (apply) => (\n        <div className=\"action-btn\">\n          <svg\n            type=\"button\"\n            data-toggle=\"modal\"\n            data-target=\"#exampleModal\"\n            data-name=\"edit\"\n            onClick={() => {\n              dispatch(\n                openModal({\n                  modalType: \"ViewModalForMediator\",\n                  modalProps: { apply },\n                })\n              );\n            }}\n            id={apply.id}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${apply.id}` &&\n                target.name === \"edit\" &&\n                buttonHover),\n            }}\n            className=\"icon-hover btn btn-rounded btn-primary mb-2 mr-4\"\n            viewBox=\"0 0 24 24\"\n            width={24}\n            height={24}\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            fill=\"none\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"css-i6dzq1\"\n          >\n            <path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\" />\n            <circle cx={12} cy={12} r={3} />\n          </svg>\n\n          {async.kind === \"print\" && target.id === `${apply.id}` ? (\n            <svg\n              style={buttonStyle1}\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width={24}\n              height={24}\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth={2}\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              className=\"feather feather-loader spin mr-2\"\n            >\n              <line x1={12} y1={2} x2={12} y2={6} />\n              <line x1={12} y1={18} x2={12} y2={22} />\n              <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\" />\n              <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\" />\n              <line x1={2} y1={12} x2={6} y2={12} />\n              <line x1={18} y1={12} x2={22} y2={12} />\n              <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\" />\n              <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\" />\n            </svg>\n          ) : (\n            <svg\n              type=\"button\"\n              data-name=\"print\"\n              id={apply.id}\n              onClick={(e) => {\n                if (apply.selectedMediatr) {\n                  dispatch(loadPrint(apply.id));\n                } else {\n                  toast.error(\n                    \"Seçdiyiniz müraciətə mediator təyin olunmadığı üçün çap versiyası mövcud deyildir.\"\n                  );\n                }\n              }}\n              onMouseEnter={(e) => {\n                sethover(true);\n                setTarget({\n                  ...target,\n                  id: e.target.id,\n                  name: e.target.getAttribute(\"data-name\"),\n                });\n                // console.log(e.target.getAttribute('data-name'))\n              }}\n              onMouseLeave={() => {\n                sethover(false);\n                setTarget();\n              }}\n              style={{\n                ...buttonStyle1,\n                ...(hover &&\n                  target.id === `${apply.id}` &&\n                  target.name === \"print\" &&\n                  buttonHover),\n              }}\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width={24}\n              height={24}\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth={2}\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              className=\"feather feather-printer\"\n            >\n              <polyline points=\"6 9 6 2 18 2 18 9\" />\n              <path d=\"M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2\" />\n              <rect x={6} y={14} width={12} height={8} />\n            </svg>\n          )}\n        </div>\n      ),\n    },\n  ];\n\n\n  return (\n    <React.Fragment>\n      {/* BEGIN applyPAGE CONTAINER */}\n      <div className=\"layout-px-spacing\">\n        <div className=\"row layout-top-spacing\">\n          <div className=\"col-xl-12 col-lg-12 col-sm-12  layout-spacing\">\n            <div className=\"widget-content widget-content-area br-6\">\n              <DataTable\n                // className=\"dataTables_wrapper container-fluid dt-bootstrap4 table-responsive\"\n                // selectableRows\n                title={\"Daxil olan müraciətlər\"}\n                columns={columns}\n                data={data}\n                pagination\n                paginationServer\n                paginationTotalRows={totalCount}\n                paginationDefaultPage={PageNumber}\n                onChangeRowsPerPage={handlePerRowsChange}\n                onChangePage={handlePageChange}\n                highlightOnHover\n                Clicked\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* END applyPAGE CONTAINER */}\n    </React.Fragment>\n  );\n}\n","/Users/ict/Documents/GitHub/mediasiya/src/features/dashboard/roles/council/councilPage/ApplyPageForCouncil.jsx",["341","342","343","344","345","346"],"import moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport DataTable, { defaultThemes } from \"react-data-table-component\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { openModal } from \"../../../../../app/common/modal/modalReducer\";\nimport { loadPrint } from \"../../../applyPage/applyActions\";\n\nimport { assignMediator, loadApply } from \"./councilActions\";\nexport default function ApplyPageForCouncil() {\n  const auth = useSelector((state) => state.auth);\n  const async = useSelector((state) => state.async);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadApply({ pageSize: 100 }));\n  }, dispatch);\n  const [perPage, setPerPage] = useState(10);\n  const [PageNumber, setPageNumber] = useState(1);\n  const { applysOfCouncil, totalCount } = useSelector((state) => state.council);\n  const print = useSelector((state) => state.applys.prints);\n  const [hover, sethover] = useState(false);\n  const [target, setTarget] = useState({ id: null, name: null });\n\n  const data = applysOfCouncil;\n\n  const buttonStyle1 = {\n    //   '&:hover':{\n    //     background:'#sdsdss'\n    //   },\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    marginRight: \"2px\",\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"36px\",\n    height: \"34px\",\n    // color: \"#1b55e2\",\n    // fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonHover = {\n    color: \"#1b55e2\",\n    fill: \"rgba(27, 85, 226, 0.23921568627450981)\",\n  };\n  const handlePageChange = (page) => {\n    dispatch(loadApply({ PageNumber: page, PageSize: perPage }));\n    setPageNumber(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    dispatch(loadApply({ PageNumber: page, PageSize: newPerPage }));\n    setPerPage(newPerPage);\n  };\n\n  const columns = [\n    {\n      name: \"Müraciət tarixi\",\n      cell: (apply) => <p>{moment(apply.createdDate).format(\"DD-MM-YYYY\")}</p>,\n      maxWidth: \"150px\",\n      // sortable: true,\n    },\n    {\n      name: \"Müraciət edən şəxs\",\n      cell: (apply) => (\n        <p>{`${apply.person.firstName} ${apply.person.lastName} ${apply.person.middleName}`}</p>\n      ),\n      // sortable:true,\n    },\n    {\n      name: \"Mediator\",\n      cell: (apply) => {\n        // for user\n        if (apply.selectedMediatr) {\n          return `${apply.selectedMediatr.firstName} ${apply.selectedMediatr.lastName}`;\n        } else {\n          return <p>Mediator təyin edilməyib</p>;\n        }\n      },\n    },\n    {\n      name: \"Məhkəmə\",\n      selector: \"courtName\",\n    },\n    {\n      name: \"Status\",\n      // selector: \"status\",\n      cell: (apply) => <p>{apply.status.statusName}</p>,\n      maxWidth: \"164px\",\n    },\n    {\n      name: \"\",\n      cell: (apply) => (\n        <div className=\"action-btn\">\n          <svg\n            type=\"button\"\n            data-toggle=\"modal\"\n            data-target=\"#exampleModal\"\n            data-name=\"edit\"\n            onClick={() => {\n              dispatch(\n                openModal({\n                  modalType: \"ViewModalForCouncil\",\n                  modalProps: { apply },\n                })\n              );\n            }}\n            id={apply.id}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${apply.id}` &&\n                target.name === \"edit\" &&\n                buttonHover),\n            }}\n            className=\"icon-hover btn btn-rounded btn-primary mb-2 mr-4\"\n            viewBox=\"0 0 24 24\"\n            width={24}\n            height={24}\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            fill=\"none\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"css-i6dzq1\"\n          >\n            <path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\" />\n            <circle cx={12} cy={12} r={3} />\n          </svg>\n          {apply.status.id === 2 && (\n          <svg\n          type=\"button\"\n          id={apply.id}\n          data-name=\"assignMediatr\"\n          onClick={() => {\n            if (apply.status.id === 2) {\n              dispatch(assignMediator(apply.id));\n            } else {\n              toast.error(\n                <p>\n                  Seçdiyiniz müraciətə mediator təyin olunmadığı üçün bu\n                  funksionallıq aktiv deyil.\n                </p>\n              );\n            }\n          }}\n          onMouseEnter={(e) => {\n            sethover(true);\n            setTarget({\n              ...target,\n              id: e.target.id,\n              name: e.target.getAttribute(\"data-name\"),\n            });\n            // console.log(e.target.getAttribute('data-name'))\n          }}\n          onMouseLeave={() => {\n            sethover(false);\n            setTarget();\n          }}\n          style={{\n            ...buttonStyle1,\n            ...(hover &&\n              target.id === `${apply.id}` &&\n              target.name === \"assignMediatr\" &&\n              buttonHover),\n          }}\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width={24}\n          height={24}\n          viewBox=\"0 0 24 24\"\n          title=\"Mediator təyin et\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          className=\"feather feather-user-plus bs-tooltip\"\n        >\n          <rect\n            style={{\n              width: \"100%\",\n              height: \"100%\",\n              // fill: \"#69c\",\n              stroke: \"rgb(255 255 255 / 0%)\",\n              strokeWidth: \"5px\",\n              opacity: 0.5,\n              outline: \"none\",\n              background: \"none\",\n            }}\n          >\n            <title>Mediator təyin et</title>\n          </rect>\n          <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n          <circle cx=\"8.5\" cy={7} r={4} />\n          <line x1={20} y1={8} x2={20} y2={14} />\n          <line x1={23} y1={11} x2={17} y2={11} />\n        </svg>\n\n          )}\n          {async.kind === \"print\" && target.id === `${apply.id}` ? (\n            <svg\n              style={buttonStyle1}\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width={24}\n              height={24}\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth={2}\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              className=\"feather feather-loader spin mr-2\"\n            >\n              <line x1={12} y1={2} x2={12} y2={6} />\n              <line x1={12} y1={18} x2={12} y2={22} />\n              <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\" />\n              <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\" />\n              <line x1={2} y1={12} x2={6} y2={12} />\n              <line x1={18} y1={12} x2={22} y2={12} />\n              <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\" />\n              <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\" />\n            </svg>\n          ) : (\n            <svg\n              type=\"button\"\n              data-name=\"print\"\n              id={apply.id}\n              onClick={(e) => {\n                if (apply.selectedMediatr) {\n                  dispatch(loadPrint(apply.id));\n                } else {\n                  toast.error(\n                    \"Seçdiyiniz müraciətə mediator təyin olunmadığı üçün çap versiyası mövcud deyildir.\"\n                  );\n                }\n              }}\n              onMouseEnter={(e) => {\n                sethover(true);\n                setTarget({\n                  ...target,\n                  id: e.target.id,\n                  name: e.target.getAttribute(\"data-name\"),\n                });\n                // console.log(e.target.getAttribute('data-name'))\n              }}\n              onMouseLeave={() => {\n                sethover(false);\n                setTarget();\n              }}\n              style={{\n                ...buttonStyle1,\n                ...(hover &&\n                  target.id === `${apply.id}` &&\n                  target.name === \"print\" &&\n                  buttonHover),\n              }}\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width={24}\n              height={24}\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth={2}\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              className=\"feather feather-printer\"\n            >\n              <polyline points=\"6 9 6 2 18 2 18 9\" />\n              <path d=\"M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2\" />\n              <rect x={6} y={14} width={12} height={8} />\n            </svg>\n          )}\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      {/* BEGIN applyPAGE CONTAINER */}\n      <div className=\"layout-px-spacing\">\n        <div className=\"row layout-top-spacing\">\n          <div className=\"col-xl-12 col-lg-12 col-sm-12  layout-spacing\">\n            <div className=\"widget-content widget-content-area br-6\">\n              <DataTable\n                // className=\"dataTables_wrapper container-fluid dt-bootstrap4 table-responsive\"\n                // selectableRows\n                title={\"Müraciətlər\"}\n                columns={columns}\n                data={data}\n                pagination\n                paginationServer\n                paginationTotalRows={totalCount}\n                paginationDefaultPage={PageNumber}\n                onChangeRowsPerPage={handlePerRowsChange}\n                onChangePage={handlePageChange}\n                highlightOnHover\n                Clicked\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* END applyPAGE CONTAINER */}\n    </React.Fragment>\n  );\n}\n",{"ruleId":"347","replacedBy":"348"},{"ruleId":"349","replacedBy":"350"},{"ruleId":"347","replacedBy":"351"},{"ruleId":"349","replacedBy":"352"},{"ruleId":"353","severity":1,"message":"354","line":12,"column":8,"nodeType":"355","messageId":"356","endLine":12,"endColumn":17},{"ruleId":"357","severity":1,"message":"358","line":41,"column":5,"nodeType":"359","messageId":"360","endLine":42,"endColumn":13},{"ruleId":"353","severity":1,"message":"361","line":15,"column":9,"nodeType":"355","messageId":"356","endLine":15,"endColumn":22},{"ruleId":"362","severity":1,"message":"363","line":362,"column":13,"nodeType":"364","endLine":370,"endColumn":14},{"ruleId":"365","severity":1,"message":"366","line":362,"column":13,"nodeType":"364","endLine":370,"endColumn":14},{"ruleId":"362","severity":1,"message":"367","line":20,"column":15,"nodeType":"364","endLine":46,"endColumn":16},{"ruleId":"357","severity":1,"message":"358","line":14,"column":5,"nodeType":"359","messageId":"360","endLine":15,"endColumn":13},{"ruleId":"362","severity":1,"message":"363","line":20,"column":9,"nodeType":"364","endLine":25,"endColumn":10},{"ruleId":"353","severity":1,"message":"368","line":3,"column":21,"nodeType":"355","messageId":"356","endLine":3,"endColumn":34},{"ruleId":"353","severity":1,"message":"369","line":5,"column":10,"nodeType":"355","messageId":"356","endLine":5,"endColumn":18},{"ruleId":"353","severity":1,"message":"370","line":6,"column":10,"nodeType":"355","messageId":"356","endLine":6,"endColumn":14},{"ruleId":"353","severity":1,"message":"371","line":12,"column":3,"nodeType":"355","messageId":"356","endLine":12,"endColumn":14},{"ruleId":"372","severity":1,"message":"373","line":22,"column":6,"nodeType":"355","endLine":22,"endColumn":14},{"ruleId":"372","severity":1,"message":"374","line":22,"column":6,"nodeType":"355","endLine":22,"endColumn":14,"suggestions":"375"},{"ruleId":"353","severity":1,"message":"376","line":26,"column":9,"nodeType":"355","messageId":"356","endLine":26,"endColumn":14},{"ruleId":"353","severity":1,"message":"377","line":44,"column":9,"nodeType":"355","messageId":"356","endLine":44,"endColumn":20},{"ruleId":"378","severity":1,"message":"379","line":223,"column":19,"nodeType":"380","messageId":"381","endLine":223,"endColumn":41},{"ruleId":"378","severity":1,"message":"379","line":489,"column":19,"nodeType":"380","messageId":"381","endLine":489,"endColumn":41},{"ruleId":"353","severity":1,"message":"382","line":7,"column":10,"nodeType":"355","messageId":"356","endLine":7,"endColumn":15},{"ruleId":"353","severity":1,"message":"383","line":7,"column":17,"nodeType":"355","messageId":"356","endLine":7,"endColumn":27},{"ruleId":"353","severity":1,"message":"384","line":12,"column":3,"nodeType":"355","messageId":"356","endLine":12,"endColumn":12},{"ruleId":"353","severity":1,"message":"385","line":38,"column":9,"nodeType":"355","messageId":"356","endLine":38,"endColumn":14},{"ruleId":"353","severity":1,"message":"386","line":48,"column":10,"nodeType":"355","messageId":"356","endLine":48,"endColumn":17},{"ruleId":"353","severity":1,"message":"387","line":48,"column":19,"nodeType":"355","messageId":"356","endLine":48,"endColumn":29},{"ruleId":"353","severity":1,"message":"388","line":49,"column":10,"nodeType":"355","messageId":"356","endLine":49,"endColumn":18},{"ruleId":"353","severity":1,"message":"389","line":49,"column":20,"nodeType":"355","messageId":"356","endLine":49,"endColumn":31},{"ruleId":"372","severity":1,"message":"390","line":61,"column":13,"nodeType":"391","endLine":68,"endColumn":4},{"ruleId":"372","severity":1,"message":"392","line":68,"column":6,"nodeType":"393","endLine":68,"endColumn":16,"suggestions":"394"},{"ruleId":"353","severity":1,"message":"395","line":238,"column":9,"nodeType":"355","messageId":"356","endLine":238,"endColumn":23},{"ruleId":"353","severity":1,"message":"396","line":295,"column":9,"nodeType":"355","messageId":"356","endLine":295,"endColumn":25},{"ruleId":"365","severity":1,"message":"397","line":365,"column":25,"nodeType":"364","endLine":372,"endColumn":26},{"ruleId":"365","severity":1,"message":"397","line":507,"column":25,"nodeType":"364","endLine":514,"endColumn":26},{"ruleId":"365","severity":1,"message":"397","line":647,"column":43,"nodeType":"364","endLine":654,"endColumn":44},{"ruleId":"365","severity":1,"message":"397","line":744,"column":25,"nodeType":"364","endLine":751,"endColumn":26},{"ruleId":"365","severity":1,"message":"397","line":1079,"column":25,"nodeType":"364","endLine":1086,"endColumn":26},{"ruleId":"378","severity":1,"message":"379","line":1209,"column":31,"nodeType":"380","messageId":"381","endLine":1213,"endColumn":32},{"ruleId":"353","severity":1,"message":"398","line":3,"column":8,"nodeType":"355","messageId":"356","endLine":3,"endColumn":14},{"ruleId":"372","severity":1,"message":"399","line":20,"column":6,"nodeType":"393","endLine":20,"endColumn":16,"suggestions":"400"},{"ruleId":"353","severity":1,"message":"401","line":30,"column":7,"nodeType":"355","messageId":"356","endLine":30,"endColumn":22},{"ruleId":"353","severity":1,"message":"385","line":3,"column":7,"nodeType":"355","messageId":"356","endLine":3,"endColumn":12},{"ruleId":"347","replacedBy":"402"},{"ruleId":"349","replacedBy":"403"},{"ruleId":"353","severity":1,"message":"404","line":2,"column":10,"nodeType":"355","messageId":"356","endLine":2,"endColumn":16},{"ruleId":"353","severity":1,"message":"405","line":5,"column":10,"nodeType":"355","messageId":"356","endLine":5,"endColumn":15},{"ruleId":"353","severity":1,"message":"406","line":5,"column":23,"nodeType":"355","messageId":"356","endLine":5,"endColumn":30},{"ruleId":"353","severity":1,"message":"407","line":2,"column":8,"nodeType":"355","messageId":"356","endLine":2,"endColumn":14},{"ruleId":"353","severity":1,"message":"369","line":5,"column":10,"nodeType":"355","messageId":"356","endLine":5,"endColumn":18},{"ruleId":"353","severity":1,"message":"408","line":26,"column":9,"nodeType":"355","messageId":"356","endLine":26,"endColumn":13},{"ruleId":"353","severity":1,"message":"409","line":171,"column":9,"nodeType":"355","messageId":"356","endLine":171,"endColumn":22},{"ruleId":"353","severity":1,"message":"410","line":265,"column":10,"nodeType":"355","messageId":"356","endLine":265,"endColumn":14},{"ruleId":"353","severity":1,"message":"411","line":265,"column":16,"nodeType":"355","messageId":"356","endLine":265,"endColumn":23},{"ruleId":"365","severity":1,"message":"412","line":355,"column":33,"nodeType":"364","endLine":362,"endColumn":34},{"ruleId":"365","severity":1,"message":"412","line":606,"column":33,"nodeType":"364","endLine":613,"endColumn":34},{"ruleId":"365","severity":1,"message":"412","line":748,"column":33,"nodeType":"364","endLine":755,"endColumn":34},{"ruleId":"365","severity":1,"message":"412","line":896,"column":33,"nodeType":"364","endLine":903,"endColumn":34},{"ruleId":"365","severity":1,"message":"412","line":1078,"column":33,"nodeType":"364","endLine":1085,"endColumn":34},{"ruleId":"365","severity":1,"message":"412","line":1159,"column":33,"nodeType":"364","endLine":1166,"endColumn":34},{"ruleId":"372","severity":1,"message":"390","line":29,"column":13,"nodeType":"391","endLine":31,"endColumn":4},{"ruleId":"372","severity":1,"message":"392","line":31,"column":6,"nodeType":"393","endLine":31,"endColumn":16,"suggestions":"413"},{"ruleId":"365","severity":1,"message":"397","line":98,"column":25,"nodeType":"364","endLine":105,"endColumn":26},{"ruleId":"365","severity":1,"message":"397","line":198,"column":25,"nodeType":"364","endLine":205,"endColumn":26},{"ruleId":"365","severity":1,"message":"397","line":278,"column":25,"nodeType":"364","endLine":285,"endColumn":26},{"ruleId":"365","severity":1,"message":"397","line":508,"column":25,"nodeType":"364","endLine":515,"endColumn":26},{"ruleId":"353","severity":1,"message":"414","line":16,"column":17,"nodeType":"355","messageId":"356","endLine":16,"endColumn":25},{"ruleId":"372","severity":1,"message":"390","line":26,"column":13,"nodeType":"391","endLine":28,"endColumn":4},{"ruleId":"372","severity":1,"message":"392","line":28,"column":6,"nodeType":"393","endLine":28,"endColumn":16,"suggestions":"415"},{"ruleId":"365","severity":1,"message":"397","line":86,"column":25,"nodeType":"364","endLine":93,"endColumn":26},{"ruleId":"365","severity":1,"message":"397","line":186,"column":25,"nodeType":"364","endLine":193,"endColumn":26},{"ruleId":"365","severity":1,"message":"397","line":266,"column":25,"nodeType":"364","endLine":273,"endColumn":26},{"ruleId":"365","severity":1,"message":"397","line":503,"column":25,"nodeType":"364","endLine":510,"endColumn":26},{"ruleId":"353","severity":1,"message":"414","line":16,"column":17,"nodeType":"355","messageId":"356","endLine":16,"endColumn":25},{"ruleId":"372","severity":1,"message":"390","line":26,"column":13,"nodeType":"391","endLine":28,"endColumn":4},{"ruleId":"372","severity":1,"message":"392","line":28,"column":6,"nodeType":"393","endLine":28,"endColumn":16,"suggestions":"416"},{"ruleId":"365","severity":1,"message":"397","line":85,"column":25,"nodeType":"364","endLine":92,"endColumn":26},{"ruleId":"365","severity":1,"message":"397","line":185,"column":25,"nodeType":"364","endLine":192,"endColumn":26},{"ruleId":"365","severity":1,"message":"397","line":265,"column":25,"nodeType":"364","endLine":272,"endColumn":26},{"ruleId":"365","severity":1,"message":"397","line":502,"column":25,"nodeType":"364","endLine":509,"endColumn":26},{"ruleId":"372","severity":1,"message":"390","line":45,"column":13,"nodeType":"391","endLine":50,"endColumn":4},{"ruleId":"365","severity":1,"message":"397","line":268,"column":25,"nodeType":"364","endLine":275,"endColumn":26},{"ruleId":"365","severity":1,"message":"397","line":369,"column":25,"nodeType":"364","endLine":376,"endColumn":26},{"ruleId":"365","severity":1,"message":"397","line":496,"column":45,"nodeType":"364","endLine":503,"endColumn":46},{"ruleId":"365","severity":1,"message":"397","line":590,"column":25,"nodeType":"364","endLine":597,"endColumn":26},{"ruleId":"365","severity":1,"message":"397","line":910,"column":25,"nodeType":"364","endLine":917,"endColumn":26},{"ruleId":"378","severity":1,"message":"379","line":1031,"column":31,"nodeType":"380","messageId":"381","endLine":1033,"endColumn":32},{"ruleId":"353","severity":1,"message":"368","line":3,"column":21,"nodeType":"355","messageId":"356","endLine":3,"endColumn":34},{"ruleId":"353","severity":1,"message":"408","line":13,"column":9,"nodeType":"355","messageId":"356","endLine":13,"endColumn":13},{"ruleId":"353","severity":1,"message":"376","line":22,"column":9,"nodeType":"355","messageId":"356","endLine":22,"endColumn":14},{"ruleId":"353","severity":1,"message":"377","line":40,"column":9,"nodeType":"355","messageId":"356","endLine":40,"endColumn":20},{"ruleId":"378","severity":1,"message":"379","line":222,"column":13,"nodeType":"380","messageId":"381","endLine":222,"endColumn":35},{"ruleId":"353","severity":1,"message":"368","line":3,"column":21,"nodeType":"355","messageId":"356","endLine":3,"endColumn":34},{"ruleId":"372","severity":1,"message":"373","line":17,"column":6,"nodeType":"355","endLine":17,"endColumn":14},{"ruleId":"372","severity":1,"message":"374","line":17,"column":6,"nodeType":"355","endLine":17,"endColumn":14,"suggestions":"417"},{"ruleId":"353","severity":1,"message":"376","line":21,"column":9,"nodeType":"355","messageId":"356","endLine":21,"endColumn":14},{"ruleId":"378","severity":1,"message":"379","line":142,"column":13,"nodeType":"380","messageId":"381","endLine":142,"endColumn":35},{"ruleId":"353","severity":1,"message":"368","line":3,"column":21,"nodeType":"355","messageId":"356","endLine":3,"endColumn":34},{"ruleId":"353","severity":1,"message":"408","line":11,"column":9,"nodeType":"355","messageId":"356","endLine":11,"endColumn":13},{"ruleId":"372","severity":1,"message":"373","line":16,"column":6,"nodeType":"355","endLine":16,"endColumn":14},{"ruleId":"372","severity":1,"message":"374","line":16,"column":6,"nodeType":"355","endLine":16,"endColumn":14,"suggestions":"418"},{"ruleId":"353","severity":1,"message":"376","line":20,"column":9,"nodeType":"355","messageId":"356","endLine":20,"endColumn":14},{"ruleId":"378","severity":1,"message":"379","line":139,"column":13,"nodeType":"380","messageId":"381","endLine":139,"endColumn":35},"no-native-reassign",["419"],"no-negated-in-lhs",["420"],["419"],["420"],"no-unused-vars","'ApplyPage' is defined but never used.","Identifier","unusedVar","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","'isSignupStyle' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/role-supports-aria-props","The attribute aria-haspopup is not supported by the role link. This role is implicit on the element a.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'defaultThemes' is defined but never used.","'Redirect' is defined but never used.","'Link' is defined but never used.","'deleteApply' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["421"],"'print' is assigned a value but never used.","'buttonStyle' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'Field' is defined but never used.","'FieldArray' is defined but never used.","'loadApply' is defined but never used.","'nodes' is assigned a value but never used.","'checked' is assigned a value but never used.","'setChecked' is assigned a value but never used.","'expanded' is assigned a value but never used.","'setExpanded' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'apply'. Either include it or remove the dependency array.","ArrayExpression",["422"],"'groupedOptions' is assigned a value but never used.","'formatGroupLabel' is assigned a value but never used.","The attribute aria-expanded is not supported by the role menu.","'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'auth.currentUser.office.id'. Either include it or remove the dependency array.",["423"],"'employeeOptions' is assigned a value but never used.",["419"],["420"],"'Formik' is defined but never used.","'field' is assigned a value but never used.","'helpers' is assigned a value but never used.","'moment' is defined but never used.","'auth' is assigned a value but never used.","'officeOptions' is assigned a value but never used.","'page' is assigned a value but never used.","'setPage' is assigned a value but never used.","The attribute aria-expanded is not supported by the role navigation.",["424"],"'setModal' is assigned a value but never used.",["425"],["426"],["427"],["428"],"no-global-assign","no-unsafe-negation",{"desc":"429","fix":"430"},{"desc":"431","fix":"432"},{"desc":"433","fix":"434"},{"desc":"431","fix":"435"},{"desc":"431","fix":"436"},{"desc":"431","fix":"437"},{"desc":"429","fix":"438"},{"desc":"429","fix":"439"},"Update the dependencies array to be: [dispatch]",{"range":"440","text":"441"},"Update the dependencies array to be: [apply, dispatch]",{"range":"442","text":"443"},"Update the dependencies array to be: [auth.currentUser.office.id, dispatch]",{"range":"444","text":"445"},{"range":"446","text":"443"},{"range":"447","text":"443"},{"range":"448","text":"443"},{"range":"449","text":"441"},{"range":"450","text":"441"},[737,745],"[dispatch]",[2024,2034],"[apply, dispatch]",[951,961],"[auth.currentUser.office.id, dispatch]",[1205,1215],[1015,1025],[1020,1030],[671,679],[701,709]]