{"ast":null,"code":"import axios from \"axios\";\nimport jwtDecode from \"jwt-decode\";\nimport { SIGN_IN_USER, SIGN_OUT_USER } from \"./authConstants\";\nconst initialState = {\n  authenticated: false,\n  currentUser: {}\n};\n\nconst getAuthState = () => {\n  const auth = localStorage.getItem(\"currentUser\");\n\n  try {\n    const authObj = JSON.parse(auth);\n    const jwToken = authObj.currentUser.token;\n    const decodedToken = jwtDecode(jwToken, {\n      complete: true\n    });\n    const expiresAt = decodedToken.exp;\n\n    if (new Date(expiresAt * 1000) > new Date()) {\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${jwToken}`;\n      return authObj;\n    }\n\n    return initialState;\n  } catch (error) {\n    return initialState;\n  }\n};\n\nlet currentUser = getAuthState();\nexport default function authReducer(state = currentUser, {\n  type,\n  payload\n}) {\n  switch (type) {\n    case SIGN_IN_USER:\n      var currentUser = { ...state,\n        authenticated: true,\n        currentUser: { ...payload\n        }\n      };\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${payload.token}`;\n      localStorage.setItem(\"currentUser\", JSON.stringify(currentUser));\n      return currentUser;\n\n    case SIGN_OUT_USER:\n      localStorage.removeItem(\"currentUser\");\n      currentUser = {\n        authenticated: false,\n        currentUser: null\n      };\n      return currentUser;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/ict/Documents/GitHub/mediasiya/src/features/auth/authReducer.js"],"names":["axios","jwtDecode","SIGN_IN_USER","SIGN_OUT_USER","initialState","authenticated","currentUser","getAuthState","auth","localStorage","getItem","authObj","JSON","parse","jwToken","token","decodedToken","complete","expiresAt","exp","Date","defaults","headers","common","error","authReducer","state","type","payload","setItem","stringify","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,iBAA5C;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,aAAa,EAAE,KADI;AAEnBC,EAAAA,WAAW,EAAE;AAFM,CAArB;;AAIA,MAAMC,YAAY,GAAG,MAAM;AACzB,QAAMC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAb;;AACA,MAAI;AACF,UAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWL,IAAX,CAAhB;AACA,UAAMM,OAAO,GAAGH,OAAO,CAACL,WAAR,CAAoBS,KAApC;AACA,UAAMC,YAAY,GAAGf,SAAS,CAACa,OAAD,EAAU;AACtCG,MAAAA,QAAQ,EAAE;AAD4B,KAAV,CAA9B;AAGA,UAAMC,SAAS,GAAGF,YAAY,CAACG,GAA/B;;AAEA,QAAI,IAAIC,IAAJ,CAASF,SAAS,GAAG,IAArB,IAA6B,IAAIE,IAAJ,EAAjC,EAA6C;AAC3CpB,MAAAA,KAAK,CAACqB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,UAAST,OAAQ,EAAnE;AACA,aAAOH,OAAP;AACD;;AAED,WAAOP,YAAP;AACD,GAdD,CAcE,OAAOoB,KAAP,EAAc;AACd,WAAOpB,YAAP;AACD;AACF,CAnBD;;AAoBA,IAAIE,WAAW,GAAGC,YAAY,EAA9B;AAEA,eAAe,SAASkB,WAAT,CAAqBC,KAAK,GAAGpB,WAA7B,EAA0C;AAAEqB,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAA1C,EAA6D;AAC1E,UAAQD,IAAR;AACE,SAAKzB,YAAL;AACE,UAAII,WAAW,GAAG,EAChB,GAAGoB,KADa;AAEhBrB,QAAAA,aAAa,EAAE,IAFC;AAGhBC,QAAAA,WAAW,EAAE,EACX,GAAGsB;AADQ;AAHG,OAAlB;AAQA5B,MAAAA,KAAK,CAACqB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CACE,eADF,IAEK,UAASK,OAAO,CAACb,KAAM,EAF5B;AAGAN,MAAAA,YAAY,CAACoB,OAAb,CAAqB,aAArB,EAAoCjB,IAAI,CAACkB,SAAL,CAAexB,WAAf,CAApC;AACA,aAAOA,WAAP;;AACF,SAAKH,aAAL;AACEM,MAAAA,YAAY,CAACsB,UAAb,CAAwB,aAAxB;AAEAzB,MAAAA,WAAW,GAAG;AACZD,QAAAA,aAAa,EAAE,KADH;AAEZC,QAAAA,WAAW,EAAE;AAFD,OAAd;AAIA,aAAOA,WAAP;;AAEF;AACE,aAAOoB,KAAP;AAzBJ;AA2BD","sourcesContent":["import axios from \"axios\";\nimport jwtDecode from \"jwt-decode\";\n\nimport { SIGN_IN_USER, SIGN_OUT_USER } from \"./authConstants\";\n\nconst initialState = {\n  authenticated: false,\n  currentUser: {},\n};\nconst getAuthState = () => {\n  const auth = localStorage.getItem(\"currentUser\");\n  try {\n    const authObj = JSON.parse(auth);\n    const jwToken = authObj.currentUser.token;\n    const decodedToken = jwtDecode(jwToken, {\n      complete: true,\n    });\n    const expiresAt = decodedToken.exp;\n\n    if (new Date(expiresAt * 1000) > new Date()) {\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${jwToken}`;\n      return authObj;\n    }\n\n    return initialState;\n  } catch (error) {\n    return initialState;\n  }\n};\nlet currentUser = getAuthState();\n\nexport default function authReducer(state = currentUser, { type, payload }) {\n  switch (type) {\n    case SIGN_IN_USER:\n      var currentUser = {\n        ...state,\n        authenticated: true,\n        currentUser: {\n          ...payload,\n        },\n      };\n\n      axios.defaults.headers.common[\n        \"Authorization\"\n      ] = `Bearer ${payload.token}`;\n      localStorage.setItem(\"currentUser\", JSON.stringify(currentUser));\n      return currentUser;\n    case SIGN_OUT_USER:\n      localStorage.removeItem(\"currentUser\");\n\n      currentUser = {\n        authenticated: false,\n        currentUser: null,\n      };\n      return currentUser;\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}